<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup Label="Globals">
    <ProjectGuid>{15cd6b0d-0744-4102-b7b5-650754142c89}</ProjectGuid>
    <RootNamespace />
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>

  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>

  <Import Project="$(VCTargetsPath)Microsoft.Cpp.Default.props" />
  <Import Project="$(VCTargetsPath)Microsoft.Cpp.props" />

  <ImportGroup Label="PropertySheets" />
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="product.props" />
    <Import Project="debug.props" />
    <Import Project="x86.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="product.props" />
    <Import Project="release.props" />
    <Import Project="x86.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="product.props" />
    <Import Project="debug.props" />
    <Import Project="x64.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="product.props" />
    <Import Project="release.props" />
    <Import Project="x64.props" />
  </ImportGroup>

  <PropertyGroup>
    <_ProjectFileVersion>10</_ProjectFileVersion>

    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(BinDir)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ObjDir)\bits\</IntDir>
    <CustomBuildBeforeTargets Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">PreBuildEvent</CustomBuildBeforeTargets>

    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(BinDir)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ObjDir)\bits\</IntDir>
    <CustomBuildBeforeTargets Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">PreBuildEvent</CustomBuildBeforeTargets>

    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(BinDir)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ObjDir)\bits\</IntDir>
    <CustomBuildBeforeTargets Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">PreBuildEvent</CustomBuildBeforeTargets>

    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(BinDir)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ObjDir)\bits\</IntDir>
    <CustomBuildBeforeTargets Condition="'$(Configuration)|$(Platform)'=='Release|x64'">PreBuildEvent</CustomBuildBeforeTargets>
  </PropertyGroup>

  <ItemDefinitionGroup>
  <Link>
    <AdditionalDependencies>;%(AdditionalDependencies)</AdditionalDependencies>
    <AdditionalLibraryDirectories>$(OutDir);;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
  </Link>

  <CustomBuildStep>
    <Command>cd ..\..
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\bit.es $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\configure.es $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\embedthis-manifest.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\embedthis.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\embedthis.es $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\gendoc.es $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\generate.es $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
if not exist $(BinDir)\bits md $(BinDir)\bits
xcopy /S /Y bits\os $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\os\freebsd.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\os\gcc.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\os\linux.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\os\macosx.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\os\solaris.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\os\unix.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\os\vxworks.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\os\windows.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
if not exist $(BinDir)\bits md $(BinDir)\bits
xcopy /S /Y bits\packs $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\appweb-embed.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\appweb.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\compiler.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\doxygen.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\dsi.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\dumpbin.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\ejs.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\ejscript.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\est.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\http.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\lib.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\link.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\man.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\man2html.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\matrixssl.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\md5.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\nanossl.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\openssl.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\pcre.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\pmaker.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\ranlib.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\rc.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\sqlite.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\ssl.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\strip.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\tidy.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\utest.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\vxworks.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\winsdk.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\zip.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\packs\zlib.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\sample-main.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\sample-start.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\simple.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\standard.bit $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\vstudio.es $(BinDir)\bits
if exist $(BinDir)\bits del /Q $(BinDir)\bits
copy /Y bits\xcode.es $(BinDir)\bits
cd projects\bit-windows-default</Command>
    <Outputs>$(BinDir)\bits</Outputs>
  </CustomBuildStep>
  </ItemDefinitionGroup>

  <Import Project="$(VCTargetsPath)Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>

</Project>
