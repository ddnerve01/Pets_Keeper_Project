/*
    ssl.bit - SSL support. This is the interface above SSL providers: est, matrixssl, nanossl, openssl
 */

Bit.pack({
    ssl: {
        description: 'Secure Socket Layer Interface',
        discover: [ 'est', 'matrixssl', 'nanossl', 'openssl' ],
        depends:  [ 'est', 'matrixssl', 'nanossl', 'openssl' ],
        scripts: {
            config: function (pack) {
                let provider
                for each (p in pack.discover) {
                    if (bit.packs[p].enable && bit.packs[p].explicit) {
                        provider = p
                        break
                    }
                }
                for each (p in pack.discover) {
                    if (p == provider) {
                        continue
                    }
                    if (bit.packs[p] && bit.packs[p].enable && !provider) {
                        provider = p
                    } else if (provider) {
                        bit.packs[p].enable = false
                        bit.packs[p].diagnostic = 'Using the ' + provider + ' SSL provider instead.'
                    }
                }
                if (provider) {
                    let from = bit.packs[provider]
                    pack.provider = provider
                    for each (field in ['defines', 'includes', 'libraries', 'libpaths', 'imports']) {
                        if (from[field]) {
                            pack[field] = from[field]
                        }
                    }
                    pack.description += ' (' + bit.packs[provider].description + ')'

                } else {
                    throw "No enabled SSL providers"
                }
            },
            without: function(pack) {
                for each (p in pack.discover) {
                    bit.packs[p].enable = false
                    bit.packs[p].diagnostic = 'configured --without ssl'
                }
            },
        },
    },
})
