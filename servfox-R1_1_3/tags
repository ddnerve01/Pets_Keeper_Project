!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APP_data	videodev2.h	/^	char APP_data[60];      \/* Data in the JPEG APPn segment. *\/$/;"	m	struct:v4l2_jpegcompression
APP_len	videodev2.h	/^	int  APP_len;           \/* Length of data in JPEG APPn segment *\/$/;"	m	struct:v4l2_jpegcompression
APPn	videodev2.h	/^	int  APPn;              \/* Number of APP segment to be written,$/;"	m	struct:v4l2_jpegcompression
AVIF_COPYRIGHTED	avilib.c	397;"	d	file:
AVIF_COPYRIGHTED	avilib.c	665;"	d	file:
AVIF_HASINDEX	avilib.c	392;"	d	file:
AVIF_HASINDEX	avilib.c	660;"	d	file:
AVIF_ISINTERLEAVED	avilib.c	394;"	d	file:
AVIF_ISINTERLEAVED	avilib.c	662;"	d	file:
AVIF_MUSTUSEINDEX	avilib.c	393;"	d	file:
AVIF_MUSTUSEINDEX	avilib.c	661;"	d	file:
AVIF_TRUSTCKTYPE	avilib.c	395;"	d	file:
AVIF_TRUSTCKTYPE	avilib.c	663;"	d	file:
AVIF_WASCAPTUREFILE	avilib.c	396;"	d	file:
AVIF_WASCAPTUREFILE	avilib.c	664;"	d	file:
AVILIB_H	avilib.h	57;"	d
AVISTREAMINFO	avilib.h	/^} AVISTREAMINFO;$/;"	t	typeref:struct:__anon35
AVIStreamHeader	avilib.h	/^struct AVIStreamHeader {$/;"	s
AVI_ERR_CLOSE	avilib.h	215;"	d
AVI_ERR_NOT_PERM	avilib.h	219;"	d
AVI_ERR_NO_AVI	avilib.h	225;"	d
AVI_ERR_NO_HDRL	avilib.h	227;"	d
AVI_ERR_NO_IDX	avilib.h	235;"	d
AVI_ERR_NO_MEM	avilib.h	223;"	d
AVI_ERR_NO_MOVI	avilib.h	230;"	d
AVI_ERR_NO_VIDS	avilib.h	233;"	d
AVI_ERR_OPEN	avilib.h	203;"	d
AVI_ERR_READ	avilib.h	206;"	d
AVI_ERR_SIZELIM	avilib.h	198;"	d
AVI_ERR_WRITE	avilib.h	208;"	d
AVI_ERR_WRITE_INDEX	avilib.h	211;"	d
AVI_MAX_LEN	avilib.c	98;"	d	file:
AVI_MAX_TRACKS	avilib.h	59;"	d
AVI_MODE_READ	avilib.h	194;"	d
AVI_MODE_WRITE	avilib.h	193;"	d
AVI_append_audio	avilib.c	/^int AVI_append_audio(avi_t *AVI, char *data, long bytes)$/;"	f
AVI_audio_bits	avilib.c	/^int AVI_audio_bits(avi_t *AVI)$/;"	f
AVI_audio_bytes	avilib.c	/^long AVI_audio_bytes(avi_t *AVI)$/;"	f
AVI_audio_channels	avilib.c	/^int AVI_audio_channels(avi_t *AVI)$/;"	f
AVI_audio_chunks	avilib.c	/^long AVI_audio_chunks(avi_t *AVI)$/;"	f
AVI_audio_codecf_offset	avilib.c	/^long AVI_audio_codecf_offset(avi_t *AVI)$/;"	f
AVI_audio_codech_offset	avilib.c	/^long AVI_audio_codech_offset(avi_t *AVI)$/;"	f
AVI_audio_format	avilib.c	/^int AVI_audio_format(avi_t *AVI)$/;"	f
AVI_audio_mp3rate	avilib.c	/^long AVI_audio_mp3rate(avi_t *AVI)$/;"	f
AVI_audio_rate	avilib.c	/^long AVI_audio_rate(avi_t *AVI)$/;"	f
AVI_audio_size	avilib.c	/^long AVI_audio_size(avi_t *AVI, long frame)$/;"	f
AVI_audio_tracks	avilib.c	/^int AVI_audio_tracks(avi_t *AVI)$/;"	f
AVI_bytes_remain	avilib.c	/^long AVI_bytes_remain(avi_t *AVI)$/;"	f
AVI_bytes_written	avilib.c	/^long AVI_bytes_written(avi_t *AVI)$/;"	f
AVI_close	avilib.c	/^int AVI_close(avi_t *AVI)$/;"	f
AVI_dup_frame	avilib.c	/^int AVI_dup_frame(avi_t *AVI)$/;"	f
AVI_errno	avilib.c	/^long AVI_errno = 0;$/;"	v
AVI_frame_rate	avilib.c	/^double AVI_frame_rate(avi_t *AVI)$/;"	f
AVI_frame_size	avilib.c	/^long AVI_frame_size(avi_t *AVI, long frame)$/;"	f
AVI_get_audio_track	avilib.c	/^int AVI_get_audio_track(avi_t *AVI)$/;"	f
AVI_get_video_position	avilib.c	/^long AVI_get_video_position(avi_t *AVI, long frame)$/;"	f
AVI_max_size	avilib.c	/^uint64_t AVI_max_size()$/;"	f
AVI_max_video_chunk	avilib.c	/^long AVI_max_video_chunk(avi_t *AVI)$/;"	f
AVI_open_fd	avilib.c	/^avi_t *AVI_open_fd(int fd, int getIndex)$/;"	f
AVI_open_input_file	avilib.c	/^avi_t *AVI_open_input_file(const char *filename, int getIndex)$/;"	f
AVI_open_output_file	avilib.c	/^avi_t* AVI_open_output_file(char * filename)$/;"	f
AVI_print_error	avilib.c	/^void AVI_print_error(char *str)$/;"	f
AVI_read_audio	avilib.c	/^long AVI_read_audio(avi_t *AVI, char *audbuf, long bytes)$/;"	f
AVI_read_audio_chunk	avilib.c	/^long AVI_read_audio_chunk(avi_t *AVI, char *audbuf)$/;"	f
AVI_read_data	avilib.c	/^int AVI_read_data(avi_t *AVI, char *vidbuf, long max_vidbuf,$/;"	f
AVI_read_frame	avilib.c	/^long AVI_read_frame(avi_t *AVI, char *vidbuf, int *keyframe)$/;"	f
AVI_seek_start	avilib.c	/^int AVI_seek_start(avi_t *AVI)$/;"	f
AVI_set_audio	avilib.c	/^void AVI_set_audio(avi_t *AVI, int channels, long rate, int bits, int format, long mp3rate)$/;"	f
AVI_set_audio_bitrate	avilib.c	/^int AVI_set_audio_bitrate(avi_t *AVI, long bitrate)$/;"	f
AVI_set_audio_position	avilib.c	/^int AVI_set_audio_position(avi_t *AVI, long byte)$/;"	f
AVI_set_audio_track	avilib.c	/^int AVI_set_audio_track(avi_t *AVI, int track)$/;"	f
AVI_set_video	avilib.c	/^void AVI_set_video(avi_t *AVI, int width, int height, double fps, char *compressor)$/;"	f
AVI_set_video_position	avilib.c	/^int AVI_set_video_position(avi_t *AVI, long frame)$/;"	f
AVI_strerror	avilib.c	/^char *AVI_strerror()$/;"	f
AVI_video_codecf_offset	avilib.c	/^long  AVI_video_codecf_offset(avi_t *AVI)$/;"	f
AVI_video_codech_offset	avilib.c	/^long  AVI_video_codech_offset(avi_t *AVI)$/;"	f
AVI_video_compressor	avilib.c	/^char* AVI_video_compressor(avi_t *AVI)$/;"	f
AVI_video_frames	avilib.c	/^long AVI_video_frames(avi_t *AVI)$/;"	f
AVI_video_height	avilib.c	/^int  AVI_video_height(avi_t *AVI)$/;"	f
AVI_video_width	avilib.c	/^int  AVI_video_width(avi_t *AVI)$/;"	f
AVI_write_audio	avilib.c	/^int AVI_write_audio(avi_t *AVI, char *data, long bytes)$/;"	f
AVI_write_frame	avilib.c	/^int AVI_write_frame(avi_t *AVI, char *data, long bytes, int keyframe)$/;"	f
BASE_VIDIOC_PRIVATE	videodev2.h	2532;"	d
BIN	Makefile	/^BIN=\/usr\/local\/bin$/;"	m
BITMAPINFOHEADER_avilib	avilib.h	/^} BITMAPINFOHEADER_avilib;$/;"	t	typeref:struct:__anon33
BPPIN	spcav4l.h	51;"	d
BRIDGE_CX11646	spcav4l.h	/^	BRIDGE_CX11646,$/;"	e	enum:__anon22
BRIDGE_ETOMS	spcav4l.h	/^	BRIDGE_ETOMS,$/;"	e	enum:__anon22
BRIDGE_MR97311	spcav4l.h	/^	BRIDGE_MR97311,$/;"	e	enum:__anon22
BRIDGE_SN9CXXX	spcav4l.h	/^	BRIDGE_SN9CXXX,$/;"	e	enum:__anon22
BRIDGE_SONIX	spcav4l.h	/^	BRIDGE_SONIX,$/;"	e	enum:__anon22
BRIDGE_SPCA500	spcav4l.h	/^	BRIDGE_SPCA500,$/;"	e	enum:__anon22
BRIDGE_SPCA501	spcav4l.h	/^	BRIDGE_SPCA501,$/;"	e	enum:__anon22
BRIDGE_SPCA504	spcav4l.h	/^	BRIDGE_SPCA504,$/;"	e	enum:__anon22
BRIDGE_SPCA504B	spcav4l.h	/^	BRIDGE_SPCA504B,$/;"	e	enum:__anon22
BRIDGE_SPCA504C	spcav4l.h	/^	BRIDGE_SPCA504C,$/;"	e	enum:__anon22
BRIDGE_SPCA505	spcav4l.h	/^	BRIDGE_SPCA505 = 0,$/;"	e	enum:__anon22
BRIDGE_SPCA506	spcav4l.h	/^        BRIDGE_SPCA506,$/;"	e	enum:__anon22
BRIDGE_SPCA508	spcav4l.h	/^	BRIDGE_SPCA508,$/;"	e	enum:__anon22
BRIDGE_SPCA533	spcav4l.h	/^	BRIDGE_SPCA533,$/;"	e	enum:__anon22
BRIDGE_SPCA536	spcav4l.h	/^	BRIDGE_SPCA536,$/;"	e	enum:__anon22
BRIDGE_SPCA561	spcav4l.h	/^	BRIDGE_SPCA561,$/;"	e	enum:__anon22
BRIDGE_TV8532	spcav4l.h	/^	BRIDGE_TV8532,$/;"	e	enum:__anon22
BRIDGE_UNKNOW	spcav4l.h	/^	BRIDGE_UNKNOW,$/;"	e	enum:__anon22
BRIDGE_ZC3XX	spcav4l.h	/^	BRIDGE_ZC3XX,$/;"	e	enum:__anon22
BRIDGE_ZR364XX	spcav4l.h	/^	BRIDGE_ZR364XX,$/;"	e	enum:__anon22
B_FROMYU	color.c	/^B_FROMYU(unsigned char y, unsigned char u)$/;"	f
Bcoef	color.c	83;"	d	file:
Blist	spcav4l.c	/^static struct bridge_list Blist[] = {$/;"	v	typeref:struct:bridge_list	file:
C22	utils.c	800;"	d	file:
CC	Makefile	/^CC=arm-none-linux-gnueabi-gcc$/;"	m
CHGABRIGHT	spcav4l.h	69;"	d
CHGQUALITY	spcav4l.h	70;"	d
CHGTINTER	spcav4l.h	71;"	d
CIF	spcav4l.h	57;"	d
CLIENT_PORT	tcputils.h	38;"	d
CLIP	color.h	50;"	d
COMPONENT_CONNECTOR	uvcvideo.h	181;"	d
COMPOSITE_CONNECTOR	uvcvideo.h	179;"	d
COM_data	videodev2.h	/^	char COM_data[60];      \/* Data in JPEG COM segment *\/$/;"	m	struct:v4l2_jpegcompression
COM_len	videodev2.h	/^	int  COM_len;           \/* Length of data in JPEG COM segment *\/$/;"	m	struct:v4l2_jpegcompression
CS_CONFIGURATION	uvcvideo.h	50;"	d
CS_DEVICE	uvcvideo.h	49;"	d
CS_ENDPOINT	uvcvideo.h	53;"	d
CS_INTERFACE	uvcvideo.h	52;"	d
CS_STRING	uvcvideo.h	51;"	d
CS_UNDEFINED	uvcvideo.h	48;"	d
CT_AE_MODE_CONTROL	uvcvideo.h	112;"	d
CT_AE_PRIORITY_CONTROL	uvcvideo.h	113;"	d
CT_CONTROL_UNDEFINED	uvcvideo.h	110;"	d
CT_EXPOSURE_TIME_ABSOLUTE_CONTROL	uvcvideo.h	114;"	d
CT_EXPOSURE_TIME_RELATIVE_CONTROL	uvcvideo.h	115;"	d
CT_FOCUS_ABSOLUTE_CONTROL	uvcvideo.h	116;"	d
CT_FOCUS_AUTO_CONTROL	uvcvideo.h	118;"	d
CT_FOCUS_RELATIVE_CONTROL	uvcvideo.h	117;"	d
CT_IRIS_ABSOLUTE_CONTROL	uvcvideo.h	119;"	d
CT_IRIS_RELATIVE_CONTROL	uvcvideo.h	120;"	d
CT_PANTILT_ABSOLUTE_CONTROL	uvcvideo.h	123;"	d
CT_PANTILT_RELATIVE_CONTROL	uvcvideo.h	124;"	d
CT_PRIVACY_CONTROL	uvcvideo.h	127;"	d
CT_ROLL_ABSOLUTE_CONTROL	uvcvideo.h	125;"	d
CT_ROLL_RELATIVE_CONTROL	uvcvideo.h	126;"	d
CT_SCANNING_MODE_CONTROL	uvcvideo.h	111;"	d
CT_ZOOM_ABSOLUTE_CONTROL	uvcvideo.h	121;"	d
CT_ZOOM_RELATIVE_CONTROL	uvcvideo.h	122;"	d
CoefBu	color.c	90;"	d	file:
CoefGu	color.c	88;"	d	file:
CoefGv	color.c	89;"	d	file:
CoefRv	color.c	87;"	d	file:
DECBITS	utils.c	88;"	d	file:
DEC_REC	utils.c	688;"	d	file:
DHT_SIZE	huffman.h	2;"	d
DHT_SIZE	v4l2uvc.h	53;"	d
DRIVER_VERSION_NUMBER	uvcvideo.h	224;"	d
EP_ENDPOINT	uvcvideo.h	83;"	d
EP_GENERAL	uvcvideo.h	82;"	d
EP_INTERRUPT	uvcvideo.h	84;"	d
EP_UNDEFINED	uvcvideo.h	81;"	d
ERR_BAD_TABLES	utils.h	40;"	d
ERR_BAD_WIDTH_OR_HEIGHT	utils.h	31;"	d
ERR_DEPTH_MISMATCH	utils.h	41;"	d
ERR_EXIT	avilib.c	1088;"	d	file:
ERR_HEIGHT_MISMATCH	utils.h	29;"	d
ERR_ILLEGAL_HV	utils.h	33;"	d
ERR_NOT_8BIT	utils.h	28;"	d
ERR_NOT_SEQUENTIAL_DCT	utils.h	37;"	d
ERR_NOT_YCBCR_221111	utils.h	35;"	d
ERR_NO_EOI	utils.h	39;"	d
ERR_NO_SOI	utils.h	27;"	d
ERR_QUANT_TABLE_SELECTOR	utils.h	34;"	d
ERR_TOO_MANY_COMPPS	utils.h	32;"	d
ERR_UNKNOWN_CID_IN_SCAN	utils.h	36;"	d
ERR_WIDTH_MISMATCH	utils.h	30;"	d
ERR_WRONG_MARKER	utils.h	38;"	d
EXTERNAL_VENDOR_SPECIFIC	uvcvideo.h	178;"	d
FOUR_TWO_TWO	utils.c	990;"	d	file:
FRAME_RATE_SCALE	avilib.c	52;"	d	file:
GBGR	spcav4l.h	/^	GBGR,$/;"	e	enum:__anon23
GBRG	spcav4l.h	/^	GBRG,$/;"	e	enum:__anon23
GETBITS	utils.c	641;"	d	file:
GET_CUR	uvcvideo.h	89;"	d
GET_DEF	uvcvideo.h	95;"	d
GET_INFO	uvcvideo.h	94;"	d
GET_LEN	uvcvideo.h	93;"	d
GET_MAX	uvcvideo.h	91;"	d
GET_MIN	uvcvideo.h	90;"	d
GET_RES	uvcvideo.h	92;"	d
GREY	spcav4l.h	/^	GREY,$/;"	e	enum:__anon23
G_FROMYUV	color.c	/^G_FROMYUV(unsigned char y, unsigned char u, unsigned char v)$/;"	f
Gcoef	color.c	82;"	d	file:
GetDepth	spcav4l.c	/^static int GetDepth(int format)$/;"	f	file:
GetStreamId	spcav4l.c	/^static int GetStreamId(const char *BridgeName)$/;"	f	file:
GetVideoPict	spcav4l.c	/^static int GetVideoPict(struct vdIn *vd)$/;"	f	file:
HEADERBYTES	avilib.c	93;"	d	file:
HEADERFRAME1	v4l2uvc.c	479;"	d	file:
HEIGHT	spcav4l.h	50;"	d
IBM_FORMAT_ADPCM	avilib.h	257;"	d
IBM_FORMAT_ALAW	avilib.h	256;"	d
IBM_FORMAT_MULAW	avilib.h	255;"	d
IC4	utils.c	801;"	d	file:
IFIX	utils.c	40;"	d	file:
IMULT	utils.c	796;"	d	file:
INFO_LIST	avilib.c	43;"	d	file:
INSTALL	Makefile	/^INSTALL=install$/;"	m
INSTALLROOT	Makefile	/^INSTALLROOT=$(PWD)$/;"	m
ISHIFT	utils.c	38;"	d	file:
ITOINT	utils.c	797;"	d	file:
ITT_CAMERA	uvcvideo.h	170;"	d
ITT_MEDIA_TRANSPORT_INPUT	uvcvideo.h	171;"	d
ITT_VENDOR_SPECIFIC	uvcvideo.h	169;"	d
ITV0	videodev2.h	/^		struct v4l2_mpeg_vbi_ITV0 ITV0;$/;"	m	union:v4l2_mpeg_vbi_fmt_ivtv::__anon13	typeref:struct:v4l2_mpeg_vbi_fmt_ivtv::__anon13::v4l2_mpeg_vbi_ITV0
JPEG	spcav4l.h	/^	JPEG = 0,$/;"	e	enum:__anon23
JPEGHuffmanTable	huffman.h	/^const unsigned char JPEGHuffmanTable[JPG_HUFFMAN_TABLE_LENGTH]$/;"	v
JPG	spcav4l.h	62;"	d
JPG_HUFFMAN_TABLE_LENGTH	huffman.h	50;"	d
LEBI_DCL	utils.c	637;"	d	file:
LEBI_GET	utils.c	638;"	d	file:
LEBI_PUT	utils.c	639;"	d	file:
LXU_MOTOR_PANTILT_RELATIVE_CONTROL	uvcvideo.h	150;"	d
LXU_MOTOR_PANTILT_RESET_CONTROL	uvcvideo.h	151;"	d
LutBu	color.c	/^static int *LutBu = NULL;$/;"	v	file:
LutGu	color.c	/^static int *LutGu = NULL;$/;"	v	file:
LutGv	color.c	/^static int *LutGv = NULL;$/;"	v	file:
LutRv	color.c	/^static int *LutRv = NULL;$/;"	v	file:
LutUb	color.c	/^static int *LutUb = NULL;;$/;"	v	file:
LutUbY	color.c	/^static int *LutUbY = NULL;;$/;"	v	file:
LutVr	color.c	/^static int *LutVr = NULL;;$/;"	v	file:
LutVrY	color.c	/^static int *LutVrY = NULL;;$/;"	v	file:
LutYb	color.c	/^static int *LutYb = NULL;;$/;"	v	file:
LutYg	color.c	/^static int *LutYg = NULL;;$/;"	v	file:
LutYr	color.c	/^static int *LutYr = NULL;$/;"	v	file:
MASQ	spcav4l.h	53;"	d
MAXCOMP	utils.c	157;"	d	file:
MAXCONNECT	tcputils.h	36;"	d
MAX_BRIDGE	spcav4l.h	/^	MAX_BRIDGE,$/;"	e	enum:__anon22
MAX_INFO_STRLEN	avilib.c	49;"	d	file:
MSM_VIDC_BASE	videodev2.h	1746;"	d
M_APP0	utils.c	125;"	d	file:
M_BADHUFF	utils.c	47;"	d	file:
M_COM	utils.c	133;"	d	file:
M_DHT	utils.c	128;"	d	file:
M_DQT	utils.c	126;"	d	file:
M_DRI	utils.c	129;"	d	file:
M_EOF	utils.c	48;"	d	file:
M_EOI	utils.c	132;"	d	file:
M_RST0	utils.c	131;"	d	file:
M_SOF0	utils.c	127;"	d	file:
M_SOI	utils.c	124;"	d	file:
M_SOS	utils.c	130;"	d	file:
MyYUV422	color.h	/^typedef struct MyYUV422 {$/;"	s
MyYUV422	color.h	/^} MyYUV422;$/;"	t	typeref:struct:MyYUV422
MyYUV444	color.h	/^typedef struct MyYUV444 {$/;"	s
MyYUV444	color.h	/^} MyYUV444;$/;"	t	typeref:struct:MyYUV444
Myrgb16	color.h	/^typedef struct Myrgb16 {$/;"	s
Myrgb16	color.h	/^} Myrgb16;$/;"	t	typeref:struct:Myrgb16
Myrgb24	color.h	/^typedef struct Myrgb24 {$/;"	s
Myrgb24	color.h	/^} Myrgb24;$/;"	t	typeref:struct:Myrgb24
Myrgb32	color.h	/^typedef struct Myrgb32 {$/;"	s
Myrgb32	color.h	/^} Myrgb32;$/;"	t	typeref:struct:Myrgb32
NB_BUFFER	v4l2uvc.h	52;"	d
OBJSERVER	Makefile	/^OBJSERVER= server.o color.o utils.o tcputils.o v4l2uvc.o avilib.o$/;"	m
OTT_DISPLAY	uvcvideo.h	175;"	d
OTT_MEDIA_TRANSPORT_OUTPUT	uvcvideo.h	176;"	d
OTT_VENDOR_SPECIFIC	uvcvideo.h	174;"	d
OUT4CC	avilib.c	335;"	d	file:
OUTFRMNUMB	spcav4l.c	27;"	d	file:
OUTLONG	avilib.c	338;"	d	file:
OUTSHRT	avilib.c	341;"	d	file:
PACKRGB16	color.h	74;"	d
PAD_EVEN	avilib.c	100;"	d	file:
PAL	spcav4l.h	55;"	d
PC_PROTOCOL_UNDEFINED	uvcvideo.h	46;"	d
PREC	utils.c	106;"	d	file:
PREC	utils.c	107;"	d	file:
PU_ANALOG_LOCK_STATUS_CONTROL	uvcvideo.h	148;"	d
PU_ANALOG_VIDEO_STANDARD_CONTROL	uvcvideo.h	147;"	d
PU_BACKLIGHT_COMPENSATION_CONTROL	uvcvideo.h	131;"	d
PU_BRIGHTNESS_CONTROL	uvcvideo.h	132;"	d
PU_CONTRAST_CONTROL	uvcvideo.h	133;"	d
PU_CONTROL_UNDEFINED	uvcvideo.h	130;"	d
PU_DIGITAL_MULTIPLIER_CONTROL	uvcvideo.h	144;"	d
PU_DIGITAL_MULTIPLIER_LIMIT_CONTROL	uvcvideo.h	145;"	d
PU_GAIN_CONTROL	uvcvideo.h	134;"	d
PU_GAMMA_CONTROL	uvcvideo.h	139;"	d
PU_HUE_AUTO_CONTROL	uvcvideo.h	146;"	d
PU_HUE_CONTROL	uvcvideo.h	136;"	d
PU_POWER_LINE_FREQUENCY_CONTROL	uvcvideo.h	135;"	d
PU_SATURATION_CONTROL	uvcvideo.h	137;"	d
PU_SHARPNESS_CONTROL	uvcvideo.h	138;"	d
PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL	uvcvideo.h	143;"	d
PU_WHITE_BALANCE_COMPONENT_CONTROL	uvcvideo.h	142;"	d
PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL	uvcvideo.h	141;"	d
PU_WHITE_BALANCE_TEMPERATURE_CONTROL	uvcvideo.h	140;"	d
Pyuv422torgb24	utils.c	/^Pyuv422torgb24(unsigned char * input_ptr, unsigned char * output_ptr, unsigned int image_width, unsigned int image_height)$/;"	f
QCIF	spcav4l.h	60;"	d
QPAL	spcav4l.h	58;"	d
QSIF	spcav4l.h	59;"	d
RC_UNDEFINED	uvcvideo.h	87;"	d
RGB24	spcav4l.h	64;"	d
RGB24_TO_Y	color.c	/^RGB24_TO_Y(unsigned char r, unsigned char g, unsigned char b)$/;"	f
RGB32	spcav4l.h	66;"	d
RGB565	spcav4l.h	65;"	d
R_FROMYV	color.c	/^R_FROMYV(unsigned char y, unsigned char v)$/;"	f
Rcoef	color.c	81;"	d	file:
S22	utils.c	799;"	d	file:
SC_UNDEFINED	uvcvideo.h	41;"	d
SC_VIDEOCONTROL	uvcvideo.h	42;"	d
SC_VIDEOSTREAMING	uvcvideo.h	43;"	d
SC_VIDEO_INTERFACE_COLLECTION	uvcvideo.h	44;"	d
SERVEUR_ADR	tcputils.h	39;"	d
SERVEUR_PORT	tcputils.h	37;"	d
SERVFLAGS	Makefile	/^SERVFLAGS= -O2 -DLINUX $(WARNINGS) -I\/home\/timonkun\/Workspace\/Linux设备驱动光盘\/sd-card\/source\/android-kernel-samsung-dev-full\/include$/;"	m
SERVLIBS	Makefile	/^SERVLIBS= -lpthread -static$/;"	m
SET_CUR	uvcvideo.h	88;"	d
SIF	spcav4l.h	56;"	d
SN9C	spcav4l.h	/^	SN9C,$/;"	e	enum:__anon23
SPCAGVIDIOPARAM	spcav4l.h	77;"	d
SPCASVIDIOPARAM	spcav4l.h	78;"	d
SPCAV4L_H	spcav4l.h	25;"	d
SU_CONTROL_UNDEFINED	uvcvideo.h	106;"	d
SU_INPUT_SELECT_CONTROL	uvcvideo.h	107;"	d
SVIDEO_CONNECTOR	uvcvideo.h	180;"	d
S_IRGRP	avilib.c	213;"	d	file:
S_IROTH	avilib.c	217;"	d	file:
S_IRUSR	avilib.c	209;"	d	file:
S_IRWXG	avilib.c	212;"	d	file:
S_IRWXO	avilib.c	216;"	d	file:
S_IRWXU	avilib.c	208;"	d	file:
S_IWGRP	avilib.c	214;"	d	file:
S_IWOTH	avilib.c	218;"	d	file:
S_IWUSR	avilib.c	210;"	d	file:
S_IXGRP	avilib.c	215;"	d	file:
S_IXOTH	avilib.c	219;"	d	file:
S_IXUSR	avilib.c	211;"	d	file:
SetVideoPict	spcav4l.c	/^static int SetVideoPict(struct vdIn *vd)$/;"	f	file:
SpcaGetBrightness	spcav4l.c	/^__u8 SpcaGetBrightness(struct vdIn * vdin)$/;"	f
SpcaGetColors	spcav4l.c	/^__u8 SpcaGetColors(struct vdIn *vdin)$/;"	f
SpcaGetContrast	spcav4l.c	/^__u8 SpcaGetContrast(struct vdIn *vdin)$/;"	f
SpcaSetBrightness	spcav4l.c	/^void SpcaSetBrightness(struct vdIn *vdin, __u8 bright)$/;"	f
SpcaSetColors	spcav4l.c	/^void SpcaSetColors(struct vdIn *vdin, __u8 colors)$/;"	f
SpcaSetContrast	spcav4l.c	/^void SpcaSetContrast(struct vdIn *vdin, __u8 contrast)$/;"	f
TCPUTILS_H	tcputils.h	25;"	d
TE_CONTROL_UNDEFINED	uvcvideo.h	103;"	d
TT_STREAMING	uvcvideo.h	166;"	d
TT_VENDOR_SPECIFIC	uvcvideo.h	165;"	d
UNGETBITS	utils.c	647;"	d	file:
UNOW	spcav4l.h	/^	UNOW,$/;"	e	enum:__anon23
UNPACK16	color.h	75;"	d
UTILS_H	utils.h	25;"	d
UVC_BUF_STATE_ACTIVE	uvcvideo.h	/^	UVC_BUF_STATE_ACTIVE     = 2,$/;"	e	enum:uvc_buffer_state
UVC_BUF_STATE_DONE	uvcvideo.h	/^	UVC_BUF_STATE_DONE       = 3,$/;"	e	enum:uvc_buffer_state
UVC_BUF_STATE_ERROR	uvcvideo.h	/^	UVC_BUF_STATE_ERROR      = 4,$/;"	e	enum:uvc_buffer_state
UVC_BUF_STATE_IDLE	uvcvideo.h	/^	UVC_BUF_STATE_IDLE       = 0,$/;"	e	enum:uvc_buffer_state
UVC_BUF_STATE_QUEUED	uvcvideo.h	/^	UVC_BUF_STATE_QUEUED     = 1,$/;"	e	enum:uvc_buffer_state
UVC_CTRL_DATA_TYPE_BITMASK	uvcvideo.h	/^	UVC_CTRL_DATA_TYPE_BITMASK,$/;"	e	enum:uvc_control_data_type
UVC_CTRL_DATA_TYPE_BOOLEAN	uvcvideo.h	/^        UVC_CTRL_DATA_TYPE_BOOLEAN,$/;"	e	enum:uvc_control_data_type
UVC_CTRL_DATA_TYPE_ENUM	uvcvideo.h	/^        UVC_CTRL_DATA_TYPE_ENUM,$/;"	e	enum:uvc_control_data_type
UVC_CTRL_DATA_TYPE_RAW	uvcvideo.h	/^        UVC_CTRL_DATA_TYPE_RAW = 0,$/;"	e	enum:uvc_control_data_type
UVC_CTRL_DATA_TYPE_SIGNED	uvcvideo.h	/^        UVC_CTRL_DATA_TYPE_SIGNED,$/;"	e	enum:uvc_control_data_type
UVC_CTRL_DATA_TYPE_UNSIGNED	uvcvideo.h	/^        UVC_CTRL_DATA_TYPE_UNSIGNED,$/;"	e	enum:uvc_control_data_type
UVC_CTRL_TIMEOUT	uvcvideo.h	235;"	d
UVC_DEV_DISCONNECTED	uvcvideo.h	/^	UVC_DEV_DISCONNECTED = 1,$/;"	e	enum:uvc_device_state
UVC_ENTITY_IS_ITERM	uvcvideo.h	185;"	d
UVC_ENTITY_IS_OTERM	uvcvideo.h	186;"	d
UVC_ENTITY_IS_TERM	uvcvideo.h	184;"	d
UVC_ENTITY_IS_UNIT	uvcvideo.h	183;"	d
UVC_GUID_ARGS	uvcvideo.h	591;"	d
UVC_GUID_FORMAT	uvcvideo.h	590;"	d
UVC_GUID_FORMAT_MJPEG	uvcvideo.h	212;"	d
UVC_GUID_FORMAT_NV12	uvcvideo.h	216;"	d
UVC_GUID_FORMAT_YUY2	uvcvideo.h	214;"	d
UVC_GUID_LOGITECH_DEV_INFO	uvcvideo.h	208;"	d
UVC_GUID_LOGITECH_MOTOR	uvcvideo.h	206;"	d
UVC_GUID_LOGITECH_XU1	uvcvideo.h	200;"	d
UVC_GUID_LOGITECH_XU2	uvcvideo.h	202;"	d
UVC_GUID_LOGITECH_XU3	uvcvideo.h	204;"	d
UVC_GUID_UVC_CAMERA	uvcvideo.h	191;"	d
UVC_GUID_UVC_OUTPUT	uvcvideo.h	193;"	d
UVC_GUID_UVC_PROCESSING	uvcvideo.h	195;"	d
UVC_GUID_UVC_SELECTOR	uvcvideo.h	197;"	d
UVC_HANDLE_ACTIVE	uvcvideo.h	/^	UVC_HANDLE_ACTIVE	= 1,$/;"	e	enum:uvc_handle_state
UVC_HANDLE_PASSIVE	uvcvideo.h	/^	UVC_HANDLE_PASSIVE	= 0,$/;"	e	enum:uvc_handle_state
UVC_MAX_FRAME_SIZE	uvcvideo.h	231;"	d
UVC_MAX_ISO_PACKETS	uvcvideo.h	229;"	d
UVC_MAX_VIDEO_BUFFERS	uvcvideo.h	233;"	d
UVC_QUIRK_STATUS_INTERVAL	uvcvideo.h	238;"	d
UVC_STREAM_INTERRUPT	uvcvideo.h	/^	UVC_STREAM_INTERRUPT = 1,$/;"	e	enum:uvc_stream_state
UVC_STREAM_OFF	uvcvideo.h	/^	UVC_STREAM_OFF = 0,$/;"	e	enum:uvc_stream_state
UVC_STREAM_ON	uvcvideo.h	/^	UVC_STREAM_ON = 2,$/;"	e	enum:uvc_stream_state
UVC_TRACE_CALLS	uvcvideo.h	575;"	d
UVC_TRACE_CAPTURE	uvcvideo.h	574;"	d
UVC_TRACE_CONTROL	uvcvideo.h	572;"	d
UVC_TRACE_DESCR	uvcvideo.h	571;"	d
UVC_TRACE_FORMAT	uvcvideo.h	573;"	d
UVC_TRACE_FRAME	uvcvideo.h	577;"	d
UVC_TRACE_IOCTL	uvcvideo.h	576;"	d
UVC_TRACE_PROBE	uvcvideo.h	570;"	d
UVC_URBS	uvcvideo.h	227;"	d
Ubcoef	color.c	85;"	d	file:
UfromRGB	color.h	71;"	d
V4L2_AUDCAP_AVL	videodev2.h	1998;"	d
V4L2_AUDCAP_STEREO	videodev2.h	1997;"	d
V4L2_AUDMODE_AVL	videodev2.h	2001;"	d
V4L2_BUF_FLAG_BFRAME	videodev2.h	668;"	d
V4L2_BUF_FLAG_DONE	videodev2.h	665;"	d
V4L2_BUF_FLAG_EOS	videodev2.h	677;"	d
V4L2_BUF_FLAG_ERROR	videodev2.h	670;"	d
V4L2_BUF_FLAG_INPUT	videodev2.h	672;"	d
V4L2_BUF_FLAG_KEYFRAME	videodev2.h	666;"	d
V4L2_BUF_FLAG_MAPPED	videodev2.h	663;"	d
V4L2_BUF_FLAG_NO_CACHE_CLEAN	videodev2.h	676;"	d
V4L2_BUF_FLAG_NO_CACHE_INVALIDATE	videodev2.h	675;"	d
V4L2_BUF_FLAG_PFRAME	videodev2.h	667;"	d
V4L2_BUF_FLAG_PREPARED	videodev2.h	673;"	d
V4L2_BUF_FLAG_QUEUED	videodev2.h	664;"	d
V4L2_BUF_FLAG_TIMECODE	videodev2.h	671;"	d
V4L2_BUF_TYPE_PRIVATE	videodev2.h	/^	V4L2_BUF_TYPE_PRIVATE              = 0x80,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_SLICED_VBI_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_SLICED_VBI_CAPTURE   = 6,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_SLICED_VBI_OUTPUT	videodev2.h	/^	V4L2_BUF_TYPE_SLICED_VBI_OUTPUT    = 7,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VBI_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_VBI_CAPTURE          = 4,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VBI_OUTPUT	videodev2.h	/^	V4L2_BUF_TYPE_VBI_OUTPUT           = 5,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_CAPTURE        = 1,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE = 9,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OUTPUT	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OUTPUT         = 2,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE  = 10,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY = 8,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OVERLAY	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OVERLAY        = 3,$/;"	e	enum:v4l2_buf_type
V4L2_CAP_ASYNCIO	videodev2.h	283;"	d
V4L2_CAP_AUDIO	videodev2.h	278;"	d
V4L2_CAP_DEVICE_CAPS	videodev2.h	286;"	d
V4L2_CAP_HW_FREQ_SEEK	videodev2.h	269;"	d
V4L2_CAP_MODULATOR	videodev2.h	280;"	d
V4L2_CAP_QCOM_FRAMESKIP	videodev2.h	738;"	d
V4L2_CAP_RADIO	videodev2.h	279;"	d
V4L2_CAP_RDS_CAPTURE	videodev2.h	267;"	d
V4L2_CAP_RDS_OUTPUT	videodev2.h	270;"	d
V4L2_CAP_READWRITE	videodev2.h	282;"	d
V4L2_CAP_SLICED_VBI_CAPTURE	videodev2.h	265;"	d
V4L2_CAP_SLICED_VBI_OUTPUT	videodev2.h	266;"	d
V4L2_CAP_STREAMING	videodev2.h	284;"	d
V4L2_CAP_TIMEPERFRAME	videodev2.h	737;"	d
V4L2_CAP_TUNER	videodev2.h	277;"	d
V4L2_CAP_VBI_CAPTURE	videodev2.h	263;"	d
V4L2_CAP_VBI_OUTPUT	videodev2.h	264;"	d
V4L2_CAP_VIDEO_CAPTURE	videodev2.h	260;"	d
V4L2_CAP_VIDEO_CAPTURE_MPLANE	videodev2.h	273;"	d
V4L2_CAP_VIDEO_OUTPUT	videodev2.h	261;"	d
V4L2_CAP_VIDEO_OUTPUT_MPLANE	videodev2.h	275;"	d
V4L2_CAP_VIDEO_OUTPUT_OVERLAY	videodev2.h	268;"	d
V4L2_CAP_VIDEO_OVERLAY	videodev2.h	262;"	d
V4L2_CHIP_MATCH_AC97	videodev2.h	2384;"	d
V4L2_CHIP_MATCH_HOST	videodev2.h	2381;"	d
V4L2_CHIP_MATCH_I2C_ADDR	videodev2.h	2383;"	d
V4L2_CHIP_MATCH_I2C_DRIVER	videodev2.h	2382;"	d
V4L2_CID_AF_MODE	videodev2.h	1286;"	d
V4L2_CID_ALPHA_COMPONENT	videodev2.h	1274;"	d
V4L2_CID_AUDIO_BALANCE	videodev2.h	1212;"	d
V4L2_CID_AUDIO_BASS	videodev2.h	1213;"	d
V4L2_CID_AUDIO_COMPRESSION_ATTACK_TIME	videodev2.h	1818;"	d
V4L2_CID_AUDIO_COMPRESSION_ENABLED	videodev2.h	1815;"	d
V4L2_CID_AUDIO_COMPRESSION_GAIN	videodev2.h	1816;"	d
V4L2_CID_AUDIO_COMPRESSION_RELEASE_TIME	videodev2.h	1819;"	d
V4L2_CID_AUDIO_COMPRESSION_THRESHOLD	videodev2.h	1817;"	d
V4L2_CID_AUDIO_LIMITER_DEVIATION	videodev2.h	1813;"	d
V4L2_CID_AUDIO_LIMITER_ENABLED	videodev2.h	1811;"	d
V4L2_CID_AUDIO_LIMITER_RELEASE_TIME	videodev2.h	1812;"	d
V4L2_CID_AUDIO_LOUDNESS	videodev2.h	1216;"	d
V4L2_CID_AUDIO_MUTE	videodev2.h	1215;"	d
V4L2_CID_AUDIO_TREBLE	videodev2.h	1214;"	d
V4L2_CID_AUDIO_VOLUME	videodev2.h	1211;"	d
V4L2_CID_AUTOBRIGHTNESS	videodev2.h	1260;"	d
V4L2_CID_AUTOGAIN	videodev2.h	1225;"	d
V4L2_CID_AUTO_WHITE_BALANCE	videodev2.h	1218;"	d
V4L2_CID_BACKLIGHT_COMPENSATION	uvcvideo.h	14;"	d
V4L2_CID_BACKLIGHT_COMPENSATION	videodev2.h	1244;"	d
V4L2_CID_BAND_STOP_FILTER	videodev2.h	1261;"	d
V4L2_CID_BASE	uvc_compat.h	39;"	d
V4L2_CID_BASE	uvc_compat.h	40;"	d
V4L2_CID_BASE	videodev2.h	1201;"	d
V4L2_CID_BG_COLOR	videodev2.h	1264;"	d
V4L2_CID_BLACK_LEVEL	videodev2.h	1217;"	d
V4L2_CID_BLUE_BALANCE	videodev2.h	1221;"	d
V4L2_CID_BRIGHTNESS	videodev2.h	1207;"	d
V4L2_CID_CAMERA_CLASS	videodev2.h	1768;"	d
V4L2_CID_CAMERA_CLASS_BASE	videodev2.h	1767;"	d
V4L2_CID_CHROMA_AGC	videodev2.h	1245;"	d
V4L2_CID_CHROMA_GAIN	videodev2.h	1266;"	d
V4L2_CID_COLORFX	videodev2.h	1247;"	d
V4L2_CID_COLOR_KILLER	videodev2.h	1246;"	d
V4L2_CID_CONTRAST	videodev2.h	1208;"	d
V4L2_CID_DO_WHITE_BALANCE	videodev2.h	1219;"	d
V4L2_CID_EXPOSURE	videodev2.h	1224;"	d
V4L2_CID_EXPOSURE_ABSOLUTE	uvcvideo.h	28;"	d
V4L2_CID_EXPOSURE_ABSOLUTE	videodev2.h	1777;"	d
V4L2_CID_EXPOSURE_AUTO	uvcvideo.h	27;"	d
V4L2_CID_EXPOSURE_AUTO	videodev2.h	1770;"	d
V4L2_CID_EXPOSURE_AUTO_PRIORITY	videodev2.h	1778;"	d
V4L2_CID_FLASH_CHARGE	videodev2.h	1868;"	d
V4L2_CID_FLASH_CLASS	videodev2.h	1836;"	d
V4L2_CID_FLASH_CLASS_BASE	videodev2.h	1835;"	d
V4L2_CID_FLASH_FAULT	videodev2.h	1860;"	d
V4L2_CID_FLASH_INDICATOR_INTENSITY	videodev2.h	1858;"	d
V4L2_CID_FLASH_INTENSITY	videodev2.h	1856;"	d
V4L2_CID_FLASH_LED_MODE	videodev2.h	1838;"	d
V4L2_CID_FLASH_READY	videodev2.h	1869;"	d
V4L2_CID_FLASH_STROBE	videodev2.h	1851;"	d
V4L2_CID_FLASH_STROBE_SOURCE	videodev2.h	1845;"	d
V4L2_CID_FLASH_STROBE_STATUS	videodev2.h	1853;"	d
V4L2_CID_FLASH_STROBE_STOP	videodev2.h	1852;"	d
V4L2_CID_FLASH_TIMEOUT	videodev2.h	1855;"	d
V4L2_CID_FLASH_TORCH_INTENSITY	videodev2.h	1857;"	d
V4L2_CID_FM_TX_CLASS	videodev2.h	1803;"	d
V4L2_CID_FM_TX_CLASS_BASE	videodev2.h	1802;"	d
V4L2_CID_FOCUS_ABSOLUTE	uvcvideo.h	20;"	d
V4L2_CID_FOCUS_ABSOLUTE	videodev2.h	1788;"	d
V4L2_CID_FOCUS_AUTO	uvcvideo.h	19;"	d
V4L2_CID_FOCUS_AUTO	videodev2.h	1790;"	d
V4L2_CID_FOCUS_RELATIVE	uvcvideo.h	21;"	d
V4L2_CID_FOCUS_RELATIVE	videodev2.h	1789;"	d
V4L2_CID_FPS	videodev2.h	1287;"	d
V4L2_CID_GAIN	videodev2.h	1226;"	d
V4L2_CID_GAMMA	videodev2.h	1222;"	d
V4L2_CID_HCENTER	videodev2.h	1231;"	d
V4L2_CID_HFLIP	videodev2.h	1227;"	d
V4L2_CID_HUE	videodev2.h	1210;"	d
V4L2_CID_HUE_AUTO	uvcvideo.h	17;"	d
V4L2_CID_HUE_AUTO	videodev2.h	1241;"	d
V4L2_CID_ILLUMINATORS_1	videodev2.h	1268;"	d
V4L2_CID_ILLUMINATORS_2	videodev2.h	1269;"	d
V4L2_CID_IRIS_ABSOLUTE	videodev2.h	1798;"	d
V4L2_CID_IRIS_RELATIVE	videodev2.h	1799;"	d
V4L2_CID_JPEG_ACTIVE_MARKER	videodev2.h	1887;"	d
V4L2_CID_JPEG_CHROMA_SUBSAMPLING	videodev2.h	1875;"	d
V4L2_CID_JPEG_CLASS	videodev2.h	1873;"	d
V4L2_CID_JPEG_CLASS_BASE	videodev2.h	1872;"	d
V4L2_CID_JPEG_COMPRESSION_QUALITY	videodev2.h	1885;"	d
V4L2_CID_JPEG_RESTART_INTERVAL	videodev2.h	1884;"	d
V4L2_CID_LASTP1	videodev2.h	1277;"	d
V4L2_CID_MAX_CTRLS	videodev2.h	1200;"	d
V4L2_CID_METER	videodev2.h	1285;"	d
V4L2_CID_MIN_BUFFERS_FOR_CAPTURE	videodev2.h	1271;"	d
V4L2_CID_MIN_BUFFERS_FOR_OUTPUT	videodev2.h	1272;"	d
V4L2_CID_MPEG_AUDIO_AAC_BITRATE	videodev2.h	1411;"	d
V4L2_CID_MPEG_AUDIO_AC3_BITRATE	videodev2.h	1412;"	d
V4L2_CID_MPEG_AUDIO_CRC	videodev2.h	1405;"	d
V4L2_CID_MPEG_AUDIO_DEC_MULTILINGUAL_PLAYBACK	videodev2.h	1443;"	d
V4L2_CID_MPEG_AUDIO_DEC_PLAYBACK	videodev2.h	1434;"	d
V4L2_CID_MPEG_AUDIO_EMPHASIS	videodev2.h	1399;"	d
V4L2_CID_MPEG_AUDIO_ENCODING	videodev2.h	1326;"	d
V4L2_CID_MPEG_AUDIO_L1_BITRATE	videodev2.h	1334;"	d
V4L2_CID_MPEG_AUDIO_L2_BITRATE	videodev2.h	1351;"	d
V4L2_CID_MPEG_AUDIO_L3_BITRATE	videodev2.h	1368;"	d
V4L2_CID_MPEG_AUDIO_MODE	videodev2.h	1385;"	d
V4L2_CID_MPEG_AUDIO_MODE_EXTENSION	videodev2.h	1392;"	d
V4L2_CID_MPEG_AUDIO_MUTE	videodev2.h	1410;"	d
V4L2_CID_MPEG_AUDIO_SAMPLING_FREQ	videodev2.h	1320;"	d
V4L2_CID_MPEG_BASE	videodev2.h	1294;"	d
V4L2_CID_MPEG_CLASS	videodev2.h	1295;"	d
V4L2_CID_MPEG_CX2341X_BASE	videodev2.h	1614;"	d
V4L2_CID_MPEG_CX2341X_STREAM_INSERT_NAV_PACKETS	videodev2.h	1652;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_BOTTOM	videodev2.h	1650;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_TOP	videodev2.h	1651;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE	videodev2.h	1629;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_BOTTOM	videodev2.h	1648;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_TOP	videodev2.h	1649;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE	videodev2.h	1621;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE	videodev2.h	1640;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER	videodev2.h	1620;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE	videodev2.h	1615;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER	videodev2.h	1639;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE	videodev2.h	1634;"	d
V4L2_CID_MPEG_MFC51_BASE	videodev2.h	1655;"	d
V4L2_CID_MPEG_MFC51_VIDEO_DECODER_H264_DISPLAY_DELAY	videodev2.h	1664;"	d
V4L2_CID_MPEG_MFC51_VIDEO_DECODER_H264_DISPLAY_DELAY_ENABLE	videodev2.h	1665;"	d
V4L2_CID_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE	videodev2.h	1672;"	d
V4L2_CID_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE	videodev2.h	1666;"	d
V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_ACTIVITY	videodev2.h	1682;"	d
V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_DARK	videodev2.h	1683;"	d
V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_SMOOTH	videodev2.h	1684;"	d
V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_STATIC	videodev2.h	1685;"	d
V4L2_CID_MPEG_MFC51_VIDEO_H264_NUM_REF_PIC_FOR_P	videodev2.h	1686;"	d
V4L2_CID_MPEG_MFC51_VIDEO_PADDING	videodev2.h	1678;"	d
V4L2_CID_MPEG_MFC51_VIDEO_PADDING_YUV	videodev2.h	1679;"	d
V4L2_CID_MPEG_MFC51_VIDEO_RC_FIXED_TARGET_BIT	videodev2.h	1680;"	d
V4L2_CID_MPEG_MFC51_VIDEO_RC_REACTION_COEFF	videodev2.h	1681;"	d
V4L2_CID_MPEG_MSM_VIDC_BASE	videodev2.h	1689;"	d
V4L2_CID_MPEG_QCOM_BASE	videodev2.h	1656;"	d
V4L2_CID_MPEG_QCOM_PERF_LEVEL_PERFORMANCE	videodev2.h	/^	V4L2_CID_MPEG_QCOM_PERF_LEVEL_PERFORMANCE		= 0,$/;"	e	enum:v3l2_mpeg_qcom_perf_level
V4L2_CID_MPEG_QCOM_PERF_LEVEL_TURBO	videodev2.h	/^	V4L2_CID_MPEG_QCOM_PERF_LEVEL_TURBO			= 1,$/;"	e	enum:v3l2_mpeg_qcom_perf_level
V4L2_CID_MPEG_QCOM_SET_PERF_LEVEL	videodev2.h	1658;"	d
V4L2_CID_MPEG_STREAM_PES_ID_AUDIO	videodev2.h	1311;"	d
V4L2_CID_MPEG_STREAM_PES_ID_VIDEO	videodev2.h	1312;"	d
V4L2_CID_MPEG_STREAM_PID_AUDIO	videodev2.h	1308;"	d
V4L2_CID_MPEG_STREAM_PID_PCR	videodev2.h	1310;"	d
V4L2_CID_MPEG_STREAM_PID_PMT	videodev2.h	1307;"	d
V4L2_CID_MPEG_STREAM_PID_VIDEO	videodev2.h	1309;"	d
V4L2_CID_MPEG_STREAM_TYPE	videodev2.h	1298;"	d
V4L2_CID_MPEG_STREAM_VBI_FMT	videodev2.h	1313;"	d
V4L2_CID_MPEG_VIDC_VIDEO_AIR_MBS	videodev2.h	1762;"	d
V4L2_CID_MPEG_VIDC_VIDEO_AIR_REF	videodev2.h	1763;"	d
V4L2_CID_MPEG_VIDC_VIDEO_CIR_MBS	videodev2.h	1764;"	d
V4L2_CID_MPEG_VIDC_VIDEO_CONTINUE_DATA_TRANSFER	videodev2.h	1706;"	d
V4L2_CID_MPEG_VIDC_VIDEO_DIVX_FORMAT	videodev2.h	1697;"	d
V4L2_CID_MPEG_VIDC_VIDEO_ENABLE_PICTURE_TYPE	videodev2.h	1691;"	d
V4L2_CID_MPEG_VIDC_VIDEO_FRAME_RATE	videodev2.h	1724;"	d
V4L2_CID_MPEG_VIDC_VIDEO_H264_CABAC_MODEL	videodev2.h	1747;"	d
V4L2_CID_MPEG_VIDC_VIDEO_H264_CABAC_MODEL_0	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_H264_CABAC_MODEL_0 = 0,$/;"	e	enum:v4l2_mpeg_vidc_h264_cabac_model
V4L2_CID_MPEG_VIDC_VIDEO_H264_CABAC_MODEL_1	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_H264_CABAC_MODEL_1 = 1,$/;"	e	enum:v4l2_mpeg_vidc_h264_cabac_model
V4L2_CID_MPEG_VIDC_VIDEO_H264_CABAC_MODEL_2	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_H264_CABAC_MODEL_2 = 2,$/;"	e	enum:v4l2_mpeg_vidc_h264_cabac_model
V4L2_CID_MPEG_VIDC_VIDEO_IDR_PERIOD	videodev2.h	1725;"	d
V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_ADAPTIVE	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_ADAPTIVE = 2,$/;"	e	enum:v4l2_mpeg_vidc_video_intra_refresh_mode
V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_CYCLIC	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_CYCLIC = 1,$/;"	e	enum:v4l2_mpeg_vidc_video_intra_refresh_mode
V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_CYCLIC_ADAPTIVE	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_CYCLIC_ADAPTIVE = 3,$/;"	e	enum:v4l2_mpeg_vidc_video_intra_refresh_mode
V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_MODE	videodev2.h	1754;"	d
V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_NONE	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_NONE = 0,$/;"	e	enum:v4l2_mpeg_vidc_video_intra_refresh_mode
V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_RANDOM	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_INTRA_REFRESH_RANDOM = 4,$/;"	e	enum:v4l2_mpeg_vidc_video_intra_refresh_mode
V4L2_CID_MPEG_VIDC_VIDEO_KEEP_ASPECT_RATIO	videodev2.h	1693;"	d
V4L2_CID_MPEG_VIDC_VIDEO_MB_ERROR_MAP_REPORTING	videodev2.h	1704;"	d
V4L2_CID_MPEG_VIDC_VIDEO_NUM_B_FRAMES	videodev2.h	1727;"	d
V4L2_CID_MPEG_VIDC_VIDEO_NUM_P_FRAMES	videodev2.h	1726;"	d
V4L2_CID_MPEG_VIDC_VIDEO_OUTPUT_ORDER	videodev2.h	1718;"	d
V4L2_CID_MPEG_VIDC_VIDEO_POST_LOOP_DEBLOCKER_MODE	videodev2.h	1695;"	d
V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL	videodev2.h	1730;"	d
V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL_CBR_CFR	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL_CBR_CFR = 4,$/;"	e	enum:v4l2_mpeg_vidc_video_rate_control
V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL_CBR_VFR	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL_CBR_VFR = 3,$/;"	e	enum:v4l2_mpeg_vidc_video_rate_control
V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL_OFF	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL_OFF = 0,$/;"	e	enum:v4l2_mpeg_vidc_video_rate_control
V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL_VBR_CFR	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL_VBR_CFR = 2,$/;"	e	enum:v4l2_mpeg_vidc_video_rate_control
V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL_VBR_VFR	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_RATE_CONTROL_VBR_VFR = 1,$/;"	e	enum:v4l2_mpeg_vidc_video_rate_control
V4L2_CID_MPEG_VIDC_VIDEO_REQUEST_IFRAME	videodev2.h	1728;"	d
V4L2_CID_MPEG_VIDC_VIDEO_ROTATION	videodev2.h	1739;"	d
V4L2_CID_MPEG_VIDC_VIDEO_ROTATION_180	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_ROTATION_180 = 2,$/;"	e	enum:v4l2_mpeg_vidc_video_rotation
V4L2_CID_MPEG_VIDC_VIDEO_ROTATION_270	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_ROTATION_270 = 3,$/;"	e	enum:v4l2_mpeg_vidc_video_rotation
V4L2_CID_MPEG_VIDC_VIDEO_ROTATION_90	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_ROTATION_90 = 1,$/;"	e	enum:v4l2_mpeg_vidc_video_rotation
V4L2_CID_MPEG_VIDC_VIDEO_ROTATION_NONE	videodev2.h	/^	V4L2_CID_MPEG_VIDC_VIDEO_ROTATION_NONE = 0,$/;"	e	enum:v4l2_mpeg_vidc_video_rotation
V4L2_CID_MPEG_VIDC_VIDEO_STREAM_FORMAT	videodev2.h	1709;"	d
V4L2_CID_MPEG_VIDEO_ASPECT	videodev2.h	1452;"	d
V4L2_CID_MPEG_VIDEO_BITRATE	videodev2.h	1468;"	d
V4L2_CID_MPEG_VIDEO_BITRATE_MODE	videodev2.h	1463;"	d
V4L2_CID_MPEG_VIDEO_BITRATE_PEAK	videodev2.h	1469;"	d
V4L2_CID_MPEG_VIDEO_B_FRAMES	videodev2.h	1459;"	d
V4L2_CID_MPEG_VIDEO_CYCLIC_INTRA_REFRESH_MB	videodev2.h	1475;"	d
V4L2_CID_MPEG_VIDEO_DECODER_MPEG4_DEBLOCK_FILTER	videodev2.h	1474;"	d
V4L2_CID_MPEG_VIDEO_DECODER_SLICE_INTERFACE	videodev2.h	1473;"	d
V4L2_CID_MPEG_VIDEO_DEC_FRAME	videodev2.h	1495;"	d
V4L2_CID_MPEG_VIDEO_DEC_PTS	videodev2.h	1494;"	d
V4L2_CID_MPEG_VIDEO_ENCODING	videodev2.h	1446;"	d
V4L2_CID_MPEG_VIDEO_FRAME_RC_ENABLE	videodev2.h	1476;"	d
V4L2_CID_MPEG_VIDEO_GOP_CLOSURE	videodev2.h	1461;"	d
V4L2_CID_MPEG_VIDEO_GOP_SIZE	videodev2.h	1460;"	d
V4L2_CID_MPEG_VIDEO_H263_B_FRAME_QP	videodev2.h	1499;"	d
V4L2_CID_MPEG_VIDEO_H263_I_FRAME_QP	videodev2.h	1497;"	d
V4L2_CID_MPEG_VIDEO_H263_MAX_QP	videodev2.h	1501;"	d
V4L2_CID_MPEG_VIDEO_H263_MIN_QP	videodev2.h	1500;"	d
V4L2_CID_MPEG_VIDEO_H263_P_FRAME_QP	videodev2.h	1498;"	d
V4L2_CID_MPEG_VIDEO_H264_8X8_TRANSFORM	videodev2.h	1507;"	d
V4L2_CID_MPEG_VIDEO_H264_B_FRAME_QP	videodev2.h	1504;"	d
V4L2_CID_MPEG_VIDEO_H264_CPB_SIZE	videodev2.h	1508;"	d
V4L2_CID_MPEG_VIDEO_H264_ENTROPY_MODE	videodev2.h	1509;"	d
V4L2_CID_MPEG_VIDEO_H264_I_FRAME_QP	videodev2.h	1502;"	d
V4L2_CID_MPEG_VIDEO_H264_I_PERIOD	videodev2.h	1514;"	d
V4L2_CID_MPEG_VIDEO_H264_LEVEL	videodev2.h	1515;"	d
V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_ALPHA	videodev2.h	1534;"	d
V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_BETA	videodev2.h	1535;"	d
V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_MODE	videodev2.h	1536;"	d
V4L2_CID_MPEG_VIDEO_H264_MAX_QP	videodev2.h	1506;"	d
V4L2_CID_MPEG_VIDEO_H264_MIN_QP	videodev2.h	1505;"	d
V4L2_CID_MPEG_VIDEO_H264_PROFILE	videodev2.h	1542;"	d
V4L2_CID_MPEG_VIDEO_H264_P_FRAME_QP	videodev2.h	1503;"	d
V4L2_CID_MPEG_VIDEO_H264_VUI_EXT_SAR_HEIGHT	videodev2.h	1562;"	d
V4L2_CID_MPEG_VIDEO_H264_VUI_EXT_SAR_WIDTH	videodev2.h	1563;"	d
V4L2_CID_MPEG_VIDEO_H264_VUI_SAR_ENABLE	videodev2.h	1564;"	d
V4L2_CID_MPEG_VIDEO_H264_VUI_SAR_IDC	videodev2.h	1565;"	d
V4L2_CID_MPEG_VIDEO_HEADER_MODE	videodev2.h	1477;"	d
V4L2_CID_MPEG_VIDEO_MAX_REF_PIC	videodev2.h	1483;"	d
V4L2_CID_MPEG_VIDEO_MB_RC_ENABLE	videodev2.h	1484;"	d
V4L2_CID_MPEG_VIDEO_MPEG4_B_FRAME_QP	videodev2.h	1588;"	d
V4L2_CID_MPEG_VIDEO_MPEG4_I_FRAME_QP	videodev2.h	1586;"	d
V4L2_CID_MPEG_VIDEO_MPEG4_LEVEL	videodev2.h	1591;"	d
V4L2_CID_MPEG_VIDEO_MPEG4_MAX_QP	videodev2.h	1590;"	d
V4L2_CID_MPEG_VIDEO_MPEG4_MIN_QP	videodev2.h	1589;"	d
V4L2_CID_MPEG_VIDEO_MPEG4_PROFILE	videodev2.h	1603;"	d
V4L2_CID_MPEG_VIDEO_MPEG4_P_FRAME_QP	videodev2.h	1587;"	d
V4L2_CID_MPEG_VIDEO_MPEG4_QPEL	videodev2.h	1611;"	d
V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MAX_BYTES	videodev2.h	1485;"	d
V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MAX_MB	videodev2.h	1486;"	d
V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MODE	videodev2.h	1487;"	d
V4L2_CID_MPEG_VIDEO_MUTE	videodev2.h	1471;"	d
V4L2_CID_MPEG_VIDEO_MUTE_YUV	videodev2.h	1472;"	d
V4L2_CID_MPEG_VIDEO_PULLDOWN	videodev2.h	1462;"	d
V4L2_CID_MPEG_VIDEO_TEMPORAL_DECIMATION	videodev2.h	1470;"	d
V4L2_CID_MPEG_VIDEO_VBV_SIZE	videodev2.h	1493;"	d
V4L2_CID_PANTILT_RESET	uvcvideo.h	25;"	d
V4L2_CID_PAN_ABSOLUTE	videodev2.h	1785;"	d
V4L2_CID_PAN_RELATIVE	uvcvideo.h	23;"	d
V4L2_CID_PAN_RELATIVE	videodev2.h	1780;"	d
V4L2_CID_PAN_RESET	videodev2.h	1782;"	d
V4L2_CID_PICTURE_SIZE	videodev2.h	1281;"	d
V4L2_CID_PILOT_TONE_DEVIATION	videodev2.h	1822;"	d
V4L2_CID_PILOT_TONE_ENABLED	videodev2.h	1821;"	d
V4L2_CID_PILOT_TONE_FREQUENCY	videodev2.h	1823;"	d
V4L2_CID_POWER_LINE_FREQUENCY	uvcvideo.h	15;"	d
V4L2_CID_POWER_LINE_FREQUENCY	videodev2.h	1234;"	d
V4L2_CID_POWER_LINE_FREQUENCY_50HZ	videodev2.h	/^	V4L2_CID_POWER_LINE_FREQUENCY_50HZ	= 1,$/;"	e	enum:v4l2_power_line_frequency
V4L2_CID_POWER_LINE_FREQUENCY_60HZ	videodev2.h	/^	V4L2_CID_POWER_LINE_FREQUENCY_60HZ	= 2,$/;"	e	enum:v4l2_power_line_frequency
V4L2_CID_POWER_LINE_FREQUENCY_AUTO	videodev2.h	/^	V4L2_CID_POWER_LINE_FREQUENCY_AUTO	= 3,$/;"	e	enum:v4l2_power_line_frequency
V4L2_CID_POWER_LINE_FREQUENCY_DISABLED	videodev2.h	/^	V4L2_CID_POWER_LINE_FREQUENCY_DISABLED	= 0,$/;"	e	enum:v4l2_power_line_frequency
V4L2_CID_PREVIEW_SIZE	videodev2.h	1280;"	d
V4L2_CID_PRIVACY	videodev2.h	1796;"	d
V4L2_CID_PRIVATE_BASE	videodev2.h	1204;"	d
V4L2_CID_PRIVATE_LAST	uvcvideo.h	33;"	d
V4L2_CID_RDS_TX_DEVIATION	videodev2.h	1805;"	d
V4L2_CID_RDS_TX_PI	videodev2.h	1806;"	d
V4L2_CID_RDS_TX_PS_NAME	videodev2.h	1808;"	d
V4L2_CID_RDS_TX_PTY	videodev2.h	1807;"	d
V4L2_CID_RDS_TX_RADIO_TEXT	videodev2.h	1809;"	d
V4L2_CID_RED_BALANCE	videodev2.h	1220;"	d
V4L2_CID_ROTATE	videodev2.h	1263;"	d
V4L2_CID_SATURATION	videodev2.h	1209;"	d
V4L2_CID_SCENE	videodev2.h	1284;"	d
V4L2_CID_SHARPNESS	uvcvideo.h	16;"	d
V4L2_CID_SHARPNESS	videodev2.h	1243;"	d
V4L2_CID_SPECIAL_EFFECT	videodev2.h	1278;"	d
V4L2_CID_TILT_ABSOLUTE	videodev2.h	1786;"	d
V4L2_CID_TILT_RELATIVE	uvcvideo.h	24;"	d
V4L2_CID_TILT_RELATIVE	videodev2.h	1781;"	d
V4L2_CID_TILT_RESET	videodev2.h	1783;"	d
V4L2_CID_TUNE_ANTENNA_CAPACITOR	videodev2.h	1832;"	d
V4L2_CID_TUNE_POWER_LEVEL	videodev2.h	1831;"	d
V4L2_CID_TUNE_PREEMPHASIS	videodev2.h	1825;"	d
V4L2_CID_USER_BASE	uvc_compat.h	41;"	d
V4L2_CID_USER_BASE	videodev2.h	1202;"	d
V4L2_CID_USER_CLASS	uvc_compat.h	42;"	d
V4L2_CID_USER_CLASS	videodev2.h	1206;"	d
V4L2_CID_VCENTER	videodev2.h	1232;"	d
V4L2_CID_VFLIP	videodev2.h	1228;"	d
V4L2_CID_WHITENESS	videodev2.h	1223;"	d
V4L2_CID_WHITE_BALANCE_TEMPERATURE	uvcvideo.h	31;"	d
V4L2_CID_WHITE_BALANCE_TEMPERATURE	videodev2.h	1242;"	d
V4L2_CID_WHITE_BALANCE_TEMPERATURE_AUTO	uvcvideo.h	30;"	d
V4L2_CID_ZOOM_ABSOLUTE	videodev2.h	1792;"	d
V4L2_CID_ZOOM_CONTINUOUS	videodev2.h	1794;"	d
V4L2_CID_ZOOM_RELATIVE	videodev2.h	1793;"	d
V4L2_COLORFX_BW	videodev2.h	/^	V4L2_COLORFX_BW		= 1,$/;"	e	enum:v4l2_colorfx
V4L2_COLORFX_EMBOSS	videodev2.h	/^	V4L2_COLORFX_EMBOSS = 4,$/;"	e	enum:v4l2_colorfx
V4L2_COLORFX_GRASS_GREEN	videodev2.h	/^	V4L2_COLORFX_GRASS_GREEN = 7,$/;"	e	enum:v4l2_colorfx
V4L2_COLORFX_NEGATIVE	videodev2.h	/^	V4L2_COLORFX_NEGATIVE = 3,$/;"	e	enum:v4l2_colorfx
V4L2_COLORFX_NONE	videodev2.h	/^	V4L2_COLORFX_NONE	= 0,$/;"	e	enum:v4l2_colorfx
V4L2_COLORFX_SEPIA	videodev2.h	/^	V4L2_COLORFX_SEPIA	= 2,$/;"	e	enum:v4l2_colorfx
V4L2_COLORFX_SKETCH	videodev2.h	/^	V4L2_COLORFX_SKETCH = 5,$/;"	e	enum:v4l2_colorfx
V4L2_COLORFX_SKIN_WHITEN	videodev2.h	/^	V4L2_COLORFX_SKIN_WHITEN = 8,$/;"	e	enum:v4l2_colorfx
V4L2_COLORFX_SKY_BLUE	videodev2.h	/^	V4L2_COLORFX_SKY_BLUE = 6,$/;"	e	enum:v4l2_colorfx
V4L2_COLORFX_VIVID	videodev2.h	/^	V4L2_COLORFX_VIVID = 9,$/;"	e	enum:v4l2_colorfx
V4L2_COLORSPACE_470_SYSTEM_BG	videodev2.h	/^	V4L2_COLORSPACE_470_SYSTEM_BG = 6,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_470_SYSTEM_M	videodev2.h	/^	V4L2_COLORSPACE_470_SYSTEM_M  = 5,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_BT878	videodev2.h	/^	V4L2_COLORSPACE_BT878         = 4,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_JPEG	videodev2.h	/^	V4L2_COLORSPACE_JPEG          = 7,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_REC709	videodev2.h	/^	V4L2_COLORSPACE_REC709        = 3,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SMPTE170M	videodev2.h	/^	V4L2_COLORSPACE_SMPTE170M     = 1,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SMPTE240M	videodev2.h	/^	V4L2_COLORSPACE_SMPTE240M     = 2,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SRGB	videodev2.h	/^	V4L2_COLORSPACE_SRGB          = 8,$/;"	e	enum:v4l2_colorspace
V4L2_CTRL_CLASS_CAMERA	videodev2.h	1145;"	d
V4L2_CTRL_CLASS_FLASH	videodev2.h	1147;"	d
V4L2_CTRL_CLASS_FM_TX	videodev2.h	1146;"	d
V4L2_CTRL_CLASS_JPEG	videodev2.h	1148;"	d
V4L2_CTRL_CLASS_MPEG	uvc_compat.h	32;"	d
V4L2_CTRL_CLASS_MPEG	videodev2.h	1144;"	d
V4L2_CTRL_CLASS_USER	uvc_compat.h	31;"	d
V4L2_CTRL_CLASS_USER	videodev2.h	1143;"	d
V4L2_CTRL_DRIVER_PRIV	uvc_compat.h	36;"	d
V4L2_CTRL_DRIVER_PRIV	videodev2.h	1152;"	d
V4L2_CTRL_FLAG_DISABLED	videodev2.h	1187;"	d
V4L2_CTRL_FLAG_GRABBED	videodev2.h	1188;"	d
V4L2_CTRL_FLAG_INACTIVE	videodev2.h	1191;"	d
V4L2_CTRL_FLAG_NEXT_CTRL	videodev2.h	1197;"	d
V4L2_CTRL_FLAG_READ_ONLY	videodev2.h	1189;"	d
V4L2_CTRL_FLAG_SLIDER	videodev2.h	1192;"	d
V4L2_CTRL_FLAG_UPDATE	videodev2.h	1190;"	d
V4L2_CTRL_FLAG_VOLATILE	videodev2.h	1194;"	d
V4L2_CTRL_FLAG_WRITE_ONLY	videodev2.h	1193;"	d
V4L2_CTRL_ID2CLASS	uvc_compat.h	35;"	d
V4L2_CTRL_ID2CLASS	videodev2.h	1151;"	d
V4L2_CTRL_ID_MASK	uvc_compat.h	34;"	d
V4L2_CTRL_ID_MASK	videodev2.h	1150;"	d
V4L2_CTRL_TYPE_BITMASK	videodev2.h	/^	V4L2_CTRL_TYPE_BITMASK       = 8,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_BOOLEAN	videodev2.h	/^	V4L2_CTRL_TYPE_BOOLEAN	     = 2,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_BUTTON	videodev2.h	/^	V4L2_CTRL_TYPE_BUTTON	     = 4,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_CTRL_CLASS	videodev2.h	/^	V4L2_CTRL_TYPE_CTRL_CLASS    = 6,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_INTEGER	videodev2.h	/^	V4L2_CTRL_TYPE_INTEGER	     = 1,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_INTEGER64	videodev2.h	/^	V4L2_CTRL_TYPE_INTEGER64     = 5,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_MENU	videodev2.h	/^	V4L2_CTRL_TYPE_MENU	     = 3,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_STRING	videodev2.h	/^	V4L2_CTRL_TYPE_STRING        = 7,$/;"	e	enum:v4l2_ctrl_type
V4L2_DEC_CMD_PAUSE	videodev2.h	2060;"	d
V4L2_DEC_CMD_PAUSE_TO_BLACK	videodev2.h	2067;"	d
V4L2_DEC_CMD_RESUME	videodev2.h	2061;"	d
V4L2_DEC_CMD_START	videodev2.h	2058;"	d
V4L2_DEC_CMD_START_MUTE_AUDIO	videodev2.h	2064;"	d
V4L2_DEC_CMD_STOP	videodev2.h	2059;"	d
V4L2_DEC_CMD_STOP_IMMEDIATELY	videodev2.h	2071;"	d
V4L2_DEC_CMD_STOP_TO_BLACK	videodev2.h	2070;"	d
V4L2_DEC_START_FMT_GOP	videodev2.h	2078;"	d
V4L2_DEC_START_FMT_NONE	videodev2.h	2076;"	d
V4L2_DV_1080I25	videodev2.h	985;"	d
V4L2_DV_1080I29_97	videodev2.h	983;"	d
V4L2_DV_1080I30	videodev2.h	984;"	d
V4L2_DV_1080I50	videodev2.h	986;"	d
V4L2_DV_1080I60	videodev2.h	987;"	d
V4L2_DV_1080P24	videodev2.h	988;"	d
V4L2_DV_1080P25	videodev2.h	989;"	d
V4L2_DV_1080P30	videodev2.h	990;"	d
V4L2_DV_1080P50	videodev2.h	991;"	d
V4L2_DV_1080P60	videodev2.h	992;"	d
V4L2_DV_480P59_94	videodev2.h	975;"	d
V4L2_DV_576P50	videodev2.h	976;"	d
V4L2_DV_720P24	videodev2.h	977;"	d
V4L2_DV_720P25	videodev2.h	978;"	d
V4L2_DV_720P30	videodev2.h	979;"	d
V4L2_DV_720P50	videodev2.h	980;"	d
V4L2_DV_720P59_94	videodev2.h	981;"	d
V4L2_DV_720P60	videodev2.h	982;"	d
V4L2_DV_BT_656_1120	videodev2.h	1042;"	d
V4L2_DV_HSYNC_POS_POL	videodev2.h	1029;"	d
V4L2_DV_INTERLACED	videodev2.h	1025;"	d
V4L2_DV_INVALID	videodev2.h	974;"	d
V4L2_DV_PROGRESSIVE	videodev2.h	1024;"	d
V4L2_DV_VSYNC_POS_POL	videodev2.h	1028;"	d
V4L2_ENC_CMD_PAUSE	videodev2.h	2041;"	d
V4L2_ENC_CMD_RESUME	videodev2.h	2042;"	d
V4L2_ENC_CMD_START	videodev2.h	2039;"	d
V4L2_ENC_CMD_STOP	videodev2.h	2040;"	d
V4L2_ENC_CMD_STOP_AT_GOP_END	videodev2.h	2045;"	d
V4L2_ENC_IDX_ENTRIES	videodev2.h	2030;"	d
V4L2_ENC_IDX_FRAME_B	videodev2.h	2019;"	d
V4L2_ENC_IDX_FRAME_I	videodev2.h	2017;"	d
V4L2_ENC_IDX_FRAME_MASK	videodev2.h	2020;"	d
V4L2_ENC_IDX_FRAME_P	videodev2.h	2018;"	d
V4L2_EVENT_ALL	videodev2.h	2303;"	d
V4L2_EVENT_CTRL	videodev2.h	2306;"	d
V4L2_EVENT_CTRL_CH_FLAGS	videodev2.h	2327;"	d
V4L2_EVENT_CTRL_CH_VALUE	videodev2.h	2326;"	d
V4L2_EVENT_EOS	videodev2.h	2305;"	d
V4L2_EVENT_FRAME_SYNC	videodev2.h	2307;"	d
V4L2_EVENT_MSM_VIDC_CLOSE_DONE	videodev2.h	2316;"	d
V4L2_EVENT_MSM_VIDC_FLUSH_DONE	videodev2.h	2311;"	d
V4L2_EVENT_MSM_VIDC_PORT_SETTINGS_CHANGED_INSUFFICIENT	videodev2.h	2314;"	d
V4L2_EVENT_MSM_VIDC_PORT_SETTINGS_CHANGED_SUFFICIENT	videodev2.h	2312;"	d
V4L2_EVENT_MSM_VIDC_START	videodev2.h	2310;"	d
V4L2_EVENT_PRIVATE_START	videodev2.h	2308;"	d
V4L2_EVENT_SUB_FL_ALLOW_FEEDBACK	videodev2.h	2363;"	d
V4L2_EVENT_SUB_FL_SEND_INITIAL	videodev2.h	2362;"	d
V4L2_EVENT_VSYNC	videodev2.h	2304;"	d
V4L2_EXPOSURE_APERTURE_PRIORITY	videodev2.h	/^	V4L2_EXPOSURE_APERTURE_PRIORITY = 3$/;"	e	enum:v4l2_exposure_auto_type
V4L2_EXPOSURE_AUTO	videodev2.h	/^	V4L2_EXPOSURE_AUTO = 0,$/;"	e	enum:v4l2_exposure_auto_type
V4L2_EXPOSURE_MANUAL	videodev2.h	/^	V4L2_EXPOSURE_MANUAL = 1,$/;"	e	enum:v4l2_exposure_auto_type
V4L2_EXPOSURE_SHUTTER_PRIORITY	videodev2.h	/^	V4L2_EXPOSURE_SHUTTER_PRIORITY = 2,$/;"	e	enum:v4l2_exposure_auto_type
V4L2_FBUF_CAP_BITMAP_CLIPPING	videodev2.h	694;"	d
V4L2_FBUF_CAP_CHROMAKEY	videodev2.h	692;"	d
V4L2_FBUF_CAP_EXTERNOVERLAY	videodev2.h	691;"	d
V4L2_FBUF_CAP_GLOBAL_ALPHA	videodev2.h	696;"	d
V4L2_FBUF_CAP_LIST_CLIPPING	videodev2.h	693;"	d
V4L2_FBUF_CAP_LOCAL_ALPHA	videodev2.h	695;"	d
V4L2_FBUF_CAP_LOCAL_INV_ALPHA	videodev2.h	697;"	d
V4L2_FBUF_CAP_SRC_CHROMAKEY	videodev2.h	698;"	d
V4L2_FBUF_FLAG_CHROMAKEY	videodev2.h	702;"	d
V4L2_FBUF_FLAG_GLOBAL_ALPHA	videodev2.h	704;"	d
V4L2_FBUF_FLAG_LOCAL_ALPHA	videodev2.h	703;"	d
V4L2_FBUF_FLAG_LOCAL_INV_ALPHA	videodev2.h	705;"	d
V4L2_FBUF_FLAG_OVERLAY	videodev2.h	701;"	d
V4L2_FBUF_FLAG_PRIMARY	videodev2.h	700;"	d
V4L2_FBUF_FLAG_SRC_CHROMAKEY	videodev2.h	706;"	d
V4L2_FIELD_ALTERNATE	videodev2.h	/^	V4L2_FIELD_ALTERNATE     = 7, \/* both fields alternating into$/;"	e	enum:v4l2_field
V4L2_FIELD_ANY	videodev2.h	/^	V4L2_FIELD_ANY           = 0, \/* driver can choose from none,$/;"	e	enum:v4l2_field
V4L2_FIELD_BOTTOM	videodev2.h	/^	V4L2_FIELD_BOTTOM        = 3, \/* bottom field only *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_HAS_BOTH	videodev2.h	142;"	d
V4L2_FIELD_HAS_BOTTOM	videodev2.h	135;"	d
V4L2_FIELD_HAS_TOP	videodev2.h	128;"	d
V4L2_FIELD_INTERLACED	videodev2.h	/^	V4L2_FIELD_INTERLACED    = 4, \/* both fields interlaced *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_INTERLACED_BT	videodev2.h	/^	V4L2_FIELD_INTERLACED_BT = 9, \/* both fields interlaced, top field$/;"	e	enum:v4l2_field
V4L2_FIELD_INTERLACED_TB	videodev2.h	/^	V4L2_FIELD_INTERLACED_TB = 8, \/* both fields interlaced, top field$/;"	e	enum:v4l2_field
V4L2_FIELD_NONE	videodev2.h	/^	V4L2_FIELD_NONE          = 1, \/* this device has no fields ... *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_SEQ_BT	videodev2.h	/^	V4L2_FIELD_SEQ_BT        = 6, \/* same as above + bottom-top order *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_SEQ_TB	videodev2.h	/^	V4L2_FIELD_SEQ_TB        = 5, \/* both fields sequential into one$/;"	e	enum:v4l2_field
V4L2_FIELD_TOP	videodev2.h	/^	V4L2_FIELD_TOP           = 2, \/* top field only *\/$/;"	e	enum:v4l2_field
V4L2_FLASH_FAULT_INDICATOR	videodev2.h	1866;"	d
V4L2_FLASH_FAULT_OVER_CURRENT	videodev2.h	1865;"	d
V4L2_FLASH_FAULT_OVER_TEMPERATURE	videodev2.h	1863;"	d
V4L2_FLASH_FAULT_OVER_VOLTAGE	videodev2.h	1861;"	d
V4L2_FLASH_FAULT_SHORT_CIRCUIT	videodev2.h	1864;"	d
V4L2_FLASH_FAULT_TIMEOUT	videodev2.h	1862;"	d
V4L2_FLASH_LED_MODE_FLASH	videodev2.h	/^	V4L2_FLASH_LED_MODE_FLASH,$/;"	e	enum:v4l2_flash_led_mode
V4L2_FLASH_LED_MODE_NONE	videodev2.h	/^	V4L2_FLASH_LED_MODE_NONE,$/;"	e	enum:v4l2_flash_led_mode
V4L2_FLASH_LED_MODE_TORCH	videodev2.h	/^	V4L2_FLASH_LED_MODE_TORCH,$/;"	e	enum:v4l2_flash_led_mode
V4L2_FLASH_STROBE_SOURCE_EXTERNAL	videodev2.h	/^	V4L2_FLASH_STROBE_SOURCE_EXTERNAL,$/;"	e	enum:v4l2_flash_strobe_source
V4L2_FLASH_STROBE_SOURCE_SOFTWARE	videodev2.h	/^	V4L2_FLASH_STROBE_SOURCE_SOFTWARE,$/;"	e	enum:v4l2_flash_strobe_source
V4L2_FMT_FLAG_COMPRESSED	videodev2.h	445;"	d
V4L2_FMT_FLAG_EMULATED	videodev2.h	446;"	d
V4L2_FRMIVAL_TYPE_CONTINUOUS	uvc_compat.h	/^	V4L2_FRMIVAL_TYPE_CONTINUOUS	= 2,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMIVAL_TYPE_CONTINUOUS	videodev2.h	/^	V4L2_FRMIVAL_TYPE_CONTINUOUS	= 2,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMIVAL_TYPE_DISCRETE	uvc_compat.h	/^	V4L2_FRMIVAL_TYPE_DISCRETE	= 1,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMIVAL_TYPE_DISCRETE	videodev2.h	/^	V4L2_FRMIVAL_TYPE_DISCRETE	= 1,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMIVAL_TYPE_STEPWISE	uvc_compat.h	/^	V4L2_FRMIVAL_TYPE_STEPWISE	= 3,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMIVAL_TYPE_STEPWISE	videodev2.h	/^	V4L2_FRMIVAL_TYPE_STEPWISE	= 3,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMSIZE_TYPE_CONTINUOUS	uvc_compat.h	/^	V4L2_FRMSIZE_TYPE_CONTINUOUS	= 2,$/;"	e	enum:v4l2_frmsizetypes
V4L2_FRMSIZE_TYPE_CONTINUOUS	videodev2.h	/^	V4L2_FRMSIZE_TYPE_CONTINUOUS	= 2,$/;"	e	enum:v4l2_frmsizetypes
V4L2_FRMSIZE_TYPE_DISCRETE	uvc_compat.h	/^	V4L2_FRMSIZE_TYPE_DISCRETE	= 1,$/;"	e	enum:v4l2_frmsizetypes
V4L2_FRMSIZE_TYPE_DISCRETE	videodev2.h	/^	V4L2_FRMSIZE_TYPE_DISCRETE	= 1,$/;"	e	enum:v4l2_frmsizetypes
V4L2_FRMSIZE_TYPE_STEPWISE	uvc_compat.h	/^	V4L2_FRMSIZE_TYPE_STEPWISE	= 3,$/;"	e	enum:v4l2_frmsizetypes
V4L2_FRMSIZE_TYPE_STEPWISE	videodev2.h	/^	V4L2_FRMSIZE_TYPE_STEPWISE	= 3,$/;"	e	enum:v4l2_frmsizetypes
V4L2_INPUT_TYPE_CAMERA	videodev2.h	1061;"	d
V4L2_INPUT_TYPE_TUNER	videodev2.h	1060;"	d
V4L2_IN_CAP_CUSTOM_TIMINGS	videodev2.h	1089;"	d
V4L2_IN_CAP_PRESETS	videodev2.h	1088;"	d
V4L2_IN_CAP_STD	videodev2.h	1090;"	d
V4L2_IN_ST_COLOR_KILL	videodev2.h	1075;"	d
V4L2_IN_ST_HFLIP	videodev2.h	1070;"	d
V4L2_IN_ST_MACROVISION	videodev2.h	1083;"	d
V4L2_IN_ST_NO_ACCESS	videodev2.h	1084;"	d
V4L2_IN_ST_NO_CARRIER	videodev2.h	1080;"	d
V4L2_IN_ST_NO_COLOR	videodev2.h	1066;"	d
V4L2_IN_ST_NO_EQU	videodev2.h	1079;"	d
V4L2_IN_ST_NO_H_LOCK	videodev2.h	1074;"	d
V4L2_IN_ST_NO_POWER	videodev2.h	1064;"	d
V4L2_IN_ST_NO_SIGNAL	videodev2.h	1065;"	d
V4L2_IN_ST_NO_SYNC	videodev2.h	1078;"	d
V4L2_IN_ST_VFLIP	videodev2.h	1071;"	d
V4L2_IN_ST_VTR	videodev2.h	1085;"	d
V4L2_JPEG_ACTIVE_MARKER_APP0	videodev2.h	1888;"	d
V4L2_JPEG_ACTIVE_MARKER_APP1	videodev2.h	1889;"	d
V4L2_JPEG_ACTIVE_MARKER_COM	videodev2.h	1890;"	d
V4L2_JPEG_ACTIVE_MARKER_DHT	videodev2.h	1892;"	d
V4L2_JPEG_ACTIVE_MARKER_DQT	videodev2.h	1891;"	d
V4L2_JPEG_CHROMA_SUBSAMPLING_410	videodev2.h	/^	V4L2_JPEG_CHROMA_SUBSAMPLING_410	= 4,$/;"	e	enum:v4l2_jpeg_chroma_subsampling
V4L2_JPEG_CHROMA_SUBSAMPLING_411	videodev2.h	/^	V4L2_JPEG_CHROMA_SUBSAMPLING_411	= 3,$/;"	e	enum:v4l2_jpeg_chroma_subsampling
V4L2_JPEG_CHROMA_SUBSAMPLING_420	videodev2.h	/^	V4L2_JPEG_CHROMA_SUBSAMPLING_420	= 2,$/;"	e	enum:v4l2_jpeg_chroma_subsampling
V4L2_JPEG_CHROMA_SUBSAMPLING_422	videodev2.h	/^	V4L2_JPEG_CHROMA_SUBSAMPLING_422	= 1,$/;"	e	enum:v4l2_jpeg_chroma_subsampling
V4L2_JPEG_CHROMA_SUBSAMPLING_444	videodev2.h	/^	V4L2_JPEG_CHROMA_SUBSAMPLING_444	= 0,$/;"	e	enum:v4l2_jpeg_chroma_subsampling
V4L2_JPEG_CHROMA_SUBSAMPLING_GRAY	videodev2.h	/^	V4L2_JPEG_CHROMA_SUBSAMPLING_GRAY	= 5,$/;"	e	enum:v4l2_jpeg_chroma_subsampling
V4L2_JPEG_MARKER_APP	videodev2.h	570;"	d
V4L2_JPEG_MARKER_COM	videodev2.h	569;"	d
V4L2_JPEG_MARKER_DHT	videodev2.h	566;"	d
V4L2_JPEG_MARKER_DQT	videodev2.h	567;"	d
V4L2_JPEG_MARKER_DRI	videodev2.h	568;"	d
V4L2_MEMORY_MMAP	videodev2.h	/^	V4L2_MEMORY_MMAP             = 1,$/;"	e	enum:v4l2_memory
V4L2_MEMORY_OVERLAY	videodev2.h	/^	V4L2_MEMORY_OVERLAY          = 3,$/;"	e	enum:v4l2_memory
V4L2_MEMORY_USERPTR	videodev2.h	/^	V4L2_MEMORY_USERPTR          = 2,$/;"	e	enum:v4l2_memory
V4L2_MODE_HIGHQUALITY	videodev2.h	736;"	d
V4L2_MPEG_AUDIO_AC3_BITRATE_112K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_112K = 7,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_128K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_128K = 8,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_160K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_160K = 9,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_192K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_192K = 10,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_224K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_224K = 11,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_256K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_256K = 12,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_320K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_320K = 13,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_32K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_32K  = 0,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_384K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_384K = 14,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_40K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_40K  = 1,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_448K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_448K = 15,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_48K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_48K  = 2,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_512K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_512K = 16,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_56K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_56K  = 3,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_576K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_576K = 17,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_640K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_640K = 18,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_64K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_64K  = 4,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_80K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_80K  = 5,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_AC3_BITRATE_96K	videodev2.h	/^	V4L2_MPEG_AUDIO_AC3_BITRATE_96K  = 6,$/;"	e	enum:v4l2_mpeg_audio_ac3_bitrate
V4L2_MPEG_AUDIO_CRC_CRC16	videodev2.h	/^	V4L2_MPEG_AUDIO_CRC_CRC16 = 1,$/;"	e	enum:v4l2_mpeg_audio_crc
V4L2_MPEG_AUDIO_CRC_NONE	videodev2.h	/^	V4L2_MPEG_AUDIO_CRC_NONE  = 0,$/;"	e	enum:v4l2_mpeg_audio_crc
V4L2_MPEG_AUDIO_DEC_PLAYBACK_AUTO	videodev2.h	/^	V4L2_MPEG_AUDIO_DEC_PLAYBACK_AUTO	    = 0,$/;"	e	enum:v4l2_mpeg_audio_dec_playback
V4L2_MPEG_AUDIO_DEC_PLAYBACK_LEFT	videodev2.h	/^	V4L2_MPEG_AUDIO_DEC_PLAYBACK_LEFT	    = 2,$/;"	e	enum:v4l2_mpeg_audio_dec_playback
V4L2_MPEG_AUDIO_DEC_PLAYBACK_MONO	videodev2.h	/^	V4L2_MPEG_AUDIO_DEC_PLAYBACK_MONO	    = 4,$/;"	e	enum:v4l2_mpeg_audio_dec_playback
V4L2_MPEG_AUDIO_DEC_PLAYBACK_RIGHT	videodev2.h	/^	V4L2_MPEG_AUDIO_DEC_PLAYBACK_RIGHT	    = 3,$/;"	e	enum:v4l2_mpeg_audio_dec_playback
V4L2_MPEG_AUDIO_DEC_PLAYBACK_STEREO	videodev2.h	/^	V4L2_MPEG_AUDIO_DEC_PLAYBACK_STEREO	    = 1,$/;"	e	enum:v4l2_mpeg_audio_dec_playback
V4L2_MPEG_AUDIO_DEC_PLAYBACK_SWAPPED_STEREO	videodev2.h	/^	V4L2_MPEG_AUDIO_DEC_PLAYBACK_SWAPPED_STEREO = 5,$/;"	e	enum:v4l2_mpeg_audio_dec_playback
V4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS	videodev2.h	/^	V4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS = 1,$/;"	e	enum:v4l2_mpeg_audio_emphasis
V4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17	videodev2.h	/^	V4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17    = 2,$/;"	e	enum:v4l2_mpeg_audio_emphasis
V4L2_MPEG_AUDIO_EMPHASIS_NONE	videodev2.h	/^	V4L2_MPEG_AUDIO_EMPHASIS_NONE         = 0,$/;"	e	enum:v4l2_mpeg_audio_emphasis
V4L2_MPEG_AUDIO_ENCODING_AAC	videodev2.h	/^	V4L2_MPEG_AUDIO_ENCODING_AAC     = 3,$/;"	e	enum:v4l2_mpeg_audio_encoding
V4L2_MPEG_AUDIO_ENCODING_AC3	videodev2.h	/^	V4L2_MPEG_AUDIO_ENCODING_AC3     = 4,$/;"	e	enum:v4l2_mpeg_audio_encoding
V4L2_MPEG_AUDIO_ENCODING_LAYER_1	videodev2.h	/^	V4L2_MPEG_AUDIO_ENCODING_LAYER_1 = 0,$/;"	e	enum:v4l2_mpeg_audio_encoding
V4L2_MPEG_AUDIO_ENCODING_LAYER_2	videodev2.h	/^	V4L2_MPEG_AUDIO_ENCODING_LAYER_2 = 1,$/;"	e	enum:v4l2_mpeg_audio_encoding
V4L2_MPEG_AUDIO_ENCODING_LAYER_3	videodev2.h	/^	V4L2_MPEG_AUDIO_ENCODING_LAYER_3 = 2,$/;"	e	enum:v4l2_mpeg_audio_encoding
V4L2_MPEG_AUDIO_L1_BITRATE_128K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_128K = 3,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_160K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_160K = 4,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_192K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_192K = 5,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_224K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_224K = 6,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_256K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_256K = 7,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_288K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_288K = 8,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_320K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_320K = 9,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_32K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_32K  = 0,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_352K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_352K = 10,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_384K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_384K = 11,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_416K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_416K = 12,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_448K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_448K = 13,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_64K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_64K  = 1,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_96K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_96K  = 2,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_112K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_112K = 6,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_128K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_128K = 7,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_160K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_160K = 8,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_192K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_192K = 9,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_224K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_224K = 10,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_256K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_256K = 11,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_320K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_320K = 12,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_32K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_32K  = 0,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_384K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_384K = 13,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_48K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_48K  = 1,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_56K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_56K  = 2,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_64K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_64K  = 3,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_80K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_80K  = 4,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_96K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_96K  = 5,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_112K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_112K = 7,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_128K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_128K = 8,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_160K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_160K = 9,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_192K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_192K = 10,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_224K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_224K = 11,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_256K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_256K = 12,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_320K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_320K = 13,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_32K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_32K  = 0,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_40K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_40K  = 1,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_48K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_48K  = 2,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_56K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_56K  = 3,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_64K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_64K  = 4,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_80K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_80K  = 5,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_96K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_96K  = 6,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_MODE_DUAL	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_DUAL         = 2,$/;"	e	enum:v4l2_mpeg_audio_mode
V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12 = 2,$/;"	e	enum:v4l2_mpeg_audio_mode_extension
V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16 = 3,$/;"	e	enum:v4l2_mpeg_audio_mode_extension
V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4  = 0,$/;"	e	enum:v4l2_mpeg_audio_mode_extension
V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8  = 1,$/;"	e	enum:v4l2_mpeg_audio_mode_extension
V4L2_MPEG_AUDIO_MODE_JOINT_STEREO	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_JOINT_STEREO = 1,$/;"	e	enum:v4l2_mpeg_audio_mode
V4L2_MPEG_AUDIO_MODE_MONO	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_MONO         = 3,$/;"	e	enum:v4l2_mpeg_audio_mode
V4L2_MPEG_AUDIO_MODE_STEREO	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_STEREO       = 0,$/;"	e	enum:v4l2_mpeg_audio_mode
V4L2_MPEG_AUDIO_SAMPLING_FREQ_32000	videodev2.h	/^	V4L2_MPEG_AUDIO_SAMPLING_FREQ_32000 = 2,$/;"	e	enum:v4l2_mpeg_audio_sampling_freq
V4L2_MPEG_AUDIO_SAMPLING_FREQ_44100	videodev2.h	/^	V4L2_MPEG_AUDIO_SAMPLING_FREQ_44100 = 0,$/;"	e	enum:v4l2_mpeg_audio_sampling_freq
V4L2_MPEG_AUDIO_SAMPLING_FREQ_48000	videodev2.h	/^	V4L2_MPEG_AUDIO_SAMPLING_FREQ_48000 = 1,$/;"	e	enum:v4l2_mpeg_audio_sampling_freq
V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR = 1,$/;"	e	enum:v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF    = 0,$/;"	e	enum:v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR               = 1,$/;"	e	enum:v4l2_mpeg_cx2341x_video_luma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT              = 2,$/;"	e	enum:v4l2_mpeg_cx2341x_video_luma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE      = 3,$/;"	e	enum:v4l2_mpeg_cx2341x_video_luma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE = 4,$/;"	e	enum:v4l2_mpeg_cx2341x_video_luma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF                  = 0,$/;"	e	enum:v4l2_mpeg_cx2341x_video_luma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG     = 4,$/;"	e	enum:v4l2_mpeg_cx2341x_video_median_filter_type
V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR      = 1,$/;"	e	enum:v4l2_mpeg_cx2341x_video_median_filter_type
V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT = 3,$/;"	e	enum:v4l2_mpeg_cx2341x_video_median_filter_type
V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF      = 0,$/;"	e	enum:v4l2_mpeg_cx2341x_video_median_filter_type
V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT     = 2,$/;"	e	enum:v4l2_mpeg_cx2341x_video_median_filter_type
V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO   = 1,$/;"	e	enum:v4l2_mpeg_cx2341x_video_spatial_filter_mode
V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL = 0,$/;"	e	enum:v4l2_mpeg_cx2341x_video_spatial_filter_mode
V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO   = 1,$/;"	e	enum:v4l2_mpeg_cx2341x_video_temporal_filter_mode
V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL = 0,$/;"	e	enum:v4l2_mpeg_cx2341x_video_temporal_filter_mode
V4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_DISABLED	videodev2.h	/^	V4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_DISABLED		= 0,$/;"	e	enum:v4l2_mpeg_mfc51_video_force_frame_type
V4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_I_FRAME	videodev2.h	/^	V4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_I_FRAME		= 1,$/;"	e	enum:v4l2_mpeg_mfc51_video_force_frame_type
V4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_NOT_CODED	videodev2.h	/^	V4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_NOT_CODED	= 2,$/;"	e	enum:v4l2_mpeg_mfc51_video_force_frame_type
V4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_BUF_LIMIT	videodev2.h	/^	V4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_BUF_LIMIT		= 2,$/;"	e	enum:v4l2_mpeg_mfc51_video_frame_skip_mode
V4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_DISABLED	videodev2.h	/^	V4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_DISABLED		= 0,$/;"	e	enum:v4l2_mpeg_mfc51_video_frame_skip_mode
V4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_LEVEL_LIMIT	videodev2.h	/^	V4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_LEVEL_LIMIT	= 1,$/;"	e	enum:v4l2_mpeg_mfc51_video_frame_skip_mode
V4L2_MPEG_STREAM_TYPE_MPEG1_SS	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG1_SS   = 2, \/* MPEG-1 system stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_TYPE_MPEG1_VCD	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG1_VCD  = 4, \/* MPEG-1 VCD-compatible stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_TYPE_MPEG2_DVD	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG2_DVD  = 3, \/* MPEG-2 DVD-compatible stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_TYPE_MPEG2_PS	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG2_PS   = 0, \/* MPEG-2 program stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_TYPE_MPEG2_SVCD	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG2_SVCD = 5, \/* MPEG-2 SVCD-compatible stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_TYPE_MPEG2_TS	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG2_TS   = 1, \/* MPEG-2 transport stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_VBI_FMT_IVTV	videodev2.h	/^	V4L2_MPEG_STREAM_VBI_FMT_IVTV = 1,  \/* VBI in private packets, IVTV format *\/$/;"	e	enum:v4l2_mpeg_stream_vbi_fmt
V4L2_MPEG_STREAM_VBI_FMT_NONE	videodev2.h	/^	V4L2_MPEG_STREAM_VBI_FMT_NONE = 0,  \/* No VBI in the MPEG stream *\/$/;"	e	enum:v4l2_mpeg_stream_vbi_fmt
V4L2_MPEG_VBI_IVTV_CAPTION_525	videodev2.h	2198;"	d
V4L2_MPEG_VBI_IVTV_MAGIC0	videodev2.h	2216;"	d
V4L2_MPEG_VBI_IVTV_MAGIC1	videodev2.h	2217;"	d
V4L2_MPEG_VBI_IVTV_TELETEXT_B	videodev2.h	2197;"	d
V4L2_MPEG_VBI_IVTV_VPS	videodev2.h	2200;"	d
V4L2_MPEG_VBI_IVTV_WSS_625	videodev2.h	2199;"	d
V4L2_MPEG_VIDC_VIDEO_DIVX_FORMAT_4	videodev2.h	/^	V4L2_MPEG_VIDC_VIDEO_DIVX_FORMAT_4		= 0,$/;"	e	enum:v4l2_mpeg_vidc_video_divx_format_type
V4L2_MPEG_VIDC_VIDEO_DIVX_FORMAT_5	videodev2.h	/^	V4L2_MPEG_VIDC_VIDEO_DIVX_FORMAT_5		= 1,$/;"	e	enum:v4l2_mpeg_vidc_video_divx_format_type
V4L2_MPEG_VIDC_VIDEO_DIVX_FORMAT_6	videodev2.h	/^	V4L2_MPEG_VIDC_VIDEO_DIVX_FORMAT_6	    = 2,$/;"	e	enum:v4l2_mpeg_vidc_video_divx_format_type
V4L2_MPEG_VIDC_VIDEO_NAL_FORMAT_FOUR_BYTE_LENGTH	videodev2.h	/^	V4L2_MPEG_VIDC_VIDEO_NAL_FORMAT_FOUR_BYTE_LENGTH   = 4,$/;"	e	enum:v4l2_mpeg_vidc_video_stream_format
V4L2_MPEG_VIDC_VIDEO_NAL_FORMAT_ONE_BYTE_LENGTH	videodev2.h	/^	V4L2_MPEG_VIDC_VIDEO_NAL_FORMAT_ONE_BYTE_LENGTH    = 2,$/;"	e	enum:v4l2_mpeg_vidc_video_stream_format
V4L2_MPEG_VIDC_VIDEO_NAL_FORMAT_ONE_NAL_PER_BUFFER	videodev2.h	/^	V4L2_MPEG_VIDC_VIDEO_NAL_FORMAT_ONE_NAL_PER_BUFFER = 1,$/;"	e	enum:v4l2_mpeg_vidc_video_stream_format
V4L2_MPEG_VIDC_VIDEO_NAL_FORMAT_STARTCODES	videodev2.h	/^	V4L2_MPEG_VIDC_VIDEO_NAL_FORMAT_STARTCODES         = 0,$/;"	e	enum:v4l2_mpeg_vidc_video_stream_format
V4L2_MPEG_VIDC_VIDEO_NAL_FORMAT_TWO_BYTE_LENGTH	videodev2.h	/^	V4L2_MPEG_VIDC_VIDEO_NAL_FORMAT_TWO_BYTE_LENGTH    = 3,$/;"	e	enum:v4l2_mpeg_vidc_video_stream_format
V4L2_MPEG_VIDC_VIDEO_OUTPUT_ORDER_DECODE	videodev2.h	/^	V4L2_MPEG_VIDC_VIDEO_OUTPUT_ORDER_DECODE          = 1,$/;"	e	enum:v4l2_mpeg_vidc_video_output_order
V4L2_MPEG_VIDC_VIDEO_OUTPUT_ORDER_DISPLAY	videodev2.h	/^	V4L2_MPEG_VIDC_VIDEO_OUTPUT_ORDER_DISPLAY         = 0,$/;"	e	enum:v4l2_mpeg_vidc_video_output_order
V4L2_MPEG_VIDEO_ASPECT_16x9	videodev2.h	/^	V4L2_MPEG_VIDEO_ASPECT_16x9    = 2,$/;"	e	enum:v4l2_mpeg_video_aspect
V4L2_MPEG_VIDEO_ASPECT_1x1	videodev2.h	/^	V4L2_MPEG_VIDEO_ASPECT_1x1     = 0,$/;"	e	enum:v4l2_mpeg_video_aspect
V4L2_MPEG_VIDEO_ASPECT_221x100	videodev2.h	/^	V4L2_MPEG_VIDEO_ASPECT_221x100 = 3,$/;"	e	enum:v4l2_mpeg_video_aspect
V4L2_MPEG_VIDEO_ASPECT_4x3	videodev2.h	/^	V4L2_MPEG_VIDEO_ASPECT_4x3     = 1,$/;"	e	enum:v4l2_mpeg_video_aspect
V4L2_MPEG_VIDEO_BITRATE_MODE_CBR	videodev2.h	/^	V4L2_MPEG_VIDEO_BITRATE_MODE_CBR = 1,$/;"	e	enum:v4l2_mpeg_video_bitrate_mode
V4L2_MPEG_VIDEO_BITRATE_MODE_VBR	videodev2.h	/^	V4L2_MPEG_VIDEO_BITRATE_MODE_VBR = 0,$/;"	e	enum:v4l2_mpeg_video_bitrate_mode
V4L2_MPEG_VIDEO_ENCODING_MPEG_1	videodev2.h	/^	V4L2_MPEG_VIDEO_ENCODING_MPEG_1     = 0,$/;"	e	enum:v4l2_mpeg_video_encoding
V4L2_MPEG_VIDEO_ENCODING_MPEG_2	videodev2.h	/^	V4L2_MPEG_VIDEO_ENCODING_MPEG_2     = 1,$/;"	e	enum:v4l2_mpeg_video_encoding
V4L2_MPEG_VIDEO_ENCODING_MPEG_4_AVC	videodev2.h	/^	V4L2_MPEG_VIDEO_ENCODING_MPEG_4_AVC = 2,$/;"	e	enum:v4l2_mpeg_video_encoding
V4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CABAC	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CABAC	= 1,$/;"	e	enum:v4l2_mpeg_video_h264_entropy_mode
V4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CAVLC	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CAVLC	= 0,$/;"	e	enum:v4l2_mpeg_video_h264_entropy_mode
V4L2_MPEG_VIDEO_H264_LEVEL_1B	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_1B	= 1,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_1_0	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_1_0	= 0,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_1_1	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_1_1	= 2,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_1_2	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_1_2	= 3,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_1_3	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_1_3	= 4,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_2_0	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_2_0	= 5,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_2_1	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_2_1	= 6,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_2_2	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_2_2	= 7,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_3_0	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_3_0	= 8,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_3_1	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_3_1	= 9,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_3_2	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_3_2	= 10,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_4_0	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_4_0	= 11,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_4_1	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_4_1	= 12,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_4_2	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_4_2	= 13,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_5_0	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_5_0	= 14,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LEVEL_5_1	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LEVEL_5_1	= 15,$/;"	e	enum:v4l2_mpeg_video_h264_level
V4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED				= 1,$/;"	e	enum:v4l2_mpeg_video_h264_loop_filter_mode
V4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED_AT_SLICE_BOUNDARY	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED_AT_SLICE_BOUNDARY	= 2,$/;"	e	enum:v4l2_mpeg_video_h264_loop_filter_mode
V4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_ENABLED	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_ENABLED				= 0,$/;"	e	enum:v4l2_mpeg_video_h264_loop_filter_mode
V4L2_MPEG_VIDEO_H264_PROFILE_BASELINE	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_BASELINE			= 0,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_CAVLC_444_INTRA	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_CAVLC_444_INTRA		= 11,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_CONSTRAINED_BASELINE	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_CONSTRAINED_BASELINE	= 1,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_EXTENDED	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_EXTENDED			= 3,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_HIGH	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_HIGH			= 4,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10			= 5,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10_INTRA	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10_INTRA		= 8,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422			= 6,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422_INTRA	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422_INTRA		= 9,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_INTRA	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_INTRA		= 10,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_PREDICTIVE	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_PREDICTIVE	= 7,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_MAIN	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_MAIN			= 2,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_MULTIVIEW_HIGH	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_MULTIVIEW_HIGH		= 16,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_BASELINE	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_BASELINE		= 12,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH		= 13,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH_INTRA	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH_INTRA	= 14,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_PROFILE_STEREO_HIGH	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_PROFILE_STEREO_HIGH		= 15,$/;"	e	enum:v4l2_mpeg_video_h264_profile
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_10x11	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_10x11		= 3,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_12x11	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_12x11		= 2,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_15x11	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_15x11		= 11,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_160x99	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_160x99		= 13,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_16x11	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_16x11		= 4,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_18x11	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_18x11		= 10,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_1x1	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_1x1		= 1,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_20x11	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_20x11		= 7,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_24x11	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_24x11		= 6,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_2x1	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_2x1		= 16,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_32x11	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_32x11		= 8,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_3x2	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_3x2		= 15,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_40x33	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_40x33		= 5,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_4x3	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_4x3		= 14,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_64x33	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_64x33		= 12,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_80x33	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_80x33		= 9,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_EXTENDED	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_EXTENDED	= 17,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_UNSPECIFIED	videodev2.h	/^	V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_UNSPECIFIED	= 0,$/;"	e	enum:v4l2_mpeg_video_h264_vui_sar_idc
V4L2_MPEG_VIDEO_HEADER_MODE_JOINED_WITH_1ST_FRAME	videodev2.h	/^	V4L2_MPEG_VIDEO_HEADER_MODE_JOINED_WITH_1ST_FRAME	= 1,$/;"	e	enum:v4l2_mpeg_video_header_mode
V4L2_MPEG_VIDEO_HEADER_MODE_JOINED_WITH_I_FRAME	videodev2.h	/^	V4L2_MPEG_VIDEO_HEADER_MODE_JOINED_WITH_I_FRAME		= 2,$/;"	e	enum:v4l2_mpeg_video_header_mode
V4L2_MPEG_VIDEO_HEADER_MODE_SEPARATE	videodev2.h	/^	V4L2_MPEG_VIDEO_HEADER_MODE_SEPARATE			= 0,$/;"	e	enum:v4l2_mpeg_video_header_mode
V4L2_MPEG_VIDEO_MPEG4_LEVEL_0	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_LEVEL_0	= 0,$/;"	e	enum:v4l2_mpeg_video_mpeg4_level
V4L2_MPEG_VIDEO_MPEG4_LEVEL_0B	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_LEVEL_0B	= 1,$/;"	e	enum:v4l2_mpeg_video_mpeg4_level
V4L2_MPEG_VIDEO_MPEG4_LEVEL_1	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_LEVEL_1	= 2,$/;"	e	enum:v4l2_mpeg_video_mpeg4_level
V4L2_MPEG_VIDEO_MPEG4_LEVEL_2	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_LEVEL_2	= 3,$/;"	e	enum:v4l2_mpeg_video_mpeg4_level
V4L2_MPEG_VIDEO_MPEG4_LEVEL_3	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_LEVEL_3	= 4,$/;"	e	enum:v4l2_mpeg_video_mpeg4_level
V4L2_MPEG_VIDEO_MPEG4_LEVEL_3B	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_LEVEL_3B	= 5,$/;"	e	enum:v4l2_mpeg_video_mpeg4_level
V4L2_MPEG_VIDEO_MPEG4_LEVEL_4	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_LEVEL_4	= 6,$/;"	e	enum:v4l2_mpeg_video_mpeg4_level
V4L2_MPEG_VIDEO_MPEG4_LEVEL_5	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_LEVEL_5	= 7,$/;"	e	enum:v4l2_mpeg_video_mpeg4_level
V4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_CODING_EFFICIENCY	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_CODING_EFFICIENCY	= 4,$/;"	e	enum:v4l2_mpeg_video_mpeg4_profile
V4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_SIMPLE	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_SIMPLE			= 1,$/;"	e	enum:v4l2_mpeg_video_mpeg4_profile
V4L2_MPEG_VIDEO_MPEG4_PROFILE_CORE	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_PROFILE_CORE				= 2,$/;"	e	enum:v4l2_mpeg_video_mpeg4_profile
V4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE				= 0,$/;"	e	enum:v4l2_mpeg_video_mpeg4_profile
V4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE_SCALABLE	videodev2.h	/^	V4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE_SCALABLE			= 3,$/;"	e	enum:v4l2_mpeg_video_mpeg4_profile
V4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_BYTES	videodev2.h	/^	V4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_BYTES	= 2,$/;"	e	enum:v4l2_mpeg_video_multi_slice_mode
V4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_MB	videodev2.h	/^	V4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_MB		= 1,$/;"	e	enum:v4l2_mpeg_video_multi_slice_mode
V4L2_MPEG_VIDEO_MULTI_SLICE_MODE_SINGLE	videodev2.h	/^	V4L2_MPEG_VIDEO_MULTI_SLICE_MODE_SINGLE		= 0,$/;"	e	enum:v4l2_mpeg_video_multi_slice_mode
V4L2_OUTPUT_TYPE_ANALOG	videodev2.h	1107;"	d
V4L2_OUTPUT_TYPE_ANALOGVGAOVERLAY	videodev2.h	1108;"	d
V4L2_OUTPUT_TYPE_MODULATOR	videodev2.h	1106;"	d
V4L2_OUT_CAP_CUSTOM_TIMINGS	videodev2.h	1112;"	d
V4L2_OUT_CAP_PRESETS	videodev2.h	1111;"	d
V4L2_OUT_CAP_STD	videodev2.h	1113;"	d
V4L2_PIX_FMT_BGR24	videodev2.h	312;"	d
V4L2_PIX_FMT_BGR32	videodev2.h	314;"	d
V4L2_PIX_FMT_BGR666	videodev2.h	311;"	d
V4L2_PIX_FMT_CIT_YYVYUY	videodev2.h	428;"	d
V4L2_PIX_FMT_CPIA1	videodev2.h	407;"	d
V4L2_PIX_FMT_DIVX	videodev2.h	403;"	d
V4L2_PIX_FMT_DIVX_311	videodev2.h	402;"	d
V4L2_PIX_FMT_DV	videodev2.h	391;"	d
V4L2_PIX_FMT_ET61X251	videodev2.h	413;"	d
V4L2_PIX_FMT_GREY	videodev2.h	318;"	d
V4L2_PIX_FMT_H263	videodev2.h	395;"	d
V4L2_PIX_FMT_H264	videodev2.h	393;"	d
V4L2_PIX_FMT_H264_NO_SC	videodev2.h	394;"	d
V4L2_PIX_FMT_HI240	videodev2.h	348;"	d
V4L2_PIX_FMT_HM12	videodev2.h	349;"	d
V4L2_PIX_FMT_JL2005BCD	videodev2.h	420;"	d
V4L2_PIX_FMT_JPEG	videodev2.h	390;"	d
V4L2_PIX_FMT_JPGL	videodev2.h	430;"	d
V4L2_PIX_FMT_KONICA420	videodev2.h	429;"	d
V4L2_PIX_FMT_M420	videodev2.h	350;"	d
V4L2_PIX_FMT_MJPEG	videodev2.h	389;"	d
V4L2_PIX_FMT_MPEG	videodev2.h	392;"	d
V4L2_PIX_FMT_MPEG1	videodev2.h	396;"	d
V4L2_PIX_FMT_MPEG2	videodev2.h	397;"	d
V4L2_PIX_FMT_MPEG4	videodev2.h	398;"	d
V4L2_PIX_FMT_MR97310A	videodev2.h	419;"	d
V4L2_PIX_FMT_NV12	videodev2.h	353;"	d
V4L2_PIX_FMT_NV12M	videodev2.h	361;"	d
V4L2_PIX_FMT_NV12MT	videodev2.h	362;"	d
V4L2_PIX_FMT_NV16	videodev2.h	355;"	d
V4L2_PIX_FMT_NV21	videodev2.h	354;"	d
V4L2_PIX_FMT_NV24	videodev2.h	357;"	d
V4L2_PIX_FMT_NV42	videodev2.h	358;"	d
V4L2_PIX_FMT_NV61	videodev2.h	356;"	d
V4L2_PIX_FMT_OV511	videodev2.h	424;"	d
V4L2_PIX_FMT_OV518	videodev2.h	425;"	d
V4L2_PIX_FMT_PAC207	videodev2.h	418;"	d
V4L2_PIX_FMT_PAL8	videodev2.h	329;"	d
V4L2_PIX_FMT_PJPG	videodev2.h	423;"	d
V4L2_PIX_FMT_PWC1	videodev2.h	411;"	d
V4L2_PIX_FMT_PWC2	videodev2.h	412;"	d
V4L2_PIX_FMT_RGB24	videodev2.h	313;"	d
V4L2_PIX_FMT_RGB32	videodev2.h	315;"	d
V4L2_PIX_FMT_RGB332	videodev2.h	305;"	d
V4L2_PIX_FMT_RGB444	videodev2.h	306;"	d
V4L2_PIX_FMT_RGB555	videodev2.h	307;"	d
V4L2_PIX_FMT_RGB555X	videodev2.h	309;"	d
V4L2_PIX_FMT_RGB565	videodev2.h	308;"	d
V4L2_PIX_FMT_RGB565X	videodev2.h	310;"	d
V4L2_PIX_FMT_SBGGR10	videodev2.h	372;"	d
V4L2_PIX_FMT_SBGGR12	videodev2.h	376;"	d
V4L2_PIX_FMT_SBGGR16	videodev2.h	386;"	d
V4L2_PIX_FMT_SBGGR8	videodev2.h	368;"	d
V4L2_PIX_FMT_SE401	videodev2.h	431;"	d
V4L2_PIX_FMT_SGBRG10	videodev2.h	373;"	d
V4L2_PIX_FMT_SGBRG12	videodev2.h	377;"	d
V4L2_PIX_FMT_SGBRG8	videodev2.h	369;"	d
V4L2_PIX_FMT_SGRBG10	videodev2.h	374;"	d
V4L2_PIX_FMT_SGRBG10DPCM8	videodev2.h	381;"	d
V4L2_PIX_FMT_SGRBG12	videodev2.h	378;"	d
V4L2_PIX_FMT_SGRBG8	videodev2.h	370;"	d
V4L2_PIX_FMT_SN9C10X	videodev2.h	409;"	d
V4L2_PIX_FMT_SN9C2028	videodev2.h	421;"	d
V4L2_PIX_FMT_SN9C20X_I420	videodev2.h	410;"	d
V4L2_PIX_FMT_SPCA501	videodev2.h	414;"	d
V4L2_PIX_FMT_SPCA505	videodev2.h	415;"	d
V4L2_PIX_FMT_SPCA508	videodev2.h	416;"	d
V4L2_PIX_FMT_SPCA561	videodev2.h	417;"	d
V4L2_PIX_FMT_SQ905C	videodev2.h	422;"	d
V4L2_PIX_FMT_SRGGB10	videodev2.h	375;"	d
V4L2_PIX_FMT_SRGGB12	videodev2.h	379;"	d
V4L2_PIX_FMT_SRGGB8	videodev2.h	371;"	d
V4L2_PIX_FMT_STV0680	videodev2.h	426;"	d
V4L2_PIX_FMT_TM6000	videodev2.h	427;"	d
V4L2_PIX_FMT_UYVY	videodev2.h	337;"	d
V4L2_PIX_FMT_VC1_ANNEX_G	videodev2.h	400;"	d
V4L2_PIX_FMT_VC1_ANNEX_L	videodev2.h	401;"	d
V4L2_PIX_FMT_VP8	videodev2.h	404;"	d
V4L2_PIX_FMT_VYUY	videodev2.h	338;"	d
V4L2_PIX_FMT_WNVA	videodev2.h	408;"	d
V4L2_PIX_FMT_XVID	videodev2.h	399;"	d
V4L2_PIX_FMT_Y10	videodev2.h	321;"	d
V4L2_PIX_FMT_Y10BPACK	videodev2.h	326;"	d
V4L2_PIX_FMT_Y12	videodev2.h	322;"	d
V4L2_PIX_FMT_Y16	videodev2.h	323;"	d
V4L2_PIX_FMT_Y4	videodev2.h	319;"	d
V4L2_PIX_FMT_Y41P	videodev2.h	341;"	d
V4L2_PIX_FMT_Y6	videodev2.h	320;"	d
V4L2_PIX_FMT_YUV32	videodev2.h	345;"	d
V4L2_PIX_FMT_YUV410	videodev2.h	346;"	d
V4L2_PIX_FMT_YUV411P	videodev2.h	340;"	d
V4L2_PIX_FMT_YUV420	videodev2.h	347;"	d
V4L2_PIX_FMT_YUV420M	videodev2.h	365;"	d
V4L2_PIX_FMT_YUV422P	videodev2.h	339;"	d
V4L2_PIX_FMT_YUV444	videodev2.h	342;"	d
V4L2_PIX_FMT_YUV555	videodev2.h	343;"	d
V4L2_PIX_FMT_YUV565	videodev2.h	344;"	d
V4L2_PIX_FMT_YUYV	videodev2.h	334;"	d
V4L2_PIX_FMT_YVU410	videodev2.h	332;"	d
V4L2_PIX_FMT_YVU420	videodev2.h	333;"	d
V4L2_PIX_FMT_YVYU	videodev2.h	336;"	d
V4L2_PIX_FMT_YYUV	videodev2.h	335;"	d
V4L2_PREEMPHASIS_50_uS	videodev2.h	/^	V4L2_PREEMPHASIS_50_uS		= 1,$/;"	e	enum:v4l2_preemphasis
V4L2_PREEMPHASIS_75_uS	videodev2.h	/^	V4L2_PREEMPHASIS_75_uS		= 2,$/;"	e	enum:v4l2_preemphasis
V4L2_PREEMPHASIS_DISABLED	videodev2.h	/^	V4L2_PREEMPHASIS_DISABLED	= 0,$/;"	e	enum:v4l2_preemphasis
V4L2_PRIORITY_BACKGROUND	videodev2.h	/^	V4L2_PRIORITY_BACKGROUND  = 1,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_DEFAULT	videodev2.h	/^	V4L2_PRIORITY_DEFAULT     = V4L2_PRIORITY_INTERACTIVE,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_INTERACTIVE	videodev2.h	/^	V4L2_PRIORITY_INTERACTIVE = 2,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_RECORD	videodev2.h	/^	V4L2_PRIORITY_RECORD      = 3,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_UNSET	videodev2.h	/^	V4L2_PRIORITY_UNSET       = 0,  \/* not initialized *\/$/;"	e	enum:v4l2_priority
V4L2_RDS_BLOCK_A	videodev2.h	1975;"	d
V4L2_RDS_BLOCK_B	videodev2.h	1976;"	d
V4L2_RDS_BLOCK_C	videodev2.h	1977;"	d
V4L2_RDS_BLOCK_CORRECTED	videodev2.h	1982;"	d
V4L2_RDS_BLOCK_C_ALT	videodev2.h	1979;"	d
V4L2_RDS_BLOCK_D	videodev2.h	1978;"	d
V4L2_RDS_BLOCK_ERROR	videodev2.h	1983;"	d
V4L2_RDS_BLOCK_INVALID	videodev2.h	1980;"	d
V4L2_RDS_BLOCK_MSK	videodev2.h	1974;"	d
V4L2_SEL_FLAG_GE	videodev2.h	769;"	d
V4L2_SEL_FLAG_LE	videodev2.h	770;"	d
V4L2_SEL_TGT_COMPOSE_ACTIVE	videodev2.h	781;"	d
V4L2_SEL_TGT_COMPOSE_BOUNDS	videodev2.h	785;"	d
V4L2_SEL_TGT_COMPOSE_DEFAULT	videodev2.h	783;"	d
V4L2_SEL_TGT_COMPOSE_PADDED	videodev2.h	787;"	d
V4L2_SEL_TGT_CROP_ACTIVE	videodev2.h	775;"	d
V4L2_SEL_TGT_CROP_BOUNDS	videodev2.h	779;"	d
V4L2_SEL_TGT_CROP_DEFAULT	videodev2.h	777;"	d
V4L2_SLICED_CAPTION_525	videodev2.h	2154;"	d
V4L2_SLICED_TELETEXT_B	videodev2.h	2150;"	d
V4L2_SLICED_VBI_525	videodev2.h	2158;"	d
V4L2_SLICED_VBI_625	videodev2.h	2159;"	d
V4L2_SLICED_VPS	videodev2.h	2152;"	d
V4L2_SLICED_WSS_625	videodev2.h	2156;"	d
V4L2_STD_525_60	videodev2.h	925;"	d
V4L2_STD_625_50	videodev2.h	930;"	d
V4L2_STD_ALL	videodev2.h	939;"	d
V4L2_STD_ATSC	videodev2.h	935;"	d
V4L2_STD_ATSC_16_VSB	videodev2.h	847;"	d
V4L2_STD_ATSC_8_VSB	videodev2.h	846;"	d
V4L2_STD_B	videodev2.h	898;"	d
V4L2_STD_BG	videodev2.h	911;"	d
V4L2_STD_DK	videodev2.h	909;"	d
V4L2_STD_G	videodev2.h	901;"	d
V4L2_STD_GH	videodev2.h	907;"	d
V4L2_STD_H	videodev2.h	903;"	d
V4L2_STD_L	videodev2.h	905;"	d
V4L2_STD_MN	videodev2.h	913;"	d
V4L2_STD_MTS	videodev2.h	919;"	d
V4L2_STD_NTSC	videodev2.h	867;"	d
V4L2_STD_NTSC_443	videodev2.h	833;"	d
V4L2_STD_NTSC_M	videodev2.h	831;"	d
V4L2_STD_NTSC_M_JP	videodev2.h	832;"	d
V4L2_STD_NTSC_M_KR	videodev2.h	834;"	d
V4L2_STD_PAL	videodev2.h	893;"	d
V4L2_STD_PAL_60	videodev2.h	829;"	d
V4L2_STD_PAL_B	videodev2.h	817;"	d
V4L2_STD_PAL_B1	videodev2.h	818;"	d
V4L2_STD_PAL_BG	videodev2.h	882;"	d
V4L2_STD_PAL_D	videodev2.h	822;"	d
V4L2_STD_PAL_D1	videodev2.h	823;"	d
V4L2_STD_PAL_DK	videodev2.h	885;"	d
V4L2_STD_PAL_G	videodev2.h	819;"	d
V4L2_STD_PAL_H	videodev2.h	820;"	d
V4L2_STD_PAL_I	videodev2.h	821;"	d
V4L2_STD_PAL_K	videodev2.h	824;"	d
V4L2_STD_PAL_M	videodev2.h	826;"	d
V4L2_STD_PAL_N	videodev2.h	827;"	d
V4L2_STD_PAL_Nc	videodev2.h	828;"	d
V4L2_STD_SECAM	videodev2.h	875;"	d
V4L2_STD_SECAM_B	videodev2.h	836;"	d
V4L2_STD_SECAM_D	videodev2.h	837;"	d
V4L2_STD_SECAM_DK	videodev2.h	871;"	d
V4L2_STD_SECAM_G	videodev2.h	838;"	d
V4L2_STD_SECAM_H	videodev2.h	839;"	d
V4L2_STD_SECAM_K	videodev2.h	840;"	d
V4L2_STD_SECAM_K1	videodev2.h	841;"	d
V4L2_STD_SECAM_L	videodev2.h	842;"	d
V4L2_STD_SECAM_LC	videodev2.h	843;"	d
V4L2_STD_UNKNOWN	videodev2.h	938;"	d
V4L2_TC_FLAG_COLORFRAME	videodev2.h	539;"	d
V4L2_TC_FLAG_DROPFRAME	videodev2.h	538;"	d
V4L2_TC_TYPE_24FPS	videodev2.h	531;"	d
V4L2_TC_TYPE_25FPS	videodev2.h	532;"	d
V4L2_TC_TYPE_30FPS	videodev2.h	533;"	d
V4L2_TC_TYPE_50FPS	videodev2.h	534;"	d
V4L2_TC_TYPE_60FPS	videodev2.h	535;"	d
V4L2_TC_USERBITS_8BITCHARS	videodev2.h	542;"	d
V4L2_TC_USERBITS_USERDEFINED	videodev2.h	541;"	d
V4L2_TC_USERBITS_field	videodev2.h	540;"	d
V4L2_TUNER_ANALOG_TV	videodev2.h	/^	V4L2_TUNER_ANALOG_TV	     = 2,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_CAP_LANG1	videodev2.h	1927;"	d
V4L2_TUNER_CAP_LANG2	videodev2.h	1925;"	d
V4L2_TUNER_CAP_LOW	videodev2.h	1922;"	d
V4L2_TUNER_CAP_NORM	videodev2.h	1923;"	d
V4L2_TUNER_CAP_RDS	videodev2.h	1928;"	d
V4L2_TUNER_CAP_RDS_BLOCK_IO	videodev2.h	1929;"	d
V4L2_TUNER_CAP_RDS_CONTROLS	videodev2.h	1930;"	d
V4L2_TUNER_CAP_SAP	videodev2.h	1926;"	d
V4L2_TUNER_CAP_STEREO	videodev2.h	1924;"	d
V4L2_TUNER_DIGITAL_TV	videodev2.h	/^	V4L2_TUNER_DIGITAL_TV	     = 3,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_MODE_LANG1	videodev2.h	1945;"	d
V4L2_TUNER_MODE_LANG1_LANG2	videodev2.h	1946;"	d
V4L2_TUNER_MODE_LANG2	videodev2.h	1943;"	d
V4L2_TUNER_MODE_MONO	videodev2.h	1941;"	d
V4L2_TUNER_MODE_SAP	videodev2.h	1944;"	d
V4L2_TUNER_MODE_STEREO	videodev2.h	1942;"	d
V4L2_TUNER_RADIO	videodev2.h	/^	V4L2_TUNER_RADIO	     = 1,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_SUB_LANG1	videodev2.h	1937;"	d
V4L2_TUNER_SUB_LANG2	videodev2.h	1935;"	d
V4L2_TUNER_SUB_MONO	videodev2.h	1933;"	d
V4L2_TUNER_SUB_RDS	videodev2.h	1938;"	d
V4L2_TUNER_SUB_SAP	videodev2.h	1936;"	d
V4L2_TUNER_SUB_STEREO	videodev2.h	1934;"	d
V4L2_TYPE_IS_MULTIPLANAR	videodev2.h	166;"	d
V4L2_TYPE_IS_OUTPUT	videodev2.h	170;"	d
V4L2_VBI_INTERLACED	videodev2.h	2128;"	d
V4L2_VBI_UNSYNC	videodev2.h	2127;"	d
VBI_INTERLACED	videodev1.h	175;"	d
VBI_UNSYNC	videodev1.h	174;"	d
VC_CONTROL_UNDEFINED	uvcvideo.h	98;"	d
VC_DESCRIPTOR_UNDEFINED	uvcvideo.h	56;"	d
VC_EXTENSION_UNIT	uvcvideo.h	62;"	d
VC_HEADER	uvcvideo.h	57;"	d
VC_INPUT_TERMINAL	uvcvideo.h	58;"	d
VC_OUTPUT_TERMINAL	uvcvideo.h	59;"	d
VC_PROCESSING_UNIT	uvcvideo.h	61;"	d
VC_REQUEST_ERROR_CODE_CONTROL	uvcvideo.h	100;"	d
VC_SELECTOR_UNIT	uvcvideo.h	60;"	d
VC_VIDEO_POWER_MODE_CONTROL	uvcvideo.h	99;"	d
VGA	spcav4l.h	54;"	d
VIDEO_AUDIO_BALANCE	videodev1.h	112;"	d
VIDEO_AUDIO_BASS	videodev1.h	110;"	d
VIDEO_AUDIO_MUTABLE	videodev1.h	108;"	d
VIDEO_AUDIO_MUTE	videodev1.h	107;"	d
VIDEO_AUDIO_TREBLE	videodev1.h	111;"	d
VIDEO_AUDIO_VOLUME	videodev1.h	109;"	d
VIDEO_CLIPMAP_SIZE	videodev1.h	142;"	d
VIDEO_CLIP_BITMAP	videodev1.h	140;"	d
VIDEO_MAX_FRAME	videodev2.h	72;"	d
VIDEO_MAX_PLANES	videodev2.h	73;"	d
VIDEO_MODE_AUTO	videodev1.h	68;"	d
VIDEO_MODE_NTSC	videodev1.h	66;"	d
VIDEO_MODE_PAL	videodev1.h	65;"	d
VIDEO_MODE_SECAM	videodev1.h	67;"	d
VIDEO_PALETTE_COMPONENT	videodev1.h	98;"	d
VIDEO_PALETTE_GREY	videodev1.h	81;"	d
VIDEO_PALETTE_HI240	videodev1.h	82;"	d
VIDEO_PALETTE_JPEG	spcav4l.h	47;"	d
VIDEO_PALETTE_PLANAR	videodev1.h	97;"	d
VIDEO_PALETTE_RAW	videodev1.h	92;"	d
VIDEO_PALETTE_RGB24	videodev1.h	84;"	d
VIDEO_PALETTE_RGB32	videodev1.h	85;"	d
VIDEO_PALETTE_RGB555	videodev1.h	86;"	d
VIDEO_PALETTE_RGB565	videodev1.h	83;"	d
VIDEO_PALETTE_UYVY	videodev1.h	89;"	d
VIDEO_PALETTE_YUV410P	videodev1.h	96;"	d
VIDEO_PALETTE_YUV411	videodev1.h	91;"	d
VIDEO_PALETTE_YUV411P	videodev1.h	94;"	d
VIDEO_PALETTE_YUV420	videodev1.h	90;"	d
VIDEO_PALETTE_YUV420P	videodev1.h	95;"	d
VIDEO_PALETTE_YUV422	videodev1.h	87;"	d
VIDEO_PALETTE_YUV422P	videodev1.h	93;"	d
VIDEO_PALETTE_YUYV	videodev1.h	88;"	d
VIDEO_SOUND_LANG1	videodev1.h	116;"	d
VIDEO_SOUND_LANG2	videodev1.h	117;"	d
VIDEO_SOUND_MONO	videodev1.h	114;"	d
VIDEO_SOUND_STEREO	videodev1.h	115;"	d
VIDEO_TUNER_LOW	videodev1.h	59;"	d
VIDEO_TUNER_MBS_ON	videodev1.h	63;"	d
VIDEO_TUNER_NORM	videodev1.h	60;"	d
VIDEO_TUNER_NTSC	videodev1.h	57;"	d
VIDEO_TUNER_PAL	videodev1.h	56;"	d
VIDEO_TUNER_RDS_ON	videodev1.h	62;"	d
VIDEO_TUNER_SECAM	videodev1.h	58;"	d
VIDEO_TUNER_STEREO_ON	videodev1.h	61;"	d
VIDEO_TYPE_CAMERA	videodev1.h	46;"	d
VIDEO_TYPE_TV	videodev1.h	45;"	d
VIDEO_VC_AUDIO	videodev1.h	43;"	d
VIDEO_VC_TUNER	videodev1.h	42;"	d
VIDEO_WINDOW_CHROMAKEY	videodev1.h	139;"	d
VIDEO_WINDOW_INTERLACE	videodev1.h	138;"	d
VIDIOCCAPTURE	videodev1.h	185;"	d
VIDIOCGAUDIO	videodev1.h	192;"	d
VIDIOCGCAP	videodev1.h	178;"	d
VIDIOCGCHAN	videodev1.h	179;"	d
VIDIOCGFBUF	videodev1.h	188;"	d
VIDIOCGFREQ	videodev1.h	190;"	d
VIDIOCGMBUF	videodev1.h	196;"	d
VIDIOCGPICT	videodev1.h	183;"	d
VIDIOCGTUNER	videodev1.h	181;"	d
VIDIOCGVBIFMT	videodev1.h	197;"	d
VIDIOCGWIN	videodev1.h	186;"	d
VIDIOCMCAPTURE	videodev1.h	195;"	d
VIDIOCSAUDIO	videodev1.h	193;"	d
VIDIOCSCHAN	videodev1.h	180;"	d
VIDIOCSFBUF	videodev1.h	189;"	d
VIDIOCSFREQ	videodev1.h	191;"	d
VIDIOCSPICT	videodev1.h	184;"	d
VIDIOCSTUNER	videodev1.h	182;"	d
VIDIOCSVBIFMT	videodev1.h	198;"	d
VIDIOCSWIN	videodev1.h	187;"	d
VIDIOCSYNC	videodev1.h	194;"	d
VIDIOC_CREATE_BUFS	videodev2.h	2517;"	d
VIDIOC_CROPCAP	videodev2.h	2468;"	d
VIDIOC_DBG_G_CHIP_IDENT	videodev2.h	2501;"	d
VIDIOC_DBG_G_REGISTER	videodev2.h	2497;"	d
VIDIOC_DBG_S_REGISTER	videodev2.h	2496;"	d
VIDIOC_DECODER_CMD	videodev2.h	2526;"	d
VIDIOC_DQBUF	videodev2.h	2440;"	d
VIDIOC_DQEVENT	videodev2.h	2511;"	d
VIDIOC_ENCODER_CMD	videodev2.h	2488;"	d
VIDIOC_ENUMAUDIO	videodev2.h	2475;"	d
VIDIOC_ENUMAUDOUT	videodev2.h	2476;"	d
VIDIOC_ENUMINPUT	videodev2.h	2448;"	d
VIDIOC_ENUMOUTPUT	videodev2.h	2461;"	d
VIDIOC_ENUMSTD	videodev2.h	2447;"	d
VIDIOC_ENUM_DV_PRESETS	videodev2.h	2505;"	d
VIDIOC_ENUM_FMT	videodev2.h	2431;"	d
VIDIOC_ENUM_FRAMEINTERVALS	uvc_compat.h	124;"	d
VIDIOC_ENUM_FRAMEINTERVALS	videodev2.h	2486;"	d
VIDIOC_ENUM_FRAMESIZES	uvc_compat.h	123;"	d
VIDIOC_ENUM_FRAMESIZES	videodev2.h	2485;"	d
VIDIOC_G_AUDIO	videodev2.h	2453;"	d
VIDIOC_G_AUDOUT	videodev2.h	2462;"	d
VIDIOC_G_CROP	videodev2.h	2469;"	d
VIDIOC_G_CTRL	videodev2.h	2449;"	d
VIDIOC_G_DV_PRESET	videodev2.h	2507;"	d
VIDIOC_G_DV_TIMINGS	videodev2.h	2510;"	d
VIDIOC_G_ENC_INDEX	videodev2.h	2487;"	d
VIDIOC_G_EXT_CTRLS	uvc_compat.h	44;"	d
VIDIOC_G_EXT_CTRLS	videodev2.h	2481;"	d
VIDIOC_G_FBUF	videodev2.h	2436;"	d
VIDIOC_G_FMT	videodev2.h	2432;"	d
VIDIOC_G_FREQUENCY	videodev2.h	2466;"	d
VIDIOC_G_INPUT	videodev2.h	2457;"	d
VIDIOC_G_JPEGCOMP	videodev2.h	2471;"	d
VIDIOC_G_MODULATOR	videodev2.h	2464;"	d
VIDIOC_G_OUTPUT	videodev2.h	2459;"	d
VIDIOC_G_PARM	videodev2.h	2443;"	d
VIDIOC_G_PRIORITY	videodev2.h	2477;"	d
VIDIOC_G_SELECTION	videodev2.h	2521;"	d
VIDIOC_G_SLICED_VBI_CAP	videodev2.h	2479;"	d
VIDIOC_G_STD	videodev2.h	2445;"	d
VIDIOC_G_TUNER	videodev2.h	2451;"	d
VIDIOC_LOG_STATUS	videodev2.h	2480;"	d
VIDIOC_OVERLAY	videodev2.h	2438;"	d
VIDIOC_PREPARE_BUF	videodev2.h	2518;"	d
VIDIOC_QBUF	videodev2.h	2439;"	d
VIDIOC_QUERYBUF	videodev2.h	2435;"	d
VIDIOC_QUERYCAP	videodev2.h	2429;"	d
VIDIOC_QUERYCTRL	videodev2.h	2455;"	d
VIDIOC_QUERYMENU	videodev2.h	2456;"	d
VIDIOC_QUERYSTD	videodev2.h	2473;"	d
VIDIOC_QUERY_DV_PRESET	videodev2.h	2508;"	d
VIDIOC_REQBUFS	videodev2.h	2434;"	d
VIDIOC_RESERVED	videodev2.h	2430;"	d
VIDIOC_STREAMOFF	videodev2.h	2442;"	d
VIDIOC_STREAMON	videodev2.h	2441;"	d
VIDIOC_SUBSCRIBE_EVENT	videodev2.h	2512;"	d
VIDIOC_S_AUDIO	videodev2.h	2454;"	d
VIDIOC_S_AUDOUT	videodev2.h	2463;"	d
VIDIOC_S_CROP	videodev2.h	2470;"	d
VIDIOC_S_CTRL	videodev2.h	2450;"	d
VIDIOC_S_DV_PRESET	videodev2.h	2506;"	d
VIDIOC_S_DV_TIMINGS	videodev2.h	2509;"	d
VIDIOC_S_EXT_CTRLS	uvc_compat.h	45;"	d
VIDIOC_S_EXT_CTRLS	videodev2.h	2482;"	d
VIDIOC_S_FBUF	videodev2.h	2437;"	d
VIDIOC_S_FMT	videodev2.h	2433;"	d
VIDIOC_S_FREQUENCY	videodev2.h	2467;"	d
VIDIOC_S_HW_FREQ_SEEK	videodev2.h	2504;"	d
VIDIOC_S_INPUT	videodev2.h	2458;"	d
VIDIOC_S_JPEGCOMP	videodev2.h	2472;"	d
VIDIOC_S_MODULATOR	videodev2.h	2465;"	d
VIDIOC_S_OUTPUT	videodev2.h	2460;"	d
VIDIOC_S_PARM	videodev2.h	2444;"	d
VIDIOC_S_PRIORITY	videodev2.h	2478;"	d
VIDIOC_S_SELECTION	videodev2.h	2522;"	d
VIDIOC_S_STD	videodev2.h	2446;"	d
VIDIOC_S_TUNER	videodev2.h	2452;"	d
VIDIOC_TRY_DECODER_CMD	videodev2.h	2527;"	d
VIDIOC_TRY_ENCODER_CMD	videodev2.h	2489;"	d
VIDIOC_TRY_EXT_CTRLS	uvc_compat.h	46;"	d
VIDIOC_TRY_EXT_CTRLS	videodev2.h	2483;"	d
VIDIOC_TRY_FMT	videodev2.h	2474;"	d
VIDIOC_UNSUBSCRIBE_EVENT	videodev2.h	2513;"	d
VID_TYPE_CAPTURE	videodev1.h	8;"	d
VID_TYPE_CAPTURE	videodev2.h	80;"	d
VID_TYPE_CHROMAKEY	videodev1.h	12;"	d
VID_TYPE_CHROMAKEY	videodev2.h	84;"	d
VID_TYPE_CLIPPING	videodev1.h	13;"	d
VID_TYPE_CLIPPING	videodev2.h	85;"	d
VID_TYPE_FRAMERAM	videodev1.h	14;"	d
VID_TYPE_FRAMERAM	videodev2.h	86;"	d
VID_TYPE_MJPEG_DECODER	videodev1.h	20;"	d
VID_TYPE_MJPEG_DECODER	videodev2.h	92;"	d
VID_TYPE_MJPEG_ENCODER	videodev1.h	21;"	d
VID_TYPE_MJPEG_ENCODER	videodev2.h	93;"	d
VID_TYPE_MONOCHROME	videodev1.h	16;"	d
VID_TYPE_MONOCHROME	videodev2.h	88;"	d
VID_TYPE_MPEG_DECODER	videodev1.h	18;"	d
VID_TYPE_MPEG_DECODER	videodev2.h	90;"	d
VID_TYPE_MPEG_ENCODER	videodev1.h	19;"	d
VID_TYPE_MPEG_ENCODER	videodev2.h	91;"	d
VID_TYPE_OVERLAY	videodev1.h	11;"	d
VID_TYPE_OVERLAY	videodev2.h	83;"	d
VID_TYPE_SCALES	videodev1.h	15;"	d
VID_TYPE_SCALES	videodev2.h	87;"	d
VID_TYPE_SUBCAPTURE	videodev1.h	17;"	d
VID_TYPE_SUBCAPTURE	videodev2.h	89;"	d
VID_TYPE_TELETEXT	videodev1.h	10;"	d
VID_TYPE_TELETEXT	videodev2.h	82;"	d
VID_TYPE_TUNER	videodev1.h	9;"	d
VID_TYPE_TUNER	videodev2.h	81;"	d
VS_COLORFORMAT	uvcvideo.h	75;"	d
VS_COMMIT_CONTROL	uvcvideo.h	156;"	d
VS_CONTROL_UNDEFINED	uvcvideo.h	154;"	d
VS_FORMAT_DV	uvcvideo.h	74;"	d
VS_FORMAT_FRAME_BASED	uvcvideo.h	76;"	d
VS_FORMAT_MJPEG	uvcvideo.h	71;"	d
VS_FORMAT_MPEG2TS	uvcvideo.h	73;"	d
VS_FORMAT_STREAM_BASED	uvcvideo.h	78;"	d
VS_FORMAT_UNCOMPRESSED	uvcvideo.h	69;"	d
VS_FRAME_FRAME_BASED	uvcvideo.h	77;"	d
VS_FRAME_MJPEG	uvcvideo.h	72;"	d
VS_FRAME_UNCOMPRESSED	uvcvideo.h	70;"	d
VS_GENERATE_KEY_FRAME_CONTROL	uvcvideo.h	161;"	d
VS_INPUT_HEADER	uvcvideo.h	66;"	d
VS_OUTPUT_HEADER	uvcvideo.h	67;"	d
VS_PROBE_CONTROL	uvcvideo.h	155;"	d
VS_STILL_COMMIT_CONTROL	uvcvideo.h	158;"	d
VS_STILL_IMAGE_FRAME	uvcvideo.h	68;"	d
VS_STILL_IMAGE_TRIGGER_CONTROL	uvcvideo.h	159;"	d
VS_STILL_PROBE_CONTROL	uvcvideo.h	157;"	d
VS_STREAM_ERROR_CODE_CONTROL	uvcvideo.h	160;"	d
VS_SYNC_DELAY_CONTROL	uvcvideo.h	163;"	d
VS_UNDEFINED	uvcvideo.h	65;"	d
VS_UPDATE_FRAME_SEGMENT_CONTROL	uvcvideo.h	162;"	d
VfromRGB	color.h	72;"	d
Vrcoef	color.c	84;"	d	file:
WAVEFORMATEX_avilib	avilib.h	/^} WAVEFORMATEX_avilib;$/;"	t	typeref:struct:__anon34
WAVE_FORMAT_ADPCM	avilib.h	244;"	d
WAVE_FORMAT_ALAW	avilib.h	246;"	d
WAVE_FORMAT_DIGIFIX	avilib.h	251;"	d
WAVE_FORMAT_DIGISTD	avilib.h	250;"	d
WAVE_FORMAT_DSP_TRUESPEECH	avilib.h	253;"	d
WAVE_FORMAT_DVI_ADPCM	avilib.h	249;"	d
WAVE_FORMAT_GSM610	avilib.h	254;"	d
WAVE_FORMAT_IBM_CVSD	avilib.h	245;"	d
WAVE_FORMAT_MULAW	avilib.h	247;"	d
WAVE_FORMAT_OKI_ADPCM	avilib.h	248;"	d
WAVE_FORMAT_PCM	avilib.h	243;"	d
WAVE_FORMAT_UNKNOWN	avilib.h	242;"	d
WAVE_FORMAT_YAMAHA_ADPCM	avilib.h	252;"	d
WIDTH	spcav4l.h	49;"	d
YB_TO_U	color.c	/^YB_TO_U(unsigned char b, unsigned char y)$/;"	f
YR_TO_V	color.c	/^YR_TO_V(unsigned char r, unsigned char y)$/;"	f
YUV420P	spcav4l.h	63;"	d
YUVY	spcav4l.h	/^	YUVY,$/;"	e	enum:__anon23
YUYV	spcav4l.h	/^	YUYV,$/;"	e	enum:__anon23
YYUV	spcav4l.h	/^	YYUV,$/;"	e	enum:__anon23
YfromRGB	color.h	70;"	d
_USB_VIDEO_H_	uvcvideo.h	2;"	d
_UVC_COMPAT_H	uvc_compat.h	2;"	d
__LINUX_VIDEODEV2_H	videodev2.h	57;"	d
__LINUX_VIDEODEV_H	videodev1.h	3;"	d
__P	utils.c	43;"	d	file:
a_bits	avilib.h	/^    long   a_bits;            \/* bits per audio sample *\/$/;"	m	struct:track_s
a_chans	avilib.h	/^    long   a_chans;           \/* Audio channels, 0 for no audio *\/$/;"	m	struct:track_s
a_codecf_off	avilib.h	/^    off_t a_codecf_off;       \/* absolut offset of audio codec information *\/ $/;"	m	struct:track_s
a_codech_off	avilib.h	/^    off_t a_codech_off;       \/* absolut offset of audio codec information *\/ $/;"	m	struct:track_s
a_fmt	avilib.h	/^    long   a_fmt;             \/* Audio format, see #defines below *\/$/;"	m	struct:track_s
a_rate	avilib.h	/^    long   a_rate;            \/* Rate in Hz *\/$/;"	m	struct:track_s
aaidct	utils.c	/^static PREC aaidct[8] = {$/;"	v	file:
acknowledge	spcaframe.h	/^	int acknowledge;$/;"	m	struct:frame_t
active	uvcvideo.h	/^	atomic_t active;$/;"	m	struct:uvc_video_device
addr	videodev2.h	/^		__u32 addr;$/;"	m	union:v4l2_dbg_match::__anon18
afc	videodev2.h	/^	__s32			afc;$/;"	m	struct:v4l2_tuner
alpha	color.h	/^	unsigned char alpha;$/;"	m	struct:Myrgb32
anum	avilib.h	/^  int anum;            \/\/ total number of audio tracks $/;"	m	struct:__anon36
aptr	avilib.h	/^  int aptr;            \/\/ current audio working track $/;"	m	struct:__anon36
audio	videodev1.h	/^	int		audio;		\/* Audio channel *\/$/;"	m	struct:video_audio
audio_bytes	avilib.h	/^    off_t  audio_bytes;       \/* Total number of bytes of audio data *\/$/;"	m	struct:track_s
audio_chunks	avilib.h	/^    long   audio_chunks;      \/* Chunks of audio data in the file *\/$/;"	m	struct:track_s
audio_index	avilib.h	/^    audio_index_entry *audio_index;$/;"	m	struct:track_s
audio_index_entry	avilib.h	/^} audio_index_entry;$/;"	t	typeref:struct:__anon32
audio_posb	avilib.h	/^    long   audio_posb;        \/* Audio position: byte within chunk *\/$/;"	m	struct:track_s
audio_posc	avilib.h	/^    long   audio_posc;        \/* Audio position: chunk *\/$/;"	m	struct:track_s
audio_strn	avilib.h	/^    long   audio_strn;        \/* Audio stream number *\/$/;"	m	struct:track_s
audio_tag	avilib.h	/^    char   audio_tag[4];      \/* Tag of audio data *\/$/;"	m	struct:track_s
audios	videodev1.h	/^	int audios;	\/* Num audio devices *\/$/;"	m	struct:video_capability
audioset	videodev2.h	/^	__u32	     audioset;		\/*  Associated audios (bitfield) *\/$/;"	m	struct:v4l2_input
audioset	videodev2.h	/^	__u32	     audioset;		\/*  Associated audios (bitfield) *\/$/;"	m	struct:v4l2_output
audmode	videodev2.h	/^	__u32			audmode;$/;"	m	struct:v4l2_tuner
autobright	spcav4l.h	/^	__u8 autobright;$/;"	m	struct:video_param
avi_add_chunk	avilib.c	/^static int avi_add_chunk(avi_t *AVI, unsigned char *tag, unsigned char *data, int length)$/;"	f	file:
avi_add_index_entry	avilib.c	/^static int avi_add_index_entry(avi_t *AVI, unsigned char *tag, long flags, unsigned long pos, unsigned long len)$/;"	f	file:
avi_close_output_file	avilib.c	/^static int avi_close_output_file(avi_t *AVI)$/;"	f	file:
avi_errors	avilib.c	/^char *(avi_errors[]) =$/;"	v
avi_parse_input_file	avilib.c	/^int avi_parse_input_file(avi_t *AVI, int getIndex)$/;"	f
avi_read	avilib.c	/^static size_t avi_read(int fd, char *buf, size_t len)$/;"	f	file:
avi_sampsize	avilib.c	/^static int avi_sampsize(avi_t *AVI, int j)$/;"	f	file:
avi_t	avilib.h	/^} avi_t;$/;"	t	typeref:struct:__anon36
avi_update_header	avilib.c	/^int avi_update_header(avi_t *AVI)$/;"	f
avi_write	avilib.c	/^static size_t avi_write (int fd, char *buf, size_t len)$/;"	f	file:
avi_write_data	avilib.c	/^static int avi_write_data(avi_t *AVI, char *data, unsigned long length, int audio, int keyframe)$/;"	f	file:
avifile	v4l2uvc.h	/^    avi_t *avifile;$/;"	m	struct:vdIn
avifilename	v4l2uvc.h	/^    char *avifilename;$/;"	m	struct:vdIn
bControlSize	uvcvideo.h	/^			__u8  bControlSize;$/;"	m	struct:uvc_entity::__anon24::__anon25
bControlSize	uvcvideo.h	/^			__u8  bControlSize;$/;"	m	struct:uvc_entity::__anon24::__anon27
bControlSize	uvcvideo.h	/^		        __u8  bControlSize;$/;"	m	struct:uvc_entity::__anon24::__anon29
bControlSize	uvcvideo.h	/^	__u8 bControlSize;$/;"	m	struct:uvc_input_header
bEndpointAddress	uvcvideo.h	/^	__u8 bEndpointAddress;$/;"	m	struct:uvc_input_header
bFormatIndex	uvcvideo.h	/^	__u8  bFormatIndex;$/;"	m	struct:uvc_streaming_control
bFrameIndex	uvcvideo.h	/^	__u8  bFrameIndex;$/;"	m	struct:uvc_frame
bFrameIndex	uvcvideo.h	/^	__u8  bFrameIndex;$/;"	m	struct:uvc_streaming_control
bFrameIntervalType	uvcvideo.h	/^	__u8  bFrameIntervalType;$/;"	m	struct:uvc_frame
bMaxVersion	uvcvideo.h	/^	__u8  bMaxVersion;$/;"	m	struct:uvc_streaming_control
bMinVersion	uvcvideo.h	/^	__u8  bMinVersion;$/;"	m	struct:uvc_streaming_control
bNrInPins	uvcvideo.h	/^			__u8  bNrInPins;$/;"	m	struct:uvc_entity::__anon24::__anon28
bNrInPins	uvcvideo.h	/^		        __u8  bNrInPins;$/;"	m	struct:uvc_entity::__anon24::__anon29
bNumControls	uvcvideo.h	/^		        __u8  bNumControls;$/;"	m	struct:uvc_entity::__anon24::__anon29
bNumFormats	uvcvideo.h	/^	__u8 bNumFormats;$/;"	m	struct:uvc_input_header
bPreferedVersion	uvcvideo.h	/^	__u8  bPreferedVersion;$/;"	m	struct:uvc_streaming_control
bSourceID	uvcvideo.h	/^			__u8  bSourceID;$/;"	m	struct:uvc_entity::__anon24::__anon26
bSourceID	uvcvideo.h	/^			__u8  bSourceID;$/;"	m	struct:uvc_entity::__anon24::__anon27
bStillCaptureMethod	uvcvideo.h	/^	__u8 bStillCaptureMethod;$/;"	m	struct:uvc_input_header
bTerminalLink	uvcvideo.h	/^	__u8 bTerminalLink;$/;"	m	struct:uvc_input_header
bTriggerSupport	uvcvideo.h	/^	__u8 bTriggerSupport;$/;"	m	struct:uvc_input_header
bTriggerUsage	uvcvideo.h	/^	__u8 bTriggerUsage;$/;"	m	struct:uvc_input_header
baSourceID	uvcvideo.h	/^			__u8  *baSourceID;$/;"	m	struct:uvc_entity::__anon24::__anon28
baSourceID	uvcvideo.h	/^		        __u8  *baSourceID;$/;"	m	struct:uvc_entity::__anon24::__anon29
balance	videodev1.h	/^	uint16_t	balance;	\/* Stereo balance *\/$/;"	m	struct:video_audio
base	videodev1.h	/^	void	*base;$/;"	m	struct:video_buffer
base	videodev2.h	/^	void                    *base;$/;"	m	struct:v4l2_framebuffer
bass	videodev1.h	/^	uint16_t	bass, treble;$/;"	m	struct:video_audio
bi_bit_count	avilib.h	/^  uint16_t  bi_bit_count;$/;"	m	struct:__anon33
bi_clr_important	avilib.h	/^  uint32_t  bi_clr_important;$/;"	m	struct:__anon33
bi_clr_used	avilib.h	/^  uint32_t  bi_clr_used;$/;"	m	struct:__anon33
bi_compression	avilib.h	/^  uint32_t  bi_compression;$/;"	m	struct:__anon33
bi_height	avilib.h	/^  uint32_t  bi_height;$/;"	m	struct:__anon33
bi_planes	avilib.h	/^  uint16_t  bi_planes;$/;"	m	struct:__anon33
bi_size	avilib.h	/^  uint32_t  bi_size;$/;"	m	struct:__anon33
bi_size_image	avilib.h	/^  uint32_t  bi_size_image;$/;"	m	struct:__anon33
bi_width	avilib.h	/^  uint32_t  bi_width;$/;"	m	struct:__anon33
bi_x_pels_per_meter	avilib.h	/^  uint32_t  bi_x_pels_per_meter;$/;"	m	struct:__anon33
bi_y_pels_per_meter	avilib.h	/^  uint32_t  bi_y_pels_per_meter;$/;"	m	struct:__anon33
bitmap	videodev2.h	/^	void			__user *bitmap;$/;"	m	struct:v4l2_window
bitmap_info_header	avilib.h	/^  BITMAPINFOHEADER_avilib *bitmap_info_header;$/;"	m	struct:__anon36
bits	utils.c	/^    unsigned int bits;$/;"	m	struct:in	file:
block	videodev2.h	/^	__u8 	block;$/;"	m	struct:v4l2_rds_data
blue	color.h	/^	unsigned char blue;$/;"	m	struct:Myrgb24
blue	color.h	/^	unsigned char blue;$/;"	m	struct:Myrgb32
blue	color.h	/^	unsigned short blue:5;$/;"	m	struct:Myrgb16
bmCapabilities	uvcvideo.h	/^	__u8  bmCapabilities;$/;"	m	struct:uvc_frame
bmControls	uvcvideo.h	/^			__u8  *bmControls;$/;"	m	struct:uvc_entity::__anon24::__anon25
bmControls	uvcvideo.h	/^			__u8  *bmControls;$/;"	m	struct:uvc_entity::__anon24::__anon27
bmControls	uvcvideo.h	/^		        __u8  *bmControls;$/;"	m	struct:uvc_entity::__anon24::__anon29
bmControlsType	uvcvideo.h	/^		        __u8  *bmControlsType;$/;"	m	struct:uvc_entity::__anon24::__anon29
bmFramingInfo	uvcvideo.h	/^	__u8  bmFramingInfo;$/;"	m	struct:uvc_streaming_control
bmHint	uvcvideo.h	/^	__u16 bmHint;$/;"	m	struct:uvc_streaming_control
bmInfo	uvcvideo.h	/^	__u8 bmInfo;$/;"	m	struct:uvc_input_header
bmVideoStandards	uvcvideo.h	/^			__u8  bmVideoStandards;$/;"	m	struct:uvc_entity::__anon24::__anon27
bmaControls	uvcvideo.h	/^	__u8 *bmaControls;$/;"	m	struct:uvc_input_header
bounds	videodev2.h	/^	struct v4l2_rect        bounds;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_rect
bpp	uvcvideo.h	/^	__u8 bpp;$/;"	m	struct:uvc_format
bppIn	spcav4l.h	/^	int bppIn;$/;"	m	struct:vdIn
bridge	spcav4l.h	/^	char bridge[9];$/;"	m	struct:vdIn
bridge_list	spcav4l.h	/^struct bridge_list {$/;"	s
bright	spcaframe.h	/^	unsigned short bright;$/;"	m	struct:frame_t
brightness	videodev1.h	/^	uint16_t	brightness;$/;"	m	struct:video_picture
bt	videodev2.h	/^		struct v4l2_bt_timings	bt;$/;"	m	union:v4l2_dv_timings::__anon5	typeref:struct:v4l2_dv_timings::__anon5::v4l2_bt_timings
buf	uvcvideo.h	/^	struct v4l2_buffer buf;$/;"	m	struct:uvc_buffer	typeref:struct:uvc_buffer::v4l2_buffer
buf	v4l2uvc.h	/^    struct v4l2_buffer buf;$/;"	m	struct:vdIn	typeref:struct:vdIn::v4l2_buffer
buffer	uvcvideo.h	/^	struct uvc_buffer buffer[UVC_MAX_VIDEO_BUFFERS];$/;"	m	struct:uvc_video_queue	typeref:struct:uvc_video_queue::uvc_buffer
bus_info	videodev2.h	/^	__u8	bus_info[32];$/;"	m	struct:v4l2_capability
bytesWritten	v4l2uvc.h	/^    unsigned int bytesWritten;$/;"	m	struct:vdIn
bytesperline	videodev1.h	/^	int	bytesperline;$/;"	m	struct:video_buffer
bytesperline	videodev2.h	/^	__u16		bytesperline;$/;"	m	struct:v4l2_plane_pix_format
bytesperline	videodev2.h	/^	__u32            	bytesperline;	\/* for padding, zero if unused *\/$/;"	m	struct:v4l2_pix_format
bytesused	videodev2.h	/^	__u32			bytesused;$/;"	m	struct:v4l2_buffer
bytesused	videodev2.h	/^	__u32			bytesused;$/;"	m	struct:v4l2_plane
c	videodev2.h	/^	struct v4l2_rect        c;$/;"	m	struct:v4l2_clip	typeref:struct:v4l2_clip::v4l2_rect
c	videodev2.h	/^	struct v4l2_rect        c;$/;"	m	struct:v4l2_crop	typeref:struct:v4l2_crop::v4l2_rect
camera	uvcvideo.h	/^		} camera;$/;"	m	union:uvc_entity::__anon24	typeref:struct:uvc_entity::__anon24::__anon25
cameraname	spcav4l.h	/^	char *cameraname;$/;"	m	struct:vdIn
cameratype	spcav4l.h	/^	int cameratype ;$/;"	m	struct:vdIn
cap	v4l2uvc.h	/^    struct v4l2_capability cap;$/;"	m	struct:vdIn	typeref:struct:vdIn::v4l2_capability
capabilities	videodev2.h	/^	__u32	     capabilities;$/;"	m	struct:v4l2_input
capabilities	videodev2.h	/^	__u32	     capabilities;$/;"	m	struct:v4l2_output
capabilities	videodev2.h	/^	__u32	capabilities;$/;"	m	struct:v4l2_capability
capability	videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_framebuffer
capability	videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_modulator
capability	videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_tuner
capability	videodev2.h	/^	__u32		   capability;	  \/*  Supported modes *\/$/;"	m	struct:v4l2_captureparm
capability	videodev2.h	/^	__u32		   capability;	 \/*  Supported modes *\/$/;"	m	struct:v4l2_outputparm
capability	videodev2.h	/^	__u32	capability;$/;"	m	struct:v4l2_audio
capability	videodev2.h	/^	__u32	capability;$/;"	m	struct:v4l2_audioout
capture	videodev2.h	/^		struct v4l2_captureparm	capture;$/;"	m	union:v4l2_streamparm::__anon15	typeref:struct:v4l2_streamparm::__anon15::v4l2_captureparm
captureFile	v4l2uvc.h	/^    FILE *captureFile;$/;"	m	struct:vdIn
capturemode	videodev2.h	/^	__u32		   capturemode;	  \/*  Current mode *\/$/;"	m	struct:v4l2_captureparm
card	videodev2.h	/^	__u8	card[32];$/;"	m	struct:v4l2_capability
cb_size	avilib.h	/^  uint16_t  cb_size;$/;"	m	struct:__anon34
changeSize	spcav4l.c	/^int changeSize(struct vdIn *vd)$/;"	f
changes	videodev2.h	/^	__u32 changes;$/;"	m	struct:v4l2_event_ctrl
channel	spcav4l.h	/^	int channel ; \/\/ set spca506 usb video grabber$/;"	m	struct:vdIn
channel	videodev1.h	/^	int channel;$/;"	m	struct:video_channel
channels	videodev1.h	/^	int channels;	\/* Num channels *\/$/;"	m	struct:video_capability
check_videoIn	v4l2uvc.c	/^int check_videoIn(struct vdIn *vd, char *device)$/;"	f
chg_para	spcav4l.h	/^	int chg_para;$/;"	m	struct:video_param
chromakey	videodev1.h	/^	uint32_t	chromakey;$/;"	m	struct:video_window
chromakey	videodev2.h	/^	__u32			chromakey;$/;"	m	struct:v4l2_window
chunk_struct	avilib.h	/^struct chunk_struct $/;"	s
cid	utils.c	/^    int cid;			\/* component id *\/$/;"	m	struct:scan	file:
cid	utils.c	/^    int cid;$/;"	m	struct:comp	file:
client_t	spcaframe.h	/^struct client_t{$/;"	s
clipcount	videodev1.h	/^	int		clipcount;$/;"	m	struct:video_window
clipcount	videodev2.h	/^	__u32			clipcount;$/;"	m	struct:v4l2_window
clips	videodev1.h	/^	struct		video_clip *clips;	\/* Set only *\/$/;"	m	struct:video_window	typeref:struct:video_window::video_clip
clips	videodev2.h	/^	struct v4l2_clip	__user *clips;$/;"	m	struct:v4l2_window	typeref:struct:v4l2_window::__user
clock_frequency	uvcvideo.h	/^	__u32 clock_frequency;$/;"	m	struct:uvc_device
close_sock	tcputils.c	/^void close_sock(int sockhandle)$/;"	f
close_v4l	spcav4l.c	/^int close_v4l(struct vdIn *vd)$/;"	f
close_v4l2	v4l2uvc.c	/^int close_v4l2(struct vdIn *vd)$/;"	f
cmd	videodev2.h	/^	__u32 cmd;$/;"	m	struct:v4l2_decoder_cmd
cmd	videodev2.h	/^	__u32 cmd;$/;"	m	struct:v4l2_encoder_cmd
colors	spcaframe.h	/^	unsigned short colors;$/;"	m	struct:frame_t
colorspace	uvcvideo.h	/^	__u8 colorspace;$/;"	m	struct:uvc_format
colorspace	videodev2.h	/^	enum v4l2_colorspace		colorspace;$/;"	m	struct:v4l2_pix_format_mplane	typeref:enum:v4l2_pix_format_mplane::v4l2_colorspace
colorspace	videodev2.h	/^	enum v4l2_colorspace	colorspace;$/;"	m	struct:v4l2_pix_format	typeref:enum:v4l2_pix_format::v4l2_colorspace
colour	videodev1.h	/^	uint16_t	colour;$/;"	m	struct:video_picture
common	avilib.h	/^	struct common_struct common;$/;"	m	struct:wave_header	typeref:struct:wave_header::common_struct
common_struct	avilib.h	/^struct common_struct $/;"	s
comp	utils.c	/^struct comp {$/;"	s	file:
compressor	avilib.h	/^  char   compressor[8];     \/* Type of compressor, 4 bytes + padding for 0 byte *\/$/;"	m	struct:__anon36
compressor2	avilib.h	/^  char   compressor2[8];     \/* Type of compressor, 4 bytes + padding for 0 byte *\/$/;"	m	struct:__anon36
comps	utils.c	/^static struct comp comps[MAXCOMP];$/;"	v	typeref:struct:comp	file:
contrast	spcaframe.h	/^	unsigned short contrast;$/;"	m	struct:frame_t
contrast	videodev1.h	/^	uint16_t	contrast;$/;"	m	struct:video_picture
controls	uvc_compat.h	/^	struct v4l2_ext_control *controls;$/;"	m	struct:v4l2_ext_controls	typeref:struct:v4l2_ext_controls::v4l2_ext_control
controls	uvcvideo.h	/^	struct list_head controls;	\/* struct uvc_control_info list *\/$/;"	m	struct:uvc_driver	typeref:struct:uvc_driver::list_head
controls	uvcvideo.h	/^	struct uvc_control *controls;$/;"	m	struct:uvc_entity	typeref:struct:uvc_entity::uvc_control
controls	videodev2.h	/^	struct v4l2_ext_control *controls;$/;"	m	struct:v4l2_ext_controls	typeref:struct:v4l2_ext_controls::v4l2_ext_control
convertframe	spcav4l.c	/^convertframe(unsigned char *dst, unsigned char *src, int width, int height,$/;"	f
count	uvc_compat.h	/^	__u32 count;$/;"	m	struct:v4l2_ext_controls
count	uvcvideo.h	/^	unsigned int count;$/;"	m	struct:uvc_video_queue
count	videodev1.h	/^	uint32_t	count[2];	\/* count of lines for each frame *\/$/;"	m	struct:vbi_format
count	videodev2.h	/^	__u32			count;$/;"	m	struct:v4l2_create_buffers
count	videodev2.h	/^	__u32			count;$/;"	m	struct:v4l2_requestbuffers
count	videodev2.h	/^	__u32	count[2];$/;"	m	struct:v4l2_vbi_format
count	videodev2.h	/^	__u32 count;$/;"	m	struct:v4l2_ext_controls
ctrl	uvcvideo.h	/^	struct uvc_control_info *ctrl;$/;"	m	struct:uvc_control_mapping	typeref:struct:uvc_control_mapping::uvc_control_info
ctrl	uvcvideo.h	/^	struct uvc_streaming_control ctrl;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_streaming_control
ctrl	videodev2.h	/^		struct v4l2_event_ctrl		ctrl;$/;"	m	union:v4l2_event::__anon17	typeref:struct:v4l2_event::__anon17::v4l2_event_ctrl
ctrl_class	uvc_compat.h	/^	__u32 ctrl_class;$/;"	m	struct:v4l2_ext_controls
ctrl_class	videodev2.h	/^	__u32 ctrl_class;$/;"	m	struct:v4l2_ext_controls
ctrl_mutex	uvcvideo.h	/^	struct mutex ctrl_mutex;	\/* protects controls and devices lists *\/$/;"	m	struct:uvc_driver	typeref:struct:uvc_driver::mutex
ctrl_mutex	uvcvideo.h	/^	struct mutex ctrl_mutex;$/;"	m	struct:uvc_video_device	typeref:struct:uvc_video_device::mutex
cur_format	uvcvideo.h	/^	struct uvc_format *cur_format;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_format
cur_frame	uvcvideo.h	/^	struct uvc_frame *cur_frame;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_frame
data	avilib.h	/^	struct chunk_struct  data;$/;"	m	struct:wave_header	typeref:struct:wave_header::chunk_struct
data	utils.c	/^    void *data;$/;"	m	struct:in	file:
data	uvcvideo.h	/^	__u8 *data;$/;"	m	struct:uvc_control
data	videodev2.h	/^			__u32 data[16];$/;"	m	struct:v4l2_decoder_cmd::__anon9::__anon12
data	videodev2.h	/^			__u32 data[8];$/;"	m	struct:v4l2_encoder_cmd::__anon7::__anon8
data	videodev2.h	/^		__u8				data[64];$/;"	m	union:v4l2_event::__anon17
data	videodev2.h	/^	__u8    data[48];$/;"	m	struct:v4l2_sliced_vbi_data
data	videodev2.h	/^	__u8 data[42];	\/* Sliced VBI data for the line *\/$/;"	m	struct:v4l2_mpeg_vbi_itv0_line
data_offset	videodev2.h	/^	__u32			data_offset;$/;"	m	struct:v4l2_plane
data_type	uvcvideo.h	/^	enum uvc_control_data_type data_type;$/;"	m	struct:uvc_control_mapping	typeref:enum:uvc_control_mapping::uvc_control_data_type
datap	utils.c	/^static unsigned char *datap;$/;"	v	file:
dc	utils.c	/^    int dc;			\/* old dc value *\/$/;"	m	struct:scan	file:
dcts	utils.c	/^    int dcts[6 * 64 + 16];$/;"	m	struct:jpeg_decdata	file:
debug	server.c	/^static int debug = 1;$/;"	v	file:
debug	spcav4l.c	/^static int debug = 0;$/;"	v	file:
debug	v4l2uvc.c	/^static int debug = 1;$/;"	v	file:
dec_checkmarker	utils.c	/^static int dec_checkmarker(void)$/;"	f	file:
dec_huffac	utils.c	176;"	d	file:
dec_huffdc	utils.c	175;"	d	file:
dec_hufftbl	utils.c	/^struct dec_hufftbl {$/;"	s	file:
dec_initscans	utils.c	/^static void dec_initscans(void)$/;"	f	file:
dec_makehuff	utils.c	/^static void dec_makehuff(hu, hufflen, huffvals)$/;"	f	file:
dec_readmarker	utils.c	/^static int dec_readmarker(in)$/;"	f	file:
dec_rec2	utils.c	/^static int dec_rec2(in, hu, runp, c, i)$/;"	f	file:
decode_mcus	utils.c	/^static void decode_mcus(in, dct, n, sc, maxp)$/;"	f	file:
default_value	videodev2.h	/^	__s32		     default_value;$/;"	m	struct:v4l2_queryctrl
default_value	videodev2.h	/^	__s32 default_value;$/;"	m	struct:v4l2_event_ctrl
defrect	videodev2.h	/^	struct v4l2_rect        defrect;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_rect
deltatimes	spcaframe.h	/^	int deltatimes;$/;"	m	struct:frame_t
denominator	videodev2.h	/^	__u32   denominator;$/;"	m	struct:v4l2_fract
depth	videodev1.h	/^	int	depth;$/;"	m	struct:video_buffer
depth	videodev1.h	/^	uint16_t	depth;		\/* Capture depth *\/$/;"	m	struct:video_picture
description	videodev2.h	/^	__u8		    description[32];   \/* Description string *\/$/;"	m	struct:v4l2_fmtdesc
dev	uvcvideo.h	/^	struct uvc_device *dev;$/;"	m	struct:uvc_video_device	typeref:struct:uvc_video_device::uvc_device
device	uvcvideo.h	/^	struct uvc_video_device *device;$/;"	m	struct:uvc_fh	typeref:struct:uvc_fh::uvc_video_device
device_caps	videodev2.h	/^	__u32	device_caps;$/;"	m	struct:v4l2_capability
devices	uvcvideo.h	/^        struct list_head devices;	\/* struct uvc_device list *\/$/;"	m	struct:uvc_driver	typeref:struct:uvc_driver::list_head
dht_data	huffman.h	/^static unsigned char dht_data[DHT_SIZE] = {$/;"	v
dhuff	utils.c	/^    struct dec_hufftbl *dhuff;$/;"	m	union:hufftblp	typeref:struct:hufftblp::dec_hufftbl	file:
dhuff	utils.c	/^static struct dec_hufftbl dhuff[4];$/;"	v	typeref:struct:dec_hufftbl	file:
dirty	uvcvideo.h	/^	__u8 dirty : 1,$/;"	m	struct:uvc_control
discrete	uvc_compat.h	/^		struct v4l2_fract		discrete;$/;"	m	union:v4l2_frmivalenum::__anon21	typeref:struct:v4l2_frmivalenum::__anon21::v4l2_fract
discrete	uvc_compat.h	/^		struct v4l2_frmsize_discrete	discrete;$/;"	m	union:v4l2_frmsizeenum::__anon20	typeref:struct:v4l2_frmsizeenum::__anon20::v4l2_frmsize_discrete
discrete	videodev2.h	/^		struct v4l2_fract		discrete;$/;"	m	union:v4l2_frmivalenum::__anon2	typeref:struct:v4l2_frmivalenum::__anon2::v4l2_fract
discrete	videodev2.h	/^		struct v4l2_frmsize_discrete	discrete;$/;"	m	union:v4l2_frmsizeenum::__anon1	typeref:struct:v4l2_frmsizeenum::__anon1::v4l2_frmsize_discrete
downbright	spcav4l.c	/^unsigned short downbright(struct vdIn *vdin)$/;"	f
downcontrast	spcav4l.c	/^unsigned short downcontrast(struct vdIn *vdin)$/;"	f
dquant	utils.c	/^    int dquant[3][64];$/;"	m	struct:jpeg_decdata	file:
dri	utils.c	/^    int dri;			\/* restart interval *\/$/;"	m	struct:jpginfo	file:
driver	uvcvideo.h	/^        struct usb_driver driver;$/;"	m	struct:uvc_driver	typeref:struct:uvc_driver::usb_driver
driver	videodev2.h	/^	__u8	driver[16];$/;"	m	struct:v4l2_capability
dscans	utils.c	/^static struct scan dscans[MAXCOMP];$/;"	v	typeref:struct:scan	file:
dwAvgBytesPerSec	avilib.h	/^	uint32_t dwAvgBytesPerSec;$/;"	m	struct:common_struct
dwClockFrequency	uvcvideo.h	/^	__u32 dwClockFrequency;$/;"	m	struct:uvc_streaming_control
dwDefaultFrameInterval	uvcvideo.h	/^	__u32 dwDefaultFrameInterval;$/;"	m	struct:uvc_frame
dwFlags	avilib.h	/^  long  dwFlags;$/;"	m	struct:AVIStreamHeader
dwFrameInterval	uvcvideo.h	/^	__u32 *dwFrameInterval;$/;"	m	struct:uvc_frame
dwFrameInterval	uvcvideo.h	/^	__u32 dwFrameInterval;$/;"	m	struct:uvc_streaming_control
dwInitialFrames	avilib.h	/^  long  dwInitialFrames;$/;"	m	struct:AVIStreamHeader
dwLength	avilib.h	/^  long  dwLength;$/;"	m	struct:AVIStreamHeader
dwMaxBitRate	uvcvideo.h	/^	__u32 dwMaxBitRate;$/;"	m	struct:uvc_frame
dwMaxPayloadTransferSize	uvcvideo.h	/^	__u32 dwMaxPayloadTransferSize;$/;"	m	struct:uvc_streaming_control
dwMaxVideoFrameBufferSize	uvcvideo.h	/^	__u32 dwMaxVideoFrameBufferSize;$/;"	m	struct:uvc_frame
dwMaxVideoFrameSize	uvcvideo.h	/^	__u32 dwMaxVideoFrameSize;$/;"	m	struct:uvc_streaming_control
dwMinBitRate	uvcvideo.h	/^	__u32 dwMinBitRate;$/;"	m	struct:uvc_frame
dwPriority	avilib.h	/^  long  dwPriority;$/;"	m	struct:AVIStreamHeader
dwQuality	avilib.h	/^  long  dwQuality;$/;"	m	struct:AVIStreamHeader
dwRate	avilib.h	/^  long  dwRate;$/;"	m	struct:AVIStreamHeader
dwSampleSize	avilib.h	/^  long  dwSampleSize;$/;"	m	struct:AVIStreamHeader
dwSamplesPerSec	avilib.h	/^	uint32_t dwSamplesPerSec;$/;"	m	struct:common_struct
dwScale	avilib.h	/^  long  dwScale;$/;"	m	struct:AVIStreamHeader
dwStart	avilib.h	/^  long  dwStart;$/;"	m	struct:AVIStreamHeader
dwSuggestedBufferSize	avilib.h	/^  long  dwSuggestedBufferSize;$/;"	m	struct:AVIStreamHeader
dw_bottom	avilib.h	/^  uint32_t dw_bottom;$/;"	m	struct:__anon35
dw_caps	avilib.h	/^  uint32_t dw_caps; $/;"	m	struct:__anon35
dw_edit_count	avilib.h	/^  uint32_t dw_edit_count;$/;"	m	struct:__anon35
dw_flags	avilib.h	/^  uint32_t dw_flags; $/;"	m	struct:__anon35
dw_format_change_count	avilib.h	/^  uint32_t dw_format_change_count;$/;"	m	struct:__anon35
dw_initial_frames	avilib.h	/^  uint32_t dw_initial_frames;$/;"	m	struct:__anon35
dw_left	avilib.h	/^  uint32_t dw_left;$/;"	m	struct:__anon35
dw_length	avilib.h	/^  uint32_t dw_length;$/;"	m	struct:__anon35
dw_quality	avilib.h	/^  uint32_t dw_quality;$/;"	m	struct:__anon35
dw_rate	avilib.h	/^  uint32_t dw_rate;$/;"	m	struct:__anon35
dw_right	avilib.h	/^  uint32_t dw_right;$/;"	m	struct:__anon35
dw_sample_size	avilib.h	/^  uint32_t dw_sample_size;$/;"	m	struct:__anon35
dw_scale	avilib.h	/^  uint32_t dw_scale;$/;"	m	struct:__anon35
dw_start	avilib.h	/^  uint32_t dw_start;$/;"	m	struct:__anon35
dw_suggested_buffer_size	avilib.h	/^  uint32_t dw_suggested_buffer_size;$/;"	m	struct:__anon35
dw_top	avilib.h	/^  uint32_t dw_top;$/;"	m	struct:__anon35
ehuff	utils.c	/^    struct enc_hufftbl *ehuff;$/;"	m	union:hufftblp	typeref:struct:hufftblp::enc_hufftbl	file:
entities	uvcvideo.h	/^	struct list_head entities;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::list_head
entity	uvcvideo.h	/^	__u8 entity[16];$/;"	m	struct:uvc_control_info
entity	uvcvideo.h	/^	__u8 entity[16];$/;"	m	struct:uvc_control_mapping
entity	uvcvideo.h	/^	struct uvc_entity *entity;$/;"	m	struct:uvc_control	typeref:struct:uvc_control::uvc_entity
entries	videodev2.h	/^	__u32 entries;$/;"	m	struct:v4l2_enc_idx
entries_cap	videodev2.h	/^	__u32 entries_cap;$/;"	m	struct:v4l2_enc_idx
entry	videodev2.h	/^	struct v4l2_enc_idx_entry entry[V4L2_ENC_IDX_ENTRIES];$/;"	m	struct:v4l2_enc_idx	typeref:struct:v4l2_enc_idx::v4l2_enc_idx_entry
enum_controls	v4l2uvc.c	/^int enum_controls(int vd) \/\/struct vdIn *vd)$/;"	f
enum_frame_formats	v4l2uvc.c	/^int enum_frame_formats(int dev)$/;"	f
enum_frame_intervals	v4l2uvc.c	/^int enum_frame_intervals(int dev, __u32 pixfmt, __u32 width, __u32 height)$/;"	f
enum_frame_sizes	v4l2uvc.c	/^int enum_frame_sizes(int dev, __u32 pixfmt)$/;"	f
error_idx	uvc_compat.h	/^	__u32 error_idx;$/;"	m	struct:v4l2_ext_controls
error_idx	videodev2.h	/^	__u32 error_idx;$/;"	m	struct:v4l2_ext_controls
error_string	avilib.c	/^static char error_string[4096];$/;"	v	file:
exit_fatal	utils.c	/^void exit_fatal(char *messages)$/;"	f
exposure	spcaframe.h	/^	unsigned short exposure;$/;"	m	struct:frame_t
extendedmode	videodev2.h	/^	__u32		   extendedmode;  \/*  Driver-specific extensions *\/$/;"	m	struct:v4l2_captureparm
extendedmode	videodev2.h	/^	__u32		   extendedmode; \/*  Driver-specific extensions *\/$/;"	m	struct:v4l2_outputparm
extension	uvcvideo.h	/^		} extension;$/;"	m	union:uvc_entity::__anon24	typeref:struct:uvc_entity::__anon24::__anon29
extension	uvcvideo.h	/^	struct uvc_entity *extension[8];$/;"	m	struct:uvc_video_device	typeref:struct:uvc_video_device::uvc_entity
fcc	uvcvideo.h	/^	__u32 fcc;$/;"	m	struct:uvc_format
fcc	uvcvideo.h	/^	__u32 fcc;$/;"	m	struct:uvc_format_desc
fccHandler	avilib.h	/^  long  fccHandler;$/;"	m	struct:AVIStreamHeader
fccType	avilib.h	/^  long  fccType;$/;"	m	struct:AVIStreamHeader
fcc_handler	avilib.h	/^  uint32_t fcc_handler; $/;"	m	struct:__anon35
fcc_type	avilib.h	/^  uint32_t fcc_type; $/;"	m	struct:__anon35
fd	spcav4l.h	/^	int fd;$/;"	m	struct:vdIn
fd	v4l2uvc.h	/^    int fd;$/;"	m	struct:vdIn
fdes	avilib.h	/^  long   fdes;              \/* File descriptor of AVI file *\/$/;"	m	struct:__anon36
field	videodev2.h	/^	__u32   field;          \/* 0: first field, 1: second field *\/$/;"	m	struct:v4l2_sliced_vbi_data
field	videodev2.h	/^	__u8 field;$/;"	m	struct:v4l2_event_vsync
field	videodev2.h	/^	enum v4l2_field			field;$/;"	m	struct:v4l2_pix_format_mplane	typeref:enum:v4l2_pix_format_mplane::v4l2_field
field	videodev2.h	/^	enum v4l2_field		field;$/;"	m	struct:v4l2_buffer	typeref:enum:v4l2_buffer::v4l2_field
field	videodev2.h	/^	enum v4l2_field  	field;$/;"	m	struct:v4l2_pix_format	typeref:enum:v4l2_pix_format::v4l2_field
field	videodev2.h	/^	enum v4l2_field  	field;$/;"	m	struct:v4l2_window	typeref:enum:v4l2_window::v4l2_field
fileCounter	v4l2uvc.h	/^    unsigned int fileCounter;$/;"	m	struct:vdIn
fillbits	utils.c	/^static int fillbits(in, le, bi)$/;"	f	file:
flags	uvcvideo.h	/^	__u32 flags;$/;"	m	struct:uvc_format
flags	uvcvideo.h	/^	__u8 flags;$/;"	m	struct:uvc_control_info
flags	videodev1.h	/^	uint32_t	flags;$/;"	m	struct:vbi_format
flags	videodev1.h	/^	uint32_t	flags;$/;"	m	struct:video_audio
flags	videodev1.h	/^	uint32_t	flags;$/;"	m	struct:video_window
flags	videodev1.h	/^	uint32_t flags;$/;"	m	struct:video_channel
flags	videodev1.h	/^	uint32_t flags;$/;"	m	struct:video_tuner
flags	videodev2.h	/^	__u32				flags;$/;"	m	struct:v4l2_event_subscription
flags	videodev2.h	/^	__u32			flags;$/;"	m	struct:v4l2_buffer
flags	videodev2.h	/^	__u32			flags;$/;"	m	struct:v4l2_framebuffer
flags	videodev2.h	/^	__u32	flags;			\/* V4L2_VBI_* *\/$/;"	m	struct:v4l2_vbi_format
flags	videodev2.h	/^	__u32	flags;$/;"	m	struct:v4l2_timecode
flags	videodev2.h	/^	__u32                   flags;$/;"	m	struct:v4l2_selection
flags	videodev2.h	/^	__u32                flags;$/;"	m	struct:v4l2_queryctrl
flags	videodev2.h	/^	__u32               flags;$/;"	m	struct:v4l2_fmtdesc
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_decoder_cmd
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_enc_idx_entry
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_encoder_cmd
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_event_ctrl
fmt	v4l2uvc.h	/^    struct v4l2_format fmt;$/;"	m	struct:vdIn	typeref:struct:vdIn::v4l2_format
fmt	videodev2.h	/^	struct v4l2_pix_format	fmt;$/;"	m	struct:v4l2_framebuffer	typeref:struct:v4l2_framebuffer::v4l2_pix_format
fmt	videodev2.h	/^	} fmt;$/;"	m	struct:v4l2_format	typeref:union:v4l2_format::__anon14
format	avilib.h	/^	struct chunk_struct  format;$/;"	m	struct:wave_header	typeref:struct:wave_header::chunk_struct
format	spcaframe.h	/^	int format;$/;"	m	struct:frame_t
format	uvcvideo.h	/^	struct uvc_format *format;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_format
format	videodev1.h	/^	unsigned	int format;	\/* should be VIDEO_PALETTE_* *\/$/;"	m	struct:video_mmap
format	videodev2.h	/^			__u32 format;$/;"	m	struct:v4l2_decoder_cmd::__anon9::__anon11
format	videodev2.h	/^	struct v4l2_format	format;$/;"	m	struct:v4l2_create_buffers	typeref:struct:v4l2_create_buffers::v4l2_format
formatIn	spcav4l.h	/^	int  formatIn;$/;"	m	struct:vdIn
formatIn	v4l2uvc.h	/^    int formatIn;$/;"	m	struct:vdIn
formatOut	v4l2uvc.h	/^    int formatOut;$/;"	m	struct:vdIn
fps	avilib.h	/^  double fps;               \/* Frames per second *\/$/;"	m	struct:__anon36
fps	spcaframe.h	/^	unsigned char fps;$/;"	m	struct:client_t
fps	v4l2uvc.h	/^    int fps;$/;"	m	struct:vdIn
frame	uvcvideo.h	/^	struct uvc_frame *frame;$/;"	m	struct:uvc_format	typeref:struct:uvc_format::uvc_frame
frame	videodev1.h	/^	unsigned	int frame;	\/* Frame (0 - n) for double buffer *\/$/;"	m	struct:video_mmap
frame_cour	spcav4l.h	/^	volatile int frame_cour;$/;"	m	struct:vdIn
frame_cour	v4l2uvc.h	/^    volatile int frame_cour;  \/\/ from servfox$/;"	m	struct:vdIn
frame_sequence	videodev2.h	/^	__u32 frame_sequence;$/;"	m	struct:v4l2_event_frame_sync
frame_sync	videodev2.h	/^		struct v4l2_event_frame_sync	frame_sync;$/;"	m	union:v4l2_event::__anon17	typeref:struct:v4l2_event::__anon17::v4l2_event_frame_sync
frame_t	spcaframe.h	/^struct frame_t{$/;"	s
framebuffer	v4l2uvc.h	/^    unsigned char *framebuffer;$/;"	m	struct:vdIn
framecount	v4l2uvc.h	/^    int framecount;$/;"	m	struct:vdIn
framelines	videodev2.h	/^	__u32		     framelines;$/;"	m	struct:v4l2_standard
framelock	spcav4l.h	/^	int framelock[4];$/;"	m	struct:vdIn
framelock	v4l2uvc.h	/^    int framelock[4];$/;"	m	struct:vdIn
frameperiod	videodev2.h	/^	struct v4l2_fract    frameperiod; \/* Frames, not fields *\/$/;"	m	struct:v4l2_standard	typeref:struct:v4l2_standard::v4l2_fract
frames	videodev1.h	/^	int	frames;		\/* Frames *\/$/;"	m	struct:video_mbuf
frames	videodev2.h	/^	__u8	frames;$/;"	m	struct:v4l2_timecode
framesWritten	v4l2uvc.h	/^    unsigned int framesWritten;$/;"	m	struct:vdIn
framesizeIn	spcav4l.h	/^	int framesizeIn ;$/;"	m	struct:vdIn
framesizeIn	v4l2uvc.h	/^    int framesizeIn;$/;"	m	struct:vdIn
freeLut	color.c	/^void freeLut(void){$/;"	f
frequency	videodev2.h	/^	__u32		      frequency;$/;"	m	struct:v4l2_frequency
ftopict	utils.c	/^typedef void (*ftopict) ( int *out, unsigned char *pic, int width) ;$/;"	t	file:
ftruncate	avilib.c	31;"	d	file:
func	utils.c	/^    int (*func) __P((void *));$/;"	m	struct:in	file:
getPict	v4l2uvc.h	/^    int getPict;$/;"	m	struct:vdIn
getPictureName	utils.c	/^ getPictureName (char *Picture, int fmt)$/;"	f	file:
get_jpegsize	utils.c	/^int get_jpegsize(unsigned char *buf, int insize)$/;"	f
get_picture	utils.c	/^get_picture(unsigned char *buf,int size)$/;"	f
get_pictureYV2	utils.c	/^get_pictureYV2(unsigned char *buf,int width,int height)$/;"	f
getbyte	utils.c	/^static int getbyte(void)$/;"	f	file:
getword	utils.c	/^static int getword(void)$/;"	f	file:
global_alpha	videodev2.h	/^	__u8                    global_alpha;$/;"	m	struct:v4l2_window
grab	server.c	/^void grab(void)$/;"	f
grabMethod	spcav4l.h	/^	int grabMethod ;$/;"	m	struct:vdIn
grabmethod	v4l2uvc.h	/^    int grabmethod;$/;"	m	struct:vdIn
grabmutex	spcav4l.h	/^	pthread_mutex_t grabmutex;$/;"	m	struct:vdIn
green	color.h	/^	unsigned char green;$/;"	m	struct:Myrgb24
green	color.h	/^	unsigned char green;$/;"	m	struct:Myrgb32
green	color.h	/^	unsigned short green:6;$/;"	m	struct:Myrgb16
guid	uvcvideo.h	/^	__u8 guid[16];$/;"	m	struct:uvc_format_desc
guidExtensionCode	uvcvideo.h	/^		        __u8  guidExtensionCode[16];$/;"	m	struct:uvc_entity::__anon24::__anon29
h	spcaframe.h	/^	int h;$/;"	m	struct:frame_t
hbackporch	videodev2.h	/^	__u32	hbackporch;	\/* Horizontal back porch in pixels *\/$/;"	m	struct:v4l2_bt_timings
hdrheight	spcav4l.h	/^	int  hdrheight;$/;"	m	struct:vdIn
hdrwidth	spcav4l.h	/^	int  hdrwidth;$/;"	m	struct:vdIn
header	spcaframe.h	/^	char header[5];$/;"	m	struct:frame_t
height	avilib.h	/^  long   height;            \/* Height of a video frame *\/$/;"	m	struct:__anon36
height	uvc_compat.h	/^	__u32			height;		\/* Frame height *\/$/;"	m	struct:v4l2_frmivalenum
height	uvc_compat.h	/^	__u32			height;		\/* Frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_discrete
height	v4l2uvc.h	/^    int height;$/;"	m	struct:vdIn
height	videodev1.h	/^	int		height,width;$/;"	m	struct:video_mmap
height	videodev1.h	/^	int	height,width;$/;"	m	struct:video_buffer
height	videodev1.h	/^	int32_t	width, height;$/;"	m	struct:video_clip
height	videodev1.h	/^	uint32_t	width,height;		\/* Its size *\/$/;"	m	struct:video_window
height	videodev2.h	/^	__s32   height;$/;"	m	struct:v4l2_rect
height	videodev2.h	/^	__u32				height;$/;"	m	struct:v4l2_pix_format_mplane
height	videodev2.h	/^	__u32			height;		\/* Frame height *\/$/;"	m	struct:v4l2_frmivalenum
height	videodev2.h	/^	__u32			height;		\/* Frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_discrete
height	videodev2.h	/^	__u32			height;$/;"	m	struct:v4l2_pix_format
height	videodev2.h	/^	__u32	height;		\/* height in lines *\/$/;"	m	struct:v4l2_bt_timings
height	videodev2.h	/^	__u32	height;$/;"	m	struct:v4l2_dv_enum_preset
hfrontporch	videodev2.h	/^	__u32	hfrontporch;	\/* Horizpontal front porch in pixels *\/$/;"	m	struct:v4l2_bt_timings
hours	videodev2.h	/^	__u8	hours;$/;"	m	struct:v4l2_timecode
hsync	videodev2.h	/^	__u32	hsync;		\/* Horizontal Sync length in pixels *\/$/;"	m	struct:v4l2_bt_timings
huac	utils.c	/^    union hufftblp huac;$/;"	m	struct:scan	typeref:union:scan::hufftblp	file:
hudc	utils.c	/^    union hufftblp hudc;$/;"	m	struct:scan	typeref:union:scan::hufftblp	file:
hue	videodev1.h	/^	uint16_t	hue;$/;"	m	struct:video_picture
huffman_init	utils.c	/^static int huffman_init(void)$/;"	f	file:
hufftblp	utils.c	/^union hufftblp {$/;"	u	file:
hv	utils.c	/^    int hv;			\/* horiz\/vert, copied from comp *\/$/;"	m	struct:scan	file:
hv	utils.c	/^    int hv;$/;"	m	struct:comp	file:
id	avilib.h	/^	unsigned char id[4];$/;"	m	struct:chunk_struct
id	avilib.h	/^  unsigned char id[4];   \/* RIFF *\/$/;"	m	struct:riff_struct
id	uvc_compat.h	/^	__u32 id;$/;"	m	struct:v4l2_ext_control
id	uvcvideo.h	/^	__u32 id;$/;"	m	struct:uvc_control_mapping
id	uvcvideo.h	/^	__u8 id;$/;"	m	struct:uvc_entity
id	videodev2.h	/^	__u32				id;$/;"	m	struct:v4l2_event
id	videodev2.h	/^	__u32				id;$/;"	m	struct:v4l2_event_subscription
id	videodev2.h	/^	__u32		     id;$/;"	m	struct:v4l2_control
id	videodev2.h	/^	__u32		     id;$/;"	m	struct:v4l2_queryctrl
id	videodev2.h	/^	__u32		id;$/;"	m	struct:v4l2_querymenu
id	videodev2.h	/^	__u32   id;$/;"	m	struct:v4l2_sliced_vbi_data
id	videodev2.h	/^	__u32 id;$/;"	m	struct:v4l2_ext_control
id	videodev2.h	/^	__u8 id;	\/* One of V4L2_MPEG_VBI_IVTV_* above *\/$/;"	m	struct:v4l2_mpeg_vbi_itv0_line
id	videodev2.h	/^	v4l2_std_id          id;$/;"	m	struct:v4l2_standard
id_str	avilib.c	/^static char id_str[MAX_INFO_STRLEN];$/;"	v	file:
idct	utils.c	/^inline static void idct(int *in, int *out, int *quant, long off, int max)$/;"	f	file:
idctqtab	utils.c	/^static void idctqtab(qin, qout)$/;"	f	file:
ident	videodev2.h	/^	__u32 ident;       \/* chip identifier as specified in <media\/v4l2-chip-ident.h> *\/$/;"	m	struct:v4l2_dbg_chip_ident
idx	avilib.h	/^  unsigned char (*idx)[16]; \/* index entries (AVI idx1 tag) *\/$/;"	m	struct:__anon36
il_vbackporch	videodev2.h	/^	__u32	il_vbackporch;	\/* Vertical back porch for bottom field of$/;"	m	struct:v4l2_bt_timings
il_vfrontporch	videodev2.h	/^	__u32	il_vfrontporch;	\/* Vertical front porch for bottom field of$/;"	m	struct:v4l2_bt_timings
il_vsync	videodev2.h	/^	__u32	il_vsync;	\/* Vertical sync length for bottom field of$/;"	m	struct:v4l2_bt_timings
in	utils.c	/^static struct in in;$/;"	v	typeref:struct:in	file:
in	utils.c	/^struct in {$/;"	s	file:
index	uvc_compat.h	/^	__u32			index;		\/* Frame format index *\/$/;"	m	struct:v4l2_frmivalenum
index	uvc_compat.h	/^	__u32			index;		\/* Frame size number *\/$/;"	m	struct:v4l2_frmsizeenum
index	uvcvideo.h	/^	__u32 index;$/;"	m	struct:uvc_menu_info
index	uvcvideo.h	/^	__u8 index;	\/* Used to match the uvc_control entry with a uvc_control_info. *\/$/;"	m	struct:uvc_control
index	uvcvideo.h	/^	__u8 index;$/;"	m	struct:uvc_control_info
index	uvcvideo.h	/^	__u8 index;$/;"	m	struct:uvc_format
index	videodev2.h	/^	__u32			index;		\/* Frame format index *\/$/;"	m	struct:v4l2_frmivalenum
index	videodev2.h	/^	__u32			index;		\/* Frame size number *\/$/;"	m	struct:v4l2_frmsizeenum
index	videodev2.h	/^	__u32			index;$/;"	m	struct:v4l2_buffer
index	videodev2.h	/^	__u32			index;$/;"	m	struct:v4l2_create_buffers
index	videodev2.h	/^	__u32			index;$/;"	m	struct:v4l2_modulator
index	videodev2.h	/^	__u32		     index;$/;"	m	struct:v4l2_standard
index	videodev2.h	/^	__u32		    index;             \/* Format number      *\/$/;"	m	struct:v4l2_fmtdesc
index	videodev2.h	/^	__u32		index;$/;"	m	struct:v4l2_querymenu
index	videodev2.h	/^	__u32	     index;		\/*  Which input *\/$/;"	m	struct:v4l2_input
index	videodev2.h	/^	__u32	     index;		\/*  Which output *\/$/;"	m	struct:v4l2_output
index	videodev2.h	/^	__u32	index;$/;"	m	struct:v4l2_audio
index	videodev2.h	/^	__u32	index;$/;"	m	struct:v4l2_audioout
index	videodev2.h	/^	__u32	index;$/;"	m	struct:v4l2_dv_enum_preset
index	videodev2.h	/^	__u32                   index;$/;"	m	struct:v4l2_tuner
info	utils.c	/^static struct jpginfo info;$/;"	v	typeref:struct:jpginfo	file:
info	uvcvideo.h	/^	struct uvc_control_info *info;$/;"	m	struct:uvc_control	typeref:struct:uvc_control::uvc_control_info
initLut	color.c	/^void initLut(void)$/;"	f
init_v4l	spcav4l.c	/^static int init_v4l(struct vdIn *vd)$/;"	f	file:
init_v4l2	v4l2uvc.c	/^static int init_v4l2(struct vdIn *vd)$/;"	f	file:
init_videoIn	spcav4l.c	/^init_videoIn(struct vdIn *vd, char *device, int width, int height,$/;"	f
init_videoIn	v4l2uvc.c	/^init_videoIn(struct vdIn *vd, char *device, int width, int height, int fps,$/;"	f
initaddr	tcputils.c	/^static void initaddr(struct sockaddr_in *servadrr, char *address, int port)$/;"	f	file:
input	uvcvideo.h	/^		struct uvc_input_header input;$/;"	m	union:uvc_streaming::__anon30	typeref:struct:uvc_streaming::__anon30::uvc_input_header
input	videodev2.h	/^	__u32			input;$/;"	m	struct:v4l2_buffer
int_ep	uvcvideo.h	/^	struct usb_host_endpoint *int_ep;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::usb_host_endpoint
int_urb	uvcvideo.h	/^	struct urb *int_urb;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::urb
interlaced	videodev2.h	/^	__u32	interlaced;	\/* Interlaced or progressive *\/$/;"	m	struct:v4l2_bt_timings
intf	uvcvideo.h	/^	struct usb_interface *intf;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::usb_interface
intf	uvcvideo.h	/^	struct usb_interface *intf;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::usb_interface
intfnum	uvcvideo.h	/^	int intfnum;$/;"	m	struct:uvc_device
intfnum	uvcvideo.h	/^	int intfnum;$/;"	m	struct:uvc_streaming
io_size	videodev2.h	/^	__u32   io_size;$/;"	m	struct:v4l2_sliced_vbi_format
irqlock	uvcvideo.h	/^	spinlock_t irqlock;$/;"	m	struct:uvc_video_queue
irqqueue	uvcvideo.h	/^	struct list_head irqqueue;$/;"	m	struct:uvc_video_queue	typeref:struct:uvc_video_queue::list_head
isSpcaChip	spcav4l.c	/^static int isSpcaChip(const char *BridgeName)$/;"	f	file:
is_huffman	utils.c	/^is_huffman(unsigned char *buf)$/;"	f
isstreaming	v4l2uvc.h	/^    int isstreaming;$/;"	m	struct:vdIn
isv4l2Control	v4l2uvc.c	/^static int isv4l2Control(struct vdIn *vd, int control,$/;"	f	file:
iterm	uvcvideo.h	/^	struct uvc_entity *iterm;$/;"	m	struct:uvc_video_device	typeref:struct:uvc_video_device::uvc_entity
itv0	videodev2.h	/^		struct v4l2_mpeg_vbi_itv0 itv0;$/;"	m	union:v4l2_mpeg_vbi_fmt_ivtv::__anon13	typeref:struct:v4l2_mpeg_vbi_fmt_ivtv::__anon13::v4l2_mpeg_vbi_itv0
jpeg_decdata	utils.c	/^struct jpeg_decdata {$/;"	s	file:
jpeg_decode	utils.c	/^int jpeg_decode(unsigned char **pic, unsigned char *buf, int *width,$/;"	f
jpeg_markers	videodev2.h	/^	__u32 jpeg_markers;     \/* Which markers should go into the JPEG$/;"	m	struct:v4l2_jpegcompression
jpginfo	utils.c	/^struct jpginfo {$/;"	s	file:
key	avilib.h	/^  off_t key;$/;"	m	struct:__anon31
kref	uvcvideo.h	/^	struct kref kref;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::kref
last_fid	uvcvideo.h	/^	__u8 last_fid;$/;"	m	struct:uvc_video_queue
last_len	avilib.h	/^  unsigned long last_len;          \/* Length of last frame written *\/$/;"	m	struct:__anon36
last_pos	avilib.h	/^  off_t last_pos;          \/* Position of last frame written *\/$/;"	m	struct:__anon36
left	utils.c	/^    int left;$/;"	m	struct:in	file:
left	videodev2.h	/^	__s32   left;$/;"	m	struct:v4l2_rect
len	avilib.h	/^	uint32_t len;$/;"	m	struct:chunk_struct
len	avilib.h	/^   off_t len;$/;"	m	struct:__anon32
len	avilib.h	/^  off_t len;$/;"	m	struct:__anon31
len	avilib.h	/^  uint32_t len;$/;"	m	struct:riff_struct
length	videodev2.h	/^	__u32			length;$/;"	m	struct:v4l2_buffer
length	videodev2.h	/^	__u32			length;$/;"	m	struct:v4l2_plane
length	videodev2.h	/^	__u32 length;$/;"	m	struct:v4l2_enc_idx_entry
line	videodev2.h	/^	__u32   line;           \/* 1-23 *\/$/;"	m	struct:v4l2_sliced_vbi_data
line	videodev2.h	/^	struct v4l2_mpeg_vbi_itv0_line line[35];$/;"	m	struct:v4l2_mpeg_vbi_itv0	typeref:struct:v4l2_mpeg_vbi_itv0::v4l2_mpeg_vbi_itv0_line
line	videodev2.h	/^	struct v4l2_mpeg_vbi_itv0_line line[36];$/;"	m	struct:v4l2_mpeg_vbi_ITV0	typeref:struct:v4l2_mpeg_vbi_ITV0::v4l2_mpeg_vbi_itv0_line
linemask	videodev2.h	/^	__le32 linemask[2]; \/* Bitmasks of VBI service lines present *\/$/;"	m	struct:v4l2_mpeg_vbi_itv0
list	uvcvideo.h	/^	struct list_head list;$/;"	m	struct:uvc_control_info	typeref:struct:uvc_control_info::list_head
list	uvcvideo.h	/^	struct list_head list;$/;"	m	struct:uvc_control_mapping	typeref:struct:uvc_control_mapping::list_head
list	uvcvideo.h	/^	struct list_head list;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::list_head
list	uvcvideo.h	/^	struct list_head list;$/;"	m	struct:uvc_entity	typeref:struct:uvc_entity::list_head
list	uvcvideo.h	/^	struct list_head list;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::list_head
llvals	utils.c	/^    unsigned int llvals[1 << DECBITS];$/;"	m	struct:dec_hufftbl	file:
load_controls	v4l2uvc.c	/^int load_controls(int vd) \/\/struct vdIn *vd)$/;"	f
loaded	uvcvideo.h	/^	     loaded : 1;$/;"	m	struct:uvc_control
long2str	avilib.c	/^static void long2str(unsigned char *dst, int n)$/;"	f	file:
lsb	videodev2.h	/^	__u8 	lsb;$/;"	m	struct:v4l2_rds_data
m	videodev2.h	/^	} m;$/;"	m	struct:v4l2_buffer	typeref:union:v4l2_buffer::__anon4
m	videodev2.h	/^	} m;$/;"	m	struct:v4l2_plane	typeref:union:v4l2_plane::__anon3
magic	videodev2.h	/^	__u8 magic[4];$/;"	m	struct:v4l2_mpeg_vbi_fmt_ivtv
main	server.c	/^int main(int argc, char *argv[])$/;"	f
mainqueue	uvcvideo.h	/^	struct list_head mainqueue;$/;"	m	struct:uvc_video_queue	typeref:struct:uvc_video_queue::list_head
mappings	uvcvideo.h	/^	struct list_head mappings;$/;"	m	struct:uvc_control_info	typeref:struct:uvc_control_info::list_head
marker	utils.c	/^    int marker;$/;"	m	struct:in	file:
match	videodev2.h	/^	struct v4l2_dbg_match match;$/;"	m	struct:v4l2_dbg_chip_ident	typeref:struct:v4l2_dbg_chip_ident::v4l2_dbg_match
match	videodev2.h	/^	struct v4l2_dbg_match match;$/;"	m	struct:v4l2_dbg_register	typeref:struct:v4l2_dbg_register::v4l2_dbg_match
max	uvc_compat.h	/^	struct v4l2_fract	max;		\/* Maximum frame interval [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
max	videodev2.h	/^	struct v4l2_fract	max;		\/* Maximum frame interval [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
max_height	uvc_compat.h	/^	__u32			max_height;	\/* Maximum frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
max_height	videodev2.h	/^	__u32			max_height;	\/* Maximum frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
max_idx	avilib.h	/^  long   max_idx;           \/* number of index entries actually allocated *\/$/;"	m	struct:__anon36
max_len	avilib.h	/^  unsigned long max_len;    \/* maximum video chunk present *\/$/;"	m	struct:__anon36
max_width	uvc_compat.h	/^	__u32			max_width;	\/* Maximum frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
max_width	videodev2.h	/^	__u32			max_width;	\/* Maximum frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
maxcode	utils.c	/^    int maxcode[17];$/;"	m	struct:dec_hufftbl	file:
maxframeinterval	videodev2.h	/^	__u64		maxframeinterval;$/;"	m	struct:v4l2_qcom_frameskip
maxheight	videodev1.h	/^	int maxheight;	\/* And height *\/$/;"	m	struct:video_capability
maximum	videodev2.h	/^	__s32		     maximum;$/;"	m	struct:v4l2_queryctrl
maximum	videodev2.h	/^	__s32 maximum;$/;"	m	struct:v4l2_event_ctrl
maxpsize	uvcvideo.h	/^	__u16 maxpsize;$/;"	m	struct:uvc_streaming
maxwidth	videodev1.h	/^	int maxwidth;	\/* Supported width *\/$/;"	m	struct:video_capability
mem	uvcvideo.h	/^	void *mem;$/;"	m	struct:uvc_video_queue
mem	v4l2uvc.h	/^    void *mem[NB_BUFFER];$/;"	m	struct:vdIn
mem_offset	videodev2.h	/^		__u32		mem_offset;$/;"	m	union:v4l2_plane::__anon3
memory	videodev2.h	/^	enum v4l2_memory        memory;$/;"	m	struct:v4l2_buffer	typeref:enum:v4l2_buffer::v4l2_memory
memory	videodev2.h	/^	enum v4l2_memory        memory;$/;"	m	struct:v4l2_create_buffers	typeref:enum:v4l2_create_buffers::v4l2_memory
memory	videodev2.h	/^	enum v4l2_memory        memory;$/;"	m	struct:v4l2_requestbuffers	typeref:enum:v4l2_requestbuffers::v4l2_memory
menu_count	uvcvideo.h	/^	__u32 menu_count;$/;"	m	struct:uvc_control_mapping
menu_info	uvcvideo.h	/^	struct uvc_menu_info *menu_info;$/;"	m	struct:uvc_control_mapping	typeref:struct:uvc_control_mapping::uvc_menu_info
message	spcaframe.h	/^	char message[4];$/;"	m	struct:client_t
min	uvc_compat.h	/^	struct v4l2_fract	min;		\/* Minimum frame interval [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
min	videodev2.h	/^	struct v4l2_fract	min;		\/* Minimum frame interval [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
min_height	uvc_compat.h	/^	__u32			min_height;	\/* Minimum frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
min_height	videodev2.h	/^	__u32			min_height;	\/* Minimum frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
min_width	uvc_compat.h	/^	__u32			min_width;	\/* Minimum frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
min_width	videodev2.h	/^	__u32			min_width;	\/* Minimum frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
minheight	videodev1.h	/^	int minheight;	\/* And height *\/$/;"	m	struct:video_capability
minimum	videodev2.h	/^	__s32		     minimum;	\/* Note signedness *\/$/;"	m	struct:v4l2_queryctrl
minimum	videodev2.h	/^	__s32 minimum;$/;"	m	struct:v4l2_event_ctrl
minutes	videodev2.h	/^	__u8	minutes;$/;"	m	struct:v4l2_timecode
minwidth	videodev1.h	/^	int minwidth;	\/* Supported width *\/$/;"	m	struct:video_capability
mmapsize	spcav4l.h	/^	int mmapsize;$/;"	m	struct:vdIn
mode	avilib.h	/^  long   mode;              \/* 0 for reading, 1 for writing *\/$/;"	m	struct:__anon36
mode	videodev1.h	/^	uint16_t	mode;$/;"	m	struct:video_audio
mode	videodev1.h	/^	uint16_t mode;			\/* PAL\/NTSC\/SECAM\/OTHER *\/$/;"	m	struct:video_tuner
mode	videodev2.h	/^	__u32	mode;$/;"	m	struct:v4l2_audio
mode	videodev2.h	/^	__u32	mode;$/;"	m	struct:v4l2_audioout
modulator	videodev2.h	/^	__u32	     modulator;         \/*  Associated modulator *\/$/;"	m	struct:v4l2_output
movi_start	avilib.h	/^  off_t movi_start;$/;"	m	struct:__anon36
mp3rate	avilib.h	/^    long   mp3rate;           \/* mp3 bitrate kbs*\/$/;"	m	struct:track_s
ms_time	utils.c	/^double ms_time(void)$/;"	f
msb	videodev2.h	/^	__u8 	msb;$/;"	m	struct:v4l2_rds_data
must_use_index	avilib.h	/^  int must_use_index;              \/* Flag if frames are duplicated *\/$/;"	m	struct:__anon36
mutex	uvcvideo.h	/^	struct mutex mutex;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::mutex
mutex	uvcvideo.h	/^	struct mutex mutex;$/;"	m	struct:uvc_video_queue	typeref:struct:uvc_video_queue::mutex
n_avg_bytes_per_sec	avilib.h	/^  uint32_t  n_avg_bytes_per_sec;$/;"	m	struct:__anon34
n_block_align	avilib.h	/^  uint16_t  n_block_align;$/;"	m	struct:__anon34
n_channels	avilib.h	/^  uint16_t  n_channels;$/;"	m	struct:__anon34
n_idx	avilib.h	/^  long   n_idx;             \/* number of index entries actually filled *\/$/;"	m	struct:__anon36
n_samples_per_sec	avilib.h	/^  uint32_t  n_samples_per_sec;$/;"	m	struct:__anon34
name	spcav4l.h	/^	const char *name;$/;"	m	struct:bridge_list
name	spcav4l.h	/^	const char *name;$/;"	m	struct:palette_list
name	uvcvideo.h	/^	__u8 name[32];$/;"	m	struct:uvc_control_mapping
name	uvcvideo.h	/^	__u8 name[32];$/;"	m	struct:uvc_menu_info
name	uvcvideo.h	/^	char name[32];$/;"	m	struct:uvc_format
name	uvcvideo.h	/^	char name[64];$/;"	m	struct:uvc_entity
name	videodev1.h	/^	char		name[16];$/;"	m	struct:video_audio
name	videodev1.h	/^	char name[32];$/;"	m	struct:video_capability
name	videodev1.h	/^	char name[32];$/;"	m	struct:video_channel
name	videodev1.h	/^	char name[32];$/;"	m	struct:video_tuner
name	videodev2.h	/^		char name[32];$/;"	m	union:v4l2_dbg_match::__anon18
name	videodev2.h	/^	__u8			name[32];$/;"	m	struct:v4l2_modulator
name	videodev2.h	/^	__u8			name[32];$/;"	m	struct:v4l2_tuner
name	videodev2.h	/^	__u8		     name[24];$/;"	m	struct:v4l2_standard
name	videodev2.h	/^	__u8		     name[32];	\/* Whatever *\/$/;"	m	struct:v4l2_queryctrl
name	videodev2.h	/^	__u8		name[32];	\/* Whatever *\/$/;"	m	struct:v4l2_querymenu
name	videodev2.h	/^	__u8	     name[32];		\/*  Label *\/$/;"	m	struct:v4l2_input
name	videodev2.h	/^	__u8	     name[32];		\/*  Label *\/$/;"	m	struct:v4l2_output
name	videodev2.h	/^	__u8	name[32]; \/* Name of the preset timing *\/$/;"	m	struct:v4l2_dv_enum_preset
name	videodev2.h	/^	__u8	name[32];$/;"	m	struct:v4l2_audio
name	videodev2.h	/^	__u8	name[32];$/;"	m	struct:v4l2_audioout
nbframe	spcaframe.h	/^	int nbframe;$/;"	m	struct:frame_t
nc	utils.c	/^    int nc;			\/* number of components *\/$/;"	m	struct:jpginfo	file:
ncontrols	uvcvideo.h	/^	unsigned int ncontrols;$/;"	m	struct:uvc_entity
next	utils.c	/^    int next;			\/* when to switch to next scan *\/$/;"	m	struct:scan	file:
next	videodev1.h	/^	struct video_clip *next;	\/* For user use\/driver use only *\/$/;"	m	struct:video_clip	typeref:struct:video_clip::video_clip
next	videodev2.h	/^	struct v4l2_clip	__user *next;$/;"	m	struct:v4l2_clip	typeref:struct:v4l2_clip::__user
nformats	uvcvideo.h	/^	unsigned int nformats;$/;"	m	struct:uvc_streaming
nframes	uvcvideo.h	/^	unsigned int nframes;$/;"	m	struct:uvc_format
nm	utils.c	/^    int nm;			\/* mcus til next marker *\/$/;"	m	struct:jpginfo	file:
norm	videodev1.h	/^	uint16_t norm;			\/* Norm set by channel *\/$/;"	m	struct:video_channel
norme	spcav4l.h	/^	int norme ; \/\/ set spca506 usb video grabber$/;"	m	struct:vdIn
ns	utils.c	/^    int ns;			\/* number of scans *\/$/;"	m	struct:jpginfo	file:
num	spcav4l.h	/^	int num;$/;"	m	struct:bridge_list
num	spcav4l.h	/^	int num;$/;"	m	struct:palette_list
num_avi_errors	avilib.c	/^static int num_avi_errors = sizeof(avi_errors)\/sizeof(char*);$/;"	v	file:
num_planes	videodev2.h	/^	__u8				num_planes;$/;"	m	struct:v4l2_pix_format_mplane
numerator	videodev2.h	/^	__u32   numerator;$/;"	m	struct:v4l2_fract
offset	uvcvideo.h	/^	__u8 offset;$/;"	m	struct:uvc_control_mapping
offset	videodev2.h	/^		__u32           offset;$/;"	m	union:v4l2_buffer::__anon4
offset	videodev2.h	/^	__u32	offset;$/;"	m	struct:v4l2_vbi_format
offset	videodev2.h	/^	__u64 offset;$/;"	m	struct:v4l2_enc_idx_entry
offsets	videodev1.h	/^	int	offsets[32];$/;"	m	struct:video_mbuf
open_clientsock	tcputils.c	/^int open_clientsock(char *address, int port)$/;"	f
open_mutex	uvcvideo.h	/^	struct mutex open_mutex;	\/* protects from open\/disconnect race *\/$/;"	m	struct:uvc_driver	typeref:struct:uvc_driver::mutex
open_sock	tcputils.c	/^int open_sock(int port)$/;"	f
oterm	uvcvideo.h	/^	struct uvc_entity *oterm;$/;"	m	struct:uvc_video_device	typeref:struct:uvc_video_device::uvc_entity
out	utils.c	/^    int out[64 * 6];$/;"	m	struct:jpeg_decdata	file:
output	uvcvideo.h	/^		struct uvc_output_header output;$/;"	m	union:uvc_streaming::__anon30	typeref:struct:uvc_streaming::__anon30::uvc_output_header
output	uvcvideo.h	/^		} output;$/;"	m	union:uvc_entity::__anon24	typeref:struct:uvc_entity::__anon24::__anon26
output	videodev2.h	/^		struct v4l2_outputparm	output;$/;"	m	union:v4l2_streamparm::__anon15	typeref:struct:v4l2_streamparm::__anon15::v4l2_outputparm
outputmode	videodev2.h	/^	__u32		   outputmode;	 \/*  Current mode *\/$/;"	m	struct:v4l2_outputparm
p	utils.c	/^    unsigned char *p;$/;"	m	struct:in	file:
pFramebuffer	spcav4l.h	/^	unsigned char *pFramebuffer;$/;"	m	struct:vdIn
palette	spcav4l.h	/^	int palette; \/\/ available palette$/;"	m	struct:vdIn
palette	videodev1.h	/^	uint16_t	palette;	\/* Palette in use *\/$/;"	m	struct:video_picture
palette_list	spcav4l.h	/^struct palette_list {$/;"	s
parm	videodev2.h	/^	} parm;$/;"	m	struct:v4l2_streamparm	typeref:union:v4l2_streamparm::__anon15
pending	videodev2.h	/^	__u32				pending;$/;"	m	struct:v4l2_event
pictName	v4l2uvc.h	/^    char *pictName;$/;"	m	struct:vdIn
pix	videodev2.h	/^		struct v4l2_pix_format		pix;     \/* V4L2_BUF_TYPE_VIDEO_CAPTURE *\/$/;"	m	union:v4l2_format::__anon14	typeref:struct:v4l2_format::__anon14::v4l2_pix_format
pix_mp	videodev2.h	/^		struct v4l2_pix_format_mplane	pix_mp;  \/* V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE *\/$/;"	m	union:v4l2_format::__anon14	typeref:struct:v4l2_format::__anon14::v4l2_pix_format_mplane
pixel_format	uvc_compat.h	/^	__u32			pixel_format;	\/* Pixel format *\/$/;"	m	struct:v4l2_frmivalenum
pixel_format	uvc_compat.h	/^	__u32			pixel_format;	\/* Pixel format *\/$/;"	m	struct:v4l2_frmsizeenum
pixel_format	videodev2.h	/^	__u32			pixel_format;	\/* Pixel format *\/$/;"	m	struct:v4l2_frmivalenum
pixel_format	videodev2.h	/^	__u32			pixel_format;	\/* Pixel format *\/$/;"	m	struct:v4l2_frmsizeenum
pixelaspect	videodev2.h	/^	struct v4l2_fract       pixelaspect;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_fract
pixelclock	videodev2.h	/^	__u64	pixelclock;	\/* Pixel clock in HZ. Ex. 74.25MHz->74250000 *\/$/;"	m	struct:v4l2_bt_timings
pixelformat	videodev2.h	/^	__u32				pixelformat;$/;"	m	struct:v4l2_pix_format_mplane
pixelformat	videodev2.h	/^	__u32			pixelformat;$/;"	m	struct:v4l2_pix_format
pixelformat	videodev2.h	/^	__u32		    pixelformat;       \/* Format fourcc      *\/$/;"	m	struct:v4l2_fmtdesc
plane_fmt	videodev2.h	/^	struct v4l2_plane_pix_format	plane_fmt[VIDEO_MAX_PLANES];$/;"	m	struct:v4l2_pix_format_mplane	typeref:struct:v4l2_pix_format_mplane::v4l2_plane_pix_format
planes	videodev2.h	/^		struct v4l2_plane *planes;$/;"	m	union:v4l2_buffer::__anon4	typeref:struct:v4l2_buffer::__anon4::v4l2_plane
polarities	videodev2.h	/^	__u32	polarities;	\/* Positive or negative polarity *\/$/;"	m	struct:v4l2_bt_timings
pos	avilib.h	/^   off_t pos;$/;"	m	struct:__anon32
pos	avilib.h	/^  off_t pos;        \/* position in file *\/$/;"	m	struct:__anon36
pos	avilib.h	/^  off_t pos;$/;"	m	struct:__anon31
preset	videodev2.h	/^	__u32	preset;$/;"	m	struct:v4l2_dv_enum_preset
preset	videodev2.h	/^	__u32	preset;$/;"	m	struct:v4l2_dv_preset
priv	videodev2.h	/^	__u32			priv;		\/* private data, depends on pixelformat *\/$/;"	m	struct:v4l2_pix_format
processing	uvcvideo.h	/^		} processing;$/;"	m	union:uvc_entity::__anon24	typeref:struct:uvc_entity::__anon24::__anon27
processing	uvcvideo.h	/^	struct uvc_entity *processing;$/;"	m	struct:uvc_video_device	typeref:struct:uvc_video_device::uvc_entity
ptframe	spcav4l.h	/^	unsigned char *ptframe[4];$/;"	m	struct:vdIn
ptframe	v4l2uvc.h	/^    unsigned char *ptframe[4];$/;"	m	struct:vdIn
pts	videodev2.h	/^			__u64 pts;$/;"	m	struct:v4l2_decoder_cmd::__anon9::__anon10
pts	videodev2.h	/^	__u64 pts;$/;"	m	struct:v4l2_enc_idx_entry
quality	spcav4l.h	/^	__u8 quality;$/;"	m	struct:video_param
quality	videodev2.h	/^	int quality;$/;"	m	struct:v4l2_jpegcompression
qualityDown	spcav4l.c	/^void qualityDown(struct vdIn *vdin)$/;"	f
qualityUp	spcav4l.c	/^void qualityUp(struct vdIn *vdin)$/;"	f
quant	utils.c	/^static unsigned char quant[4][64];$/;"	v	file:
queue	uvcvideo.h	/^	struct list_head queue;$/;"	m	struct:uvc_buffer	typeref:struct:uvc_buffer::list_head
queue	uvcvideo.h	/^	struct uvc_video_queue queue;$/;"	m	struct:uvc_video_device	typeref:struct:uvc_video_device::uvc_video_queue
quirks	uvcvideo.h	/^	__u32 quirks;$/;"	m	struct:uvc_device
r	videodev2.h	/^	struct v4l2_rect        r;$/;"	m	struct:v4l2_selection	typeref:struct:v4l2_selection::v4l2_rect
rangehigh	videodev1.h	/^	unsigned long rangelow, rangehigh;	\/* Tuner range *\/$/;"	m	struct:video_tuner
rangehigh	videodev2.h	/^	__u32			rangehigh;$/;"	m	struct:v4l2_modulator
rangehigh	videodev2.h	/^	__u32			rangehigh;$/;"	m	struct:v4l2_tuner
rangelow	videodev1.h	/^	unsigned long rangelow, rangehigh;	\/* Tuner range *\/$/;"	m	struct:video_tuner
rangelow	videodev2.h	/^	__u32			rangelow;$/;"	m	struct:v4l2_modulator
rangelow	videodev2.h	/^	__u32			rangelow;$/;"	m	struct:v4l2_tuner
raw	videodev2.h	/^		} raw;$/;"	m	union:v4l2_decoder_cmd::__anon9	typeref:struct:v4l2_decoder_cmd::__anon9::__anon12
raw	videodev2.h	/^		} raw;$/;"	m	union:v4l2_encoder_cmd::__anon7	typeref:struct:v4l2_encoder_cmd::__anon7::__anon8
rawFrameCapture	v4l2uvc.h	/^    int rawFrameCapture;$/;"	m	struct:vdIn
raw_data	videodev2.h	/^		__u8	raw_data[200];                   \/* user-defined *\/$/;"	m	union:v4l2_format::__anon14
raw_data	videodev2.h	/^		__u8	raw_data[200];  \/* user-defined *\/$/;"	m	union:v4l2_streamparm::__anon15
rb	v4l2uvc.h	/^    struct v4l2_requestbuffers rb;$/;"	m	struct:vdIn	typeref:struct:vdIn::v4l2_requestbuffers
read_sock	tcputils.c	/^int read_sock(int sockhandle, unsigned char *buf, int length)$/;"	f
readbuffers	videodev2.h	/^	__u32              readbuffers;   \/*  # of buffers for read *\/$/;"	m	struct:v4l2_captureparm
readtables	utils.c	/^static int readtables(int till, int *isDHT)$/;"	f	file:
recordstart	v4l2uvc.h	/^    int recordstart;$/;"	m	struct:vdIn
recordtime	v4l2uvc.h	/^    int recordtime;$/;"	m	struct:vdIn
red	color.h	/^	unsigned char red;$/;"	m	struct:Myrgb24
red	color.h	/^	unsigned char red;$/;"	m	struct:Myrgb32
red	color.h	/^	unsigned short red:5;$/;"	m	struct:Myrgb16
reg	videodev2.h	/^	__u64 reg;$/;"	m	struct:v4l2_dbg_register
reportip	tcputils.c	/^int reportip(char *src, char *ip, unsigned short *port)$/;"	f
reserved	uvc_compat.h	/^		void *reserved;$/;"	m	union:v4l2_ext_control::__anon19
reserved	uvc_compat.h	/^	__u32	reserved[2];			\/* Reserved space for future use *\/$/;"	m	struct:v4l2_frmivalenum
reserved	uvc_compat.h	/^	__u32   reserved[2];			\/* Reserved space for future use *\/$/;"	m	struct:v4l2_frmsizeenum
reserved	uvc_compat.h	/^	__u32 reserved[2];$/;"	m	struct:v4l2_ext_controls
reserved	videodev2.h	/^		__u32	reserved[32];$/;"	m	union:v4l2_dv_timings::__anon5
reserved	videodev2.h	/^	__u16		reserved[7];$/;"	m	struct:v4l2_plane_pix_format
reserved	videodev2.h	/^	__u32				reserved[5];$/;"	m	struct:v4l2_event_subscription
reserved	videodev2.h	/^	__u32				reserved[8];$/;"	m	struct:v4l2_event
reserved	videodev2.h	/^	__u32			reserved;$/;"	m	struct:v4l2_buffer
reserved	videodev2.h	/^	__u32			reserved[11];$/;"	m	struct:v4l2_plane
reserved	videodev2.h	/^	__u32			reserved[2];$/;"	m	struct:v4l2_requestbuffers
reserved	videodev2.h	/^	__u32			reserved[4];$/;"	m	struct:v4l2_modulator
reserved	videodev2.h	/^	__u32			reserved[4];$/;"	m	struct:v4l2_tuner
reserved	videodev2.h	/^	__u32			reserved[8];$/;"	m	struct:v4l2_create_buffers
reserved	videodev2.h	/^	__u32		      reserved[7];$/;"	m	struct:v4l2_hw_freq_seek
reserved	videodev2.h	/^	__u32		      reserved[8];$/;"	m	struct:v4l2_frequency
reserved	videodev2.h	/^	__u32		     reserved[2];$/;"	m	struct:v4l2_queryctrl
reserved	videodev2.h	/^	__u32		     reserved[4];$/;"	m	struct:v4l2_standard
reserved	videodev2.h	/^	__u32		    reserved[4];$/;"	m	struct:v4l2_fmtdesc
reserved	videodev2.h	/^	__u32		   reserved[4];$/;"	m	struct:v4l2_captureparm
reserved	videodev2.h	/^	__u32		   reserved[4];$/;"	m	struct:v4l2_outputparm
reserved	videodev2.h	/^	__u32		reserved;$/;"	m	struct:v4l2_querymenu
reserved	videodev2.h	/^	__u32	     reserved[3];$/;"	m	struct:v4l2_input
reserved	videodev2.h	/^	__u32	     reserved[3];$/;"	m	struct:v4l2_output
reserved	videodev2.h	/^	__u32	reserved[16];$/;"	m	struct:v4l2_bt_timings
reserved	videodev2.h	/^	__u32	reserved[2];			\/* Reserved space for future use *\/$/;"	m	struct:v4l2_frmivalenum
reserved	videodev2.h	/^	__u32	reserved[2];		\/* must be zero *\/$/;"	m	struct:v4l2_vbi_format
reserved	videodev2.h	/^	__u32	reserved[2];$/;"	m	struct:v4l2_audio
reserved	videodev2.h	/^	__u32	reserved[2];$/;"	m	struct:v4l2_audioout
reserved	videodev2.h	/^	__u32	reserved[3];$/;"	m	struct:v4l2_capability
reserved	videodev2.h	/^	__u32	reserved[4];$/;"	m	struct:v4l2_dv_enum_preset
reserved	videodev2.h	/^	__u32	reserved[4];$/;"	m	struct:v4l2_dv_preset
reserved	videodev2.h	/^	__u32                   reserved[9];$/;"	m	struct:v4l2_selection
reserved	videodev2.h	/^	__u32   reserved;       \/* must be 0 *\/$/;"	m	struct:v4l2_sliced_vbi_data
reserved	videodev2.h	/^	__u32   reserved[2];			\/* Reserved space for future use *\/$/;"	m	struct:v4l2_frmsizeenum
reserved	videodev2.h	/^	__u32   reserved[2];            \/* must be zero *\/$/;"	m	struct:v4l2_sliced_vbi_format
reserved	videodev2.h	/^	__u32   reserved[3];    \/* must be 0 *\/$/;"	m	struct:v4l2_sliced_vbi_cap
reserved	videodev2.h	/^	__u32 reserved[2];$/;"	m	struct:v4l2_enc_idx_entry
reserved	videodev2.h	/^	__u32 reserved[2];$/;"	m	struct:v4l2_ext_controls
reserved	videodev2.h	/^	__u32 reserved[4];$/;"	m	struct:v4l2_enc_idx
reserved	videodev2.h	/^	__u8				reserved[11];$/;"	m	struct:v4l2_pix_format_mplane
reserved2	uvc_compat.h	/^	__u32 reserved2[2];$/;"	m	struct:v4l2_ext_control
reserved2	videodev2.h	/^	__u32 reserved2[1];$/;"	m	struct:v4l2_ext_control
revision	videodev2.h	/^	__u32 revision;    \/* chip revision, chip specific *\/$/;"	m	struct:v4l2_dbg_chip_ident
rfsBytesWritten	v4l2uvc.h	/^    unsigned int rfsBytesWritten;$/;"	m	struct:vdIn
rfsFramesWritten	v4l2uvc.h	/^    unsigned int rfsFramesWritten;$/;"	m	struct:vdIn
riff	avilib.h	/^	struct riff_struct   riff;$/;"	m	struct:wave_header	typeref:struct:wave_header::riff_struct
riff_struct	avilib.h	/^struct riff_struct $/;"	s
rm	utils.c	/^    int rm;			\/* next restart marker *\/$/;"	m	struct:jpginfo	file:
rxsubchans	videodev2.h	/^	__u32			rxsubchans;$/;"	m	struct:v4l2_tuner
sample_format	videodev1.h	/^	uint32_t	sample_format;	\/* VIDEO_PALETTE_RAW only (1 byte) *\/$/;"	m	struct:vbi_format
sample_format	videodev2.h	/^	__u32	sample_format;		\/* V4L2_PIX_FMT_* *\/$/;"	m	struct:v4l2_vbi_format
samples_per_line	videodev1.h	/^	uint32_t	samples_per_line;$/;"	m	struct:vbi_format
samples_per_line	videodev2.h	/^	__u32	samples_per_line;$/;"	m	struct:v4l2_vbi_format
sampling_rate	videodev1.h	/^	uint32_t	sampling_rate;	\/* in Hz *\/$/;"	m	struct:vbi_format
sampling_rate	videodev2.h	/^	__u32	sampling_rate;		\/* in 1 Hz *\/$/;"	m	struct:v4l2_vbi_format
save_controls	v4l2uvc.c	/^int save_controls(int vd)$/;"	f
scan	utils.c	/^struct scan {$/;"	s	file:
seconds	videodev2.h	/^	__u8	seconds;$/;"	m	struct:v4l2_timecode
seek_upward	videodev2.h	/^	__u32		      seek_upward;$/;"	m	struct:v4l2_hw_freq_seek
selector	uvcvideo.h	/^		} selector;$/;"	m	union:uvc_entity::__anon24	typeref:struct:uvc_entity::__anon24::__anon28
selector	uvcvideo.h	/^	__u8 selector;$/;"	m	struct:uvc_control_info
selector	uvcvideo.h	/^	__u8 selector;$/;"	m	struct:uvc_control_mapping
seqtimes	spcaframe.h	/^	double seqtimes;$/;"	m	struct:frame_t
sequence	uvcvideo.h	/^	__u32 sequence;$/;"	m	struct:uvc_video_queue
sequence	videodev2.h	/^	__u32				sequence;$/;"	m	struct:v4l2_event
sequence	videodev2.h	/^	__u32			sequence;$/;"	m	struct:v4l2_buffer
service	server.c	/^void service(void *ir)$/;"	f
service_lines	videodev2.h	/^	__u16   service_lines[2][24];$/;"	m	struct:v4l2_sliced_vbi_cap
service_lines	videodev2.h	/^	__u16   service_lines[2][24];$/;"	m	struct:v4l2_sliced_vbi_format
service_set	videodev2.h	/^	__u16   service_set;$/;"	m	struct:v4l2_sliced_vbi_cap
service_set	videodev2.h	/^	__u16   service_set;$/;"	m	struct:v4l2_sliced_vbi_format
setinput	utils.c	/^static void setinput(in, p)$/;"	f	file:
sigchld_handler	server.c	/^void sigchld_handler(int s)$/;"	f
signal	videodev1.h	/^	uint16_t signal;			\/* Signal strength 16bit scale *\/$/;"	m	struct:video_tuner
signal	videodev2.h	/^	__s32			signal;$/;"	m	struct:v4l2_tuner
signalquit	spcav4l.h	/^	int signalquit;	$/;"	m	struct:vdIn
signalquit	v4l2uvc.h	/^    int signalquit;$/;"	m	struct:vdIn
size	spcaframe.h	/^	int size;$/;"	m	struct:frame_t
size	uvcvideo.h	/^	__u8 size;$/;"	m	struct:uvc_control_info
size	uvcvideo.h	/^	__u8 size;$/;"	m	struct:uvc_control_mapping
size	uvcvideo.h	/^	unsigned int size;$/;"	m	struct:uvc_buffer
size	videodev1.h	/^	int	size;		\/* Total memory to map *\/$/;"	m	struct:video_mbuf
size	videodev2.h	/^	__u32 size;	\/* register size in bytes *\/$/;"	m	struct:v4l2_dbg_register
size	videodev2.h	/^	__u32 size;$/;"	m	struct:v4l2_ext_control
sizeimage	videodev2.h	/^	__u32		sizeimage;$/;"	m	struct:v4l2_plane_pix_format
sizeimage	videodev2.h	/^	__u32          		sizeimage;$/;"	m	struct:v4l2_pix_format
sizenative	spcav4l.h	/^	int sizenative; \/\/ available size in jpeg$/;"	m	struct:vdIn
sizeothers	spcav4l.h	/^	int sizeothers;	\/\/ others palette $/;"	m	struct:vdIn
sleepon	spcaframe.h	/^	unsigned char sleepon;$/;"	m	struct:client_t
sliced	videodev2.h	/^		struct v4l2_sliced_vbi_format	sliced;  \/* V4L2_BUF_TYPE_SLICED_VBI_CAPTURE *\/$/;"	m	union:v4l2_format::__anon14	typeref:struct:v4l2_format::__anon14::v4l2_sliced_vbi_format
spacing	videodev2.h	/^	__u32		      spacing;$/;"	m	struct:v4l2_hw_freq_seek
spcaPrintParam	spcav4l.c	/^static void spcaPrintParam(int fd, struct video_param *videoparam)$/;"	f	file:
spcaSetAutoExpo	spcav4l.c	/^void spcaSetAutoExpo(struct vdIn *vdin)$/;"	f
spcaSetQuality	spcav4l.c	/^static void spcaSetQuality(int fd, struct video_param *videoparam,$/;"	f	file:
spcaSetTimeInterval	spcav4l.c	/^static void spcaSetTimeInterval(int fd, struct video_param *videoparam,$/;"	f	file:
speed	videodev2.h	/^			__s32 speed;$/;"	m	struct:v4l2_decoder_cmd::__anon9::__anon11
ssize_t	avilib.c	/^typedef int ssize_t;$/;"	t	file:
start	videodev1.h	/^	int32_t		start[2];	\/* starting line for each frame *\/$/;"	m	struct:vbi_format
start	videodev2.h	/^		} start;$/;"	m	union:v4l2_decoder_cmd::__anon9	typeref:struct:v4l2_decoder_cmd::__anon9::__anon11
start	videodev2.h	/^	__s32	start[2];$/;"	m	struct:v4l2_vbi_format
state	uvcvideo.h	/^	enum uvc_buffer_state state;$/;"	m	struct:uvc_buffer	typeref:enum:uvc_buffer::uvc_buffer_state
state	uvcvideo.h	/^	enum uvc_device_state state;$/;"	m	struct:uvc_device	typeref:enum:uvc_device::uvc_device_state
state	uvcvideo.h	/^	enum uvc_handle_state state;$/;"	m	struct:uvc_fh	typeref:enum:uvc_fh::uvc_handle_state
status	uvcvideo.h	/^	__u8 status[16];$/;"	m	struct:uvc_device
status	v4l2uvc.h	/^    char *status;$/;"	m	struct:vdIn
status	videodev2.h	/^	__u32	     status;$/;"	m	struct:v4l2_input
std	videodev2.h	/^	v4l2_std_id  std;$/;"	m	struct:v4l2_input
std	videodev2.h	/^	v4l2_std_id  std;$/;"	m	struct:v4l2_output
step	uvc_compat.h	/^	struct v4l2_fract	step;		\/* Frame interval step size [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
step	videodev1.h	/^	uint16_t	step;		\/* Step actual volume uses *\/$/;"	m	struct:video_audio
step	videodev2.h	/^	__s32		     step;$/;"	m	struct:v4l2_queryctrl
step	videodev2.h	/^	__s32 step;$/;"	m	struct:v4l2_event_ctrl
step	videodev2.h	/^	struct v4l2_fract	step;		\/* Frame interval step size [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
step_height	uvc_compat.h	/^	__u32			step_height;	\/* Frame height step size [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
step_height	videodev2.h	/^	__u32			step_height;	\/* Frame height step size [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
step_width	uvc_compat.h	/^	__u32			step_width;	\/* Frame width step size [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
step_width	videodev2.h	/^	__u32			step_width;	\/* Frame width step size [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
stepwise	uvc_compat.h	/^		struct v4l2_frmival_stepwise	stepwise;$/;"	m	union:v4l2_frmivalenum::__anon21	typeref:struct:v4l2_frmivalenum::__anon21::v4l2_frmival_stepwise
stepwise	uvc_compat.h	/^		struct v4l2_frmsize_stepwise	stepwise;$/;"	m	union:v4l2_frmsizeenum::__anon20	typeref:struct:v4l2_frmsizeenum::__anon20::v4l2_frmsize_stepwise
stepwise	videodev2.h	/^		struct v4l2_frmival_stepwise	stepwise;$/;"	m	union:v4l2_frmivalenum::__anon2	typeref:struct:v4l2_frmivalenum::__anon2::v4l2_frmival_stepwise
stepwise	videodev2.h	/^		struct v4l2_frmsize_stepwise	stepwise;$/;"	m	union:v4l2_frmsizeenum::__anon1	typeref:struct:v4l2_frmsizeenum::__anon1::v4l2_frmsize_stepwise
stop	videodev2.h	/^		} stop;$/;"	m	union:v4l2_decoder_cmd::__anon9	typeref:struct:v4l2_decoder_cmd::__anon9::__anon10
str2ulong	avilib.c	/^static unsigned long str2ulong(unsigned char *str)$/;"	f	file:
str2ushort	avilib.c	/^static unsigned long str2ushort(unsigned char *str)$/;"	f	file:
stream	uvcvideo.h	/^	enum uvc_stream_state stream;$/;"	m	struct:uvc_video_device	typeref:enum:uvc_video_device::uvc_stream_state
stream	uvcvideo.h	/^	struct list_head stream;$/;"	m	struct:uvc_buffer	typeref:struct:uvc_buffer::list_head
streaming	uvcvideo.h	/^	struct list_head streaming;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::list_head
streaming	uvcvideo.h	/^	struct uvc_streaming *streaming;$/;"	m	struct:uvc_video_device	typeref:struct:uvc_video_device::uvc_streaming
streaming	uvcvideo.h	/^	unsigned int streaming;$/;"	m	struct:uvc_video_queue
string	videodev2.h	/^		char *string;$/;"	m	union:v4l2_ext_control::__anon6
strncasecmp	avilib.c	32;"	d	file:
sz_name	avilib.h	/^  char     sz_name[64];$/;"	m	struct:__anon35
target	videodev2.h	/^	__u32			target;$/;"	m	struct:v4l2_selection
timeDown	spcav4l.c	/^void timeDown(struct vdIn *vdin)$/;"	f
timeUp	spcav4l.c	/^void timeUp(struct vdIn *vdin)$/;"	f
time_interval	spcav4l.h	/^	__u16 time_interval;$/;"	m	struct:video_param
timecode	videodev2.h	/^	struct v4l2_timecode	timecode;$/;"	m	struct:v4l2_buffer	typeref:struct:v4l2_buffer::v4l2_timecode
timeperframe	videodev2.h	/^	struct v4l2_fract  timeperframe;  \/*  Time per frame in .1us units *\/$/;"	m	struct:v4l2_captureparm	typeref:struct:v4l2_captureparm::v4l2_fract
timeperframe	videodev2.h	/^	struct v4l2_fract  timeperframe; \/*  Time per frame in seconds *\/$/;"	m	struct:v4l2_outputparm	typeref:struct:v4l2_outputparm::v4l2_fract
timestamp	videodev2.h	/^	struct timespec			timestamp;$/;"	m	struct:v4l2_event	typeref:struct:v4l2_event::timespec
timestamp	videodev2.h	/^	struct timeval		timestamp;$/;"	m	struct:v4l2_buffer	typeref:struct:v4l2_buffer::timeval
tmpbuffer	v4l2uvc.h	/^    unsigned char *tmpbuffer;$/;"	m	struct:vdIn
toggleAvi	v4l2uvc.h	/^    int toggleAvi;$/;"	m	struct:vdIn
top	videodev2.h	/^	__s32   top;$/;"	m	struct:v4l2_rect
tot	avilib.h	/^   off_t tot;$/;"	m	struct:__anon32
tq	utils.c	/^    int tq;			\/* quant tbl, copied from comp *\/$/;"	m	struct:scan	file:
tq	utils.c	/^    int tq;$/;"	m	struct:comp	file:
track	avilib.h	/^  track_t track[AVI_MAX_TRACKS];  \/\/ up to AVI_MAX_TRACKS audio tracks supported$/;"	m	struct:__anon36
track_s	avilib.h	/^typedef struct track_s$/;"	s
track_t	avilib.h	/^} track_t;$/;"	t	typeref:struct:track_s
treble	videodev1.h	/^	uint16_t	bass, treble;$/;"	m	struct:video_audio
tuner	videodev1.h	/^	int tuner;$/;"	m	struct:video_tuner
tuner	videodev2.h	/^	__u32		      tuner;$/;"	m	struct:v4l2_frequency
tuner	videodev2.h	/^	__u32		      tuner;$/;"	m	struct:v4l2_hw_freq_seek
tuner	videodev2.h	/^	__u32        tuner;             \/*  Associated tuner *\/$/;"	m	struct:v4l2_input
tuners	videodev1.h	/^	int tuners;$/;"	m	struct:video_channel
txsubchans	videodev2.h	/^	__u32			txsubchans;$/;"	m	struct:v4l2_modulator
type	uvc_compat.h	/^	__u32			type;		\/* Frame interval type the device supports. *\/$/;"	m	struct:v4l2_frmivalenum
type	uvc_compat.h	/^	__u32			type;		\/* Frame size type the device supports. *\/$/;"	m	struct:v4l2_frmsizeenum
type	uvcvideo.h	/^	__u16 type;$/;"	m	struct:uvc_entity
type	uvcvideo.h	/^	__u8 type;$/;"	m	struct:uvc_format
type	videodev1.h	/^	int type;$/;"	m	struct:video_capability
type	videodev1.h	/^	uint16_t type;$/;"	m	struct:video_channel
type	videodev2.h	/^	__u32				type;$/;"	m	struct:v4l2_event
type	videodev2.h	/^	__u32				type;$/;"	m	struct:v4l2_event_subscription
type	videodev2.h	/^	__u32			type;		\/* Frame interval type the device supports. *\/$/;"	m	struct:v4l2_frmivalenum
type	videodev2.h	/^	__u32			type;		\/* Frame size type the device supports. *\/$/;"	m	struct:v4l2_frmsizeenum
type	videodev2.h	/^	__u32			type;$/;"	m	struct:v4l2_selection
type	videodev2.h	/^	__u32	     type;		\/*  Type of input *\/$/;"	m	struct:v4l2_input
type	videodev2.h	/^	__u32	     type;		\/*  Type of output *\/$/;"	m	struct:v4l2_output
type	videodev2.h	/^	__u32	type;$/;"	m	struct:v4l2_timecode
type	videodev2.h	/^	__u32 type; \/* Match type *\/$/;"	m	struct:v4l2_dbg_match
type	videodev2.h	/^	__u32 type;$/;"	m	struct:v4l2_dv_timings
type	videodev2.h	/^	__u32 type;$/;"	m	struct:v4l2_event_ctrl
type	videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_buffer	typeref:enum:v4l2_buffer::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_crop	typeref:enum:v4l2_crop::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_cropcap	typeref:enum:v4l2_cropcap::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_requestbuffers	typeref:enum:v4l2_requestbuffers::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type  type;              \/* buffer type        *\/$/;"	m	struct:v4l2_fmtdesc	typeref:enum:v4l2_fmtdesc::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type type;$/;"	m	struct:v4l2_format	typeref:enum:v4l2_format::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type type;$/;"	m	struct:v4l2_sliced_vbi_cap	typeref:enum:v4l2_sliced_vbi_cap::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type type;$/;"	m	struct:v4l2_streamparm	typeref:enum:v4l2_streamparm::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_ctrl_type  type;$/;"	m	struct:v4l2_queryctrl	typeref:enum:v4l2_queryctrl::v4l2_ctrl_type
type	videodev2.h	/^	enum v4l2_tuner_type    type;$/;"	m	struct:v4l2_tuner	typeref:enum:v4l2_tuner::v4l2_tuner_type
type	videodev2.h	/^	enum v4l2_tuner_type  type;$/;"	m	struct:v4l2_frequency	typeref:enum:v4l2_frequency::v4l2_tuner_type
type	videodev2.h	/^	enum v4l2_tuner_type  type;$/;"	m	struct:v4l2_hw_freq_seek	typeref:enum:v4l2_hw_freq_seek::v4l2_tuner_type
u	color.h	/^	unsigned char u;$/;"	m	struct:MyYUV422
u	color.h	/^	unsigned char u;$/;"	m	struct:MyYUV444
u	videodev2.h	/^	} u;$/;"	m	struct:v4l2_event	typeref:union:v4l2_event::__anon17
udev	uvcvideo.h	/^	struct usb_device *udev;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::usb_device
uint16_t	avilib.h	42;"	d
uint32_t	avilib.h	40;"	d
uint64_t	avilib.h	43;"	d
uint8_t	avilib.h	41;"	d
upbright	spcav4l.c	/^unsigned short upbright(struct vdIn *vdin)$/;"	f
upcontrast	spcav4l.c	/^unsigned short upcontrast(struct vdIn *vdin)$/;"	f
updobright	spcaframe.h	/^	unsigned char updobright;$/;"	m	struct:client_t
updocolors	spcaframe.h	/^	unsigned char updocolors;$/;"	m	struct:client_t
updocontrast	spcaframe.h	/^	unsigned char updocontrast;$/;"	m	struct:client_t
updoexposure	spcaframe.h	/^	unsigned char updoexposure;$/;"	m	struct:client_t
updosize	spcaframe.h	/^	unsigned char updosize;$/;"	m	struct:client_t
urb	uvcvideo.h	/^	struct urb *urb[UVC_URBS];$/;"	m	struct:uvc_video_device	typeref:struct:uvc_video_device::urb
urb_buffer	uvcvideo.h	/^	char *urb_buffer[UVC_URBS];$/;"	m	struct:uvc_video_device
userbits	videodev2.h	/^	__u8	userbits[4];$/;"	m	struct:v4l2_timecode
userptr	videodev2.h	/^		unsigned long	userptr;$/;"	m	union:v4l2_plane::__anon3
userptr	videodev2.h	/^		unsigned long   userptr;$/;"	m	union:v4l2_buffer::__anon4
uvcGrab	v4l2uvc.c	/^int uvcGrab(struct vdIn *vd)$/;"	f
uvc_buffer	uvcvideo.h	/^struct uvc_buffer {$/;"	s
uvc_buffer_state	uvcvideo.h	/^enum uvc_buffer_state {$/;"	g
uvc_control	uvcvideo.h	/^struct uvc_control {$/;"	s
uvc_control_data_type	uvcvideo.h	/^enum uvc_control_data_type {$/;"	g
uvc_control_info	uvcvideo.h	/^struct uvc_control_info {$/;"	s
uvc_control_mapping	uvcvideo.h	/^struct uvc_control_mapping {$/;"	s
uvc_ctrl_commit	uvcvideo.h	/^static inline int uvc_ctrl_commit(struct uvc_video_device *video)$/;"	f
uvc_ctrl_rollback	uvcvideo.h	/^static inline int uvc_ctrl_rollback(struct uvc_video_device *video)$/;"	f
uvc_device	uvcvideo.h	/^struct uvc_device {$/;"	s
uvc_device_state	uvcvideo.h	/^enum uvc_device_state {$/;"	g
uvc_driver	uvcvideo.h	/^struct uvc_driver {$/;"	s
uvc_entity	uvcvideo.h	/^struct uvc_entity {$/;"	s
uvc_fh	uvcvideo.h	/^struct uvc_fh {$/;"	s
uvc_format	uvcvideo.h	/^struct uvc_format {$/;"	s
uvc_format_desc	uvcvideo.h	/^struct uvc_format_desc {$/;"	s
uvc_frame	uvcvideo.h	/^struct uvc_frame {$/;"	s
uvc_handle_state	uvcvideo.h	/^enum uvc_handle_state {$/;"	g
uvc_input_header	uvcvideo.h	/^struct uvc_input_header {$/;"	s
uvc_menu_info	uvcvideo.h	/^struct uvc_menu_info {$/;"	s
uvc_output_header	uvcvideo.h	/^struct uvc_output_header {$/;"	s
uvc_printk	uvcvideo.h	587;"	d
uvc_stream_state	uvcvideo.h	/^enum uvc_stream_state {$/;"	g
uvc_streaming	uvcvideo.h	/^struct uvc_streaming {$/;"	s
uvc_streaming_control	uvcvideo.h	/^struct uvc_streaming_control {$/;"	s
uvc_trace	uvcvideo.h	581;"	d
uvc_version	uvcvideo.h	/^	__u16 uvc_version;$/;"	m	struct:uvc_device
uvc_video_device	uvcvideo.h	/^struct uvc_video_device {$/;"	s
uvc_video_queue	uvcvideo.h	/^struct uvc_video_queue {$/;"	s
v	color.h	/^	unsigned char v;$/;"	m	struct:MyYUV422
v	color.h	/^	unsigned char v;$/;"	m	struct:MyYUV444
v3l2_mpeg_qcom_perf_level	videodev2.h	/^enum v3l2_mpeg_qcom_perf_level {$/;"	g
v4L2UpDownPan	v4l2uvc.c	/^int v4L2UpDownPan(struct vdIn *vd, short inc)$/;"	f
v4L2UpDownPanTilt	v4l2uvc.c	/^int v4L2UpDownPanTilt(struct vdIn *vd, short inc_p, short inc_t) {$/;"	f
v4L2UpDownTilt	v4l2uvc.c	/^int v4L2UpDownTilt(struct vdIn *vd, short inc)$/;"	f
v4l2DownControl	v4l2uvc.c	/^int v4l2DownControl(struct vdIn *vd, int control)$/;"	f
v4l2GetControl	v4l2uvc.c	/^int v4l2GetControl(struct vdIn *vd, int control)$/;"	f
v4l2ResetControl	v4l2uvc.c	/^int v4l2ResetControl(struct vdIn *vd, int control)$/;"	f
v4l2ResetPanTilt	v4l2uvc.c	/^int v4l2ResetPanTilt(struct vdIn *vd,int pantilt)$/;"	f
v4l2SetControl	v4l2uvc.c	/^int v4l2SetControl(struct vdIn *vd, int control, int value)$/;"	f
v4l2SetLightFrequencyFilter	v4l2uvc.c	/^int v4l2SetLightFrequencyFilter(struct vdIn *vd, int flt) $/;"	f
v4l2ToggleControl	v4l2uvc.c	/^int v4l2ToggleControl(struct vdIn *vd, int control)$/;"	f
v4l2UpControl	v4l2uvc.c	/^int v4l2UpControl(struct vdIn *vd, int control)$/;"	f
v4l2_audio	videodev2.h	/^struct v4l2_audio {$/;"	s
v4l2_audioout	videodev2.h	/^struct v4l2_audioout {$/;"	s
v4l2_bt_timings	videodev2.h	/^struct v4l2_bt_timings {$/;"	s
v4l2_buf_type	videodev2.h	/^enum v4l2_buf_type {$/;"	g
v4l2_buffer	videodev2.h	/^struct v4l2_buffer {$/;"	s
v4l2_capability	videodev2.h	/^struct v4l2_capability {$/;"	s
v4l2_captureparm	videodev2.h	/^struct v4l2_captureparm {$/;"	s
v4l2_clip	videodev2.h	/^struct v4l2_clip {$/;"	s
v4l2_colorfx	videodev2.h	/^enum v4l2_colorfx {$/;"	g
v4l2_colorspace	videodev2.h	/^enum v4l2_colorspace {$/;"	g
v4l2_control	videodev2.h	/^struct v4l2_control {$/;"	s
v4l2_create_buffers	videodev2.h	/^struct v4l2_create_buffers {$/;"	s
v4l2_crop	videodev2.h	/^struct v4l2_crop {$/;"	s
v4l2_cropcap	videodev2.h	/^struct v4l2_cropcap {$/;"	s
v4l2_ctrl_type	videodev2.h	/^enum v4l2_ctrl_type {$/;"	g
v4l2_dbg_chip_ident	videodev2.h	/^struct v4l2_dbg_chip_ident {$/;"	s
v4l2_dbg_match	videodev2.h	/^struct v4l2_dbg_match {$/;"	s
v4l2_dbg_register	videodev2.h	/^struct v4l2_dbg_register {$/;"	s
v4l2_decoder_cmd	videodev2.h	/^struct v4l2_decoder_cmd {$/;"	s
v4l2_dv_enum_preset	videodev2.h	/^struct v4l2_dv_enum_preset {$/;"	s
v4l2_dv_preset	videodev2.h	/^struct v4l2_dv_preset {$/;"	s
v4l2_dv_timings	videodev2.h	/^struct v4l2_dv_timings {$/;"	s
v4l2_enc_idx	videodev2.h	/^struct v4l2_enc_idx {$/;"	s
v4l2_enc_idx_entry	videodev2.h	/^struct v4l2_enc_idx_entry {$/;"	s
v4l2_encoder_cmd	videodev2.h	/^struct v4l2_encoder_cmd {$/;"	s
v4l2_event	videodev2.h	/^struct v4l2_event {$/;"	s
v4l2_event_ctrl	videodev2.h	/^struct v4l2_event_ctrl {$/;"	s
v4l2_event_frame_sync	videodev2.h	/^struct v4l2_event_frame_sync {$/;"	s
v4l2_event_subscription	videodev2.h	/^struct v4l2_event_subscription {$/;"	s
v4l2_event_vsync	videodev2.h	/^struct v4l2_event_vsync {$/;"	s
v4l2_exposure_auto_type	videodev2.h	/^enum  v4l2_exposure_auto_type {$/;"	g
v4l2_ext_control	uvc_compat.h	/^struct v4l2_ext_control$/;"	s
v4l2_ext_control	videodev2.h	/^struct v4l2_ext_control {$/;"	s
v4l2_ext_controls	uvc_compat.h	/^struct v4l2_ext_controls$/;"	s
v4l2_ext_controls	videodev2.h	/^struct v4l2_ext_controls {$/;"	s
v4l2_field	videodev2.h	/^enum v4l2_field {$/;"	g
v4l2_flash_led_mode	videodev2.h	/^enum v4l2_flash_led_mode {$/;"	g
v4l2_flash_strobe_source	videodev2.h	/^enum v4l2_flash_strobe_source {$/;"	g
v4l2_fmtdesc	videodev2.h	/^struct v4l2_fmtdesc {$/;"	s
v4l2_format	videodev2.h	/^struct v4l2_format {$/;"	s
v4l2_fourcc	videodev2.h	101;"	d
v4l2_fract	videodev2.h	/^struct v4l2_fract {$/;"	s
v4l2_framebuffer	videodev2.h	/^struct v4l2_framebuffer {$/;"	s
v4l2_frequency	videodev2.h	/^struct v4l2_frequency {$/;"	s
v4l2_frmival_stepwise	uvc_compat.h	/^struct v4l2_frmival_stepwise$/;"	s
v4l2_frmival_stepwise	videodev2.h	/^struct v4l2_frmival_stepwise {$/;"	s
v4l2_frmivalenum	uvc_compat.h	/^struct v4l2_frmivalenum$/;"	s
v4l2_frmivalenum	videodev2.h	/^struct v4l2_frmivalenum {$/;"	s
v4l2_frmivaltypes	uvc_compat.h	/^enum v4l2_frmivaltypes$/;"	g
v4l2_frmivaltypes	videodev2.h	/^enum v4l2_frmivaltypes {$/;"	g
v4l2_frmsize_discrete	uvc_compat.h	/^struct v4l2_frmsize_discrete$/;"	s
v4l2_frmsize_discrete	videodev2.h	/^struct v4l2_frmsize_discrete {$/;"	s
v4l2_frmsize_stepwise	uvc_compat.h	/^struct v4l2_frmsize_stepwise$/;"	s
v4l2_frmsize_stepwise	videodev2.h	/^struct v4l2_frmsize_stepwise {$/;"	s
v4l2_frmsizeenum	uvc_compat.h	/^struct v4l2_frmsizeenum$/;"	s
v4l2_frmsizeenum	videodev2.h	/^struct v4l2_frmsizeenum {$/;"	s
v4l2_frmsizetypes	uvc_compat.h	/^enum v4l2_frmsizetypes$/;"	g
v4l2_frmsizetypes	videodev2.h	/^enum v4l2_frmsizetypes {$/;"	g
v4l2_hw_freq_seek	videodev2.h	/^struct v4l2_hw_freq_seek {$/;"	s
v4l2_input	videodev2.h	/^struct v4l2_input {$/;"	s
v4l2_jpeg_chroma_subsampling	videodev2.h	/^enum v4l2_jpeg_chroma_subsampling {$/;"	g
v4l2_jpegcompression	videodev2.h	/^struct v4l2_jpegcompression {$/;"	s
v4l2_memory	videodev2.h	/^enum v4l2_memory {$/;"	g
v4l2_modulator	videodev2.h	/^struct v4l2_modulator {$/;"	s
v4l2_mpeg_audio_ac3_bitrate	videodev2.h	/^enum v4l2_mpeg_audio_ac3_bitrate {$/;"	g
v4l2_mpeg_audio_crc	videodev2.h	/^enum v4l2_mpeg_audio_crc {$/;"	g
v4l2_mpeg_audio_dec_playback	videodev2.h	/^enum v4l2_mpeg_audio_dec_playback {$/;"	g
v4l2_mpeg_audio_emphasis	videodev2.h	/^enum v4l2_mpeg_audio_emphasis {$/;"	g
v4l2_mpeg_audio_encoding	videodev2.h	/^enum v4l2_mpeg_audio_encoding {$/;"	g
v4l2_mpeg_audio_l1_bitrate	videodev2.h	/^enum v4l2_mpeg_audio_l1_bitrate {$/;"	g
v4l2_mpeg_audio_l2_bitrate	videodev2.h	/^enum v4l2_mpeg_audio_l2_bitrate {$/;"	g
v4l2_mpeg_audio_l3_bitrate	videodev2.h	/^enum v4l2_mpeg_audio_l3_bitrate {$/;"	g
v4l2_mpeg_audio_mode	videodev2.h	/^enum v4l2_mpeg_audio_mode {$/;"	g
v4l2_mpeg_audio_mode_extension	videodev2.h	/^enum v4l2_mpeg_audio_mode_extension {$/;"	g
v4l2_mpeg_audio_sampling_freq	videodev2.h	/^enum v4l2_mpeg_audio_sampling_freq {$/;"	g
v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type	videodev2.h	/^enum v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type {$/;"	g
v4l2_mpeg_cx2341x_video_luma_spatial_filter_type	videodev2.h	/^enum v4l2_mpeg_cx2341x_video_luma_spatial_filter_type {$/;"	g
v4l2_mpeg_cx2341x_video_median_filter_type	videodev2.h	/^enum v4l2_mpeg_cx2341x_video_median_filter_type {$/;"	g
v4l2_mpeg_cx2341x_video_spatial_filter_mode	videodev2.h	/^enum v4l2_mpeg_cx2341x_video_spatial_filter_mode {$/;"	g
v4l2_mpeg_cx2341x_video_temporal_filter_mode	videodev2.h	/^enum v4l2_mpeg_cx2341x_video_temporal_filter_mode {$/;"	g
v4l2_mpeg_mfc51_video_force_frame_type	videodev2.h	/^enum v4l2_mpeg_mfc51_video_force_frame_type {$/;"	g
v4l2_mpeg_mfc51_video_frame_skip_mode	videodev2.h	/^enum v4l2_mpeg_mfc51_video_frame_skip_mode {$/;"	g
v4l2_mpeg_stream_type	videodev2.h	/^enum v4l2_mpeg_stream_type {$/;"	g
v4l2_mpeg_stream_vbi_fmt	videodev2.h	/^enum v4l2_mpeg_stream_vbi_fmt {$/;"	g
v4l2_mpeg_vbi_ITV0	videodev2.h	/^struct v4l2_mpeg_vbi_ITV0 {$/;"	s
v4l2_mpeg_vbi_fmt_ivtv	videodev2.h	/^struct v4l2_mpeg_vbi_fmt_ivtv {$/;"	s
v4l2_mpeg_vbi_itv0	videodev2.h	/^struct v4l2_mpeg_vbi_itv0 {$/;"	s
v4l2_mpeg_vbi_itv0_line	videodev2.h	/^struct v4l2_mpeg_vbi_itv0_line {$/;"	s
v4l2_mpeg_vidc_h264_cabac_model	videodev2.h	/^enum v4l2_mpeg_vidc_h264_cabac_model {$/;"	g
v4l2_mpeg_vidc_video_divx_format_type	videodev2.h	/^enum v4l2_mpeg_vidc_video_divx_format_type {$/;"	g
v4l2_mpeg_vidc_video_intra_refresh_mode	videodev2.h	/^enum v4l2_mpeg_vidc_video_intra_refresh_mode {$/;"	g
v4l2_mpeg_vidc_video_output_order	videodev2.h	/^enum v4l2_mpeg_vidc_video_output_order {$/;"	g
v4l2_mpeg_vidc_video_rate_control	videodev2.h	/^enum v4l2_mpeg_vidc_video_rate_control {$/;"	g
v4l2_mpeg_vidc_video_rotation	videodev2.h	/^enum v4l2_mpeg_vidc_video_rotation {$/;"	g
v4l2_mpeg_vidc_video_stream_format	videodev2.h	/^enum v4l2_mpeg_vidc_video_stream_format {$/;"	g
v4l2_mpeg_video_aspect	videodev2.h	/^enum v4l2_mpeg_video_aspect {$/;"	g
v4l2_mpeg_video_bitrate_mode	videodev2.h	/^enum v4l2_mpeg_video_bitrate_mode {$/;"	g
v4l2_mpeg_video_encoding	videodev2.h	/^enum v4l2_mpeg_video_encoding {$/;"	g
v4l2_mpeg_video_h264_entropy_mode	videodev2.h	/^enum v4l2_mpeg_video_h264_entropy_mode {$/;"	g
v4l2_mpeg_video_h264_level	videodev2.h	/^enum v4l2_mpeg_video_h264_level {$/;"	g
v4l2_mpeg_video_h264_loop_filter_mode	videodev2.h	/^enum v4l2_mpeg_video_h264_loop_filter_mode {$/;"	g
v4l2_mpeg_video_h264_profile	videodev2.h	/^enum v4l2_mpeg_video_h264_profile {$/;"	g
v4l2_mpeg_video_h264_vui_sar_idc	videodev2.h	/^enum v4l2_mpeg_video_h264_vui_sar_idc {$/;"	g
v4l2_mpeg_video_header_mode	videodev2.h	/^enum v4l2_mpeg_video_header_mode {$/;"	g
v4l2_mpeg_video_mpeg4_level	videodev2.h	/^enum v4l2_mpeg_video_mpeg4_level {$/;"	g
v4l2_mpeg_video_mpeg4_profile	videodev2.h	/^enum v4l2_mpeg_video_mpeg4_profile {$/;"	g
v4l2_mpeg_video_multi_slice_mode	videodev2.h	/^enum v4l2_mpeg_video_multi_slice_mode {$/;"	g
v4l2_output	videodev2.h	/^struct v4l2_output {$/;"	s
v4l2_outputparm	videodev2.h	/^struct v4l2_outputparm {$/;"	s
v4l2_pix_format	videodev2.h	/^struct v4l2_pix_format {$/;"	s
v4l2_pix_format_mplane	videodev2.h	/^struct v4l2_pix_format_mplane {$/;"	s
v4l2_plane	videodev2.h	/^struct v4l2_plane {$/;"	s
v4l2_plane_pix_format	videodev2.h	/^struct v4l2_plane_pix_format {$/;"	s
v4l2_power_line_frequency	videodev2.h	/^enum v4l2_power_line_frequency {$/;"	g
v4l2_preemphasis	videodev2.h	/^enum v4l2_preemphasis {$/;"	g
v4l2_priority	videodev2.h	/^enum v4l2_priority {$/;"	g
v4l2_qcom_frameskip	videodev2.h	/^struct v4l2_qcom_frameskip {$/;"	s
v4l2_queryctrl	videodev2.h	/^struct v4l2_queryctrl {$/;"	s
v4l2_querymenu	videodev2.h	/^struct v4l2_querymenu {$/;"	s
v4l2_rds_data	videodev2.h	/^struct v4l2_rds_data {$/;"	s
v4l2_rect	videodev2.h	/^struct v4l2_rect {$/;"	s
v4l2_requestbuffers	videodev2.h	/^struct v4l2_requestbuffers {$/;"	s
v4l2_selection	videodev2.h	/^struct v4l2_selection {$/;"	s
v4l2_sliced_vbi_cap	videodev2.h	/^struct v4l2_sliced_vbi_cap {$/;"	s
v4l2_sliced_vbi_data	videodev2.h	/^struct v4l2_sliced_vbi_data {$/;"	s
v4l2_sliced_vbi_format	videodev2.h	/^struct v4l2_sliced_vbi_format {$/;"	s
v4l2_standard	videodev2.h	/^struct v4l2_standard {$/;"	s
v4l2_std_id	videodev2.h	/^typedef __u64 v4l2_std_id;$/;"	t
v4l2_streamparm	videodev2.h	/^struct v4l2_streamparm {$/;"	s
v4l2_timecode	videodev2.h	/^struct v4l2_timecode {$/;"	s
v4l2_tuner	videodev2.h	/^struct v4l2_tuner {$/;"	s
v4l2_tuner_type	videodev2.h	/^enum v4l2_tuner_type {$/;"	g
v4l2_type	uvcvideo.h	/^	enum v4l2_ctrl_type v4l2_type;$/;"	m	struct:uvc_control_mapping	typeref:enum:uvc_control_mapping::v4l2_ctrl_type
v4l2_vbi_format	videodev2.h	/^struct v4l2_vbi_format {$/;"	s
v4l2_window	videodev2.h	/^struct v4l2_window {$/;"	s
v4lGrab	spcav4l.c	/^int v4lGrab(struct vdIn *vd)$/;"	f
v_codecf_off	avilib.h	/^  off_t v_codecf_off;       \/* absolut offset of video codec (strf) info *\/ $/;"	m	struct:__anon36
v_codech_off	avilib.h	/^  off_t v_codech_off;       \/* absolut offset of video codec (strh) info *\/ $/;"	m	struct:__anon36
val	videodev2.h	/^	__u64 val;$/;"	m	struct:v4l2_dbg_register
valptr	utils.c	/^    int valptr[16];$/;"	m	struct:dec_hufftbl	file:
vals	utils.c	/^    unsigned char vals[256];$/;"	m	struct:dec_hufftbl	file:
value	uvc_compat.h	/^		__s32 value;$/;"	m	union:v4l2_ext_control::__anon19
value	videodev2.h	/^		__s32 value;$/;"	m	union:v4l2_event_ctrl::__anon16
value	videodev2.h	/^		__s32 value;$/;"	m	union:v4l2_ext_control::__anon6
value	videodev2.h	/^	__s32		     value;$/;"	m	struct:v4l2_control
value64	uvc_compat.h	/^		__s64 value64;$/;"	m	union:v4l2_ext_control::__anon19
value64	videodev2.h	/^		__s64 value64;$/;"	m	union:v4l2_event_ctrl::__anon16
value64	videodev2.h	/^		__s64 value64;$/;"	m	union:v4l2_ext_control::__anon6
vbackporch	videodev2.h	/^	__u32	vbackporch;	\/* Vertical back porch in lines *\/$/;"	m	struct:v4l2_bt_timings
vbi	videodev2.h	/^		struct v4l2_vbi_format		vbi;     \/* V4L2_BUF_TYPE_VBI_CAPTURE *\/$/;"	m	union:v4l2_format::__anon14	typeref:struct:v4l2_format::__anon14::v4l2_vbi_format
vbi_format	videodev1.h	/^struct vbi_format {$/;"	s
vdIn	spcav4l.h	/^struct vdIn {$/;"	s
vdIn	v4l2uvc.h	/^struct vdIn {$/;"	s
vdev	uvcvideo.h	/^	struct video_device *vdev;$/;"	m	struct:uvc_video_device	typeref:struct:uvc_video_device::video_device
version	version.h	/^ char version[] = "servfox version: 1.1.3 date: 11:12:2005 (C) mxhaard@magic.fr\\0";$/;"	v
version	videodev2.h	/^	__u32   version;$/;"	m	struct:v4l2_capability
vfrontporch	videodev2.h	/^	__u32	vfrontporch;	\/* Vertical front porch in pixels *\/$/;"	m	struct:v4l2_bt_timings
video	uvcvideo.h	/^	struct uvc_video_device video;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::uvc_video_device
videoIn	server.c	/^struct vdIn videoIn;$/;"	v	typeref:struct:vdIn
video_audio	videodev1.h	/^struct video_audio$/;"	s
video_buffer	videodev1.h	/^struct video_buffer$/;"	s
video_capability	videodev1.h	/^struct video_capability$/;"	s
video_channel	videodev1.h	/^struct video_channel$/;"	s
video_clip	videodev1.h	/^struct video_clip$/;"	s
video_disable	v4l2uvc.c	/^static int video_disable(struct vdIn *vd)$/;"	f	file:
video_enable	v4l2uvc.c	/^static int video_enable(struct vdIn *vd)$/;"	f	file:
video_frames	avilib.h	/^  long   video_frames;      \/* Number of video frames *\/$/;"	m	struct:__anon36
video_index	avilib.h	/^  video_index_entry *video_index;$/;"	m	struct:__anon36
video_index_entry	avilib.h	/^} video_index_entry;$/;"	t	typeref:struct:__anon31
video_mbuf	videodev1.h	/^struct video_mbuf$/;"	s
video_mmap	videodev1.h	/^struct video_mmap$/;"	s
video_param	spcav4l.h	/^struct video_param {$/;"	s
video_picture	videodev1.h	/^struct video_picture$/;"	s
video_pos	avilib.h	/^  long   video_pos;         \/* Number of next frame to be read$/;"	m	struct:__anon36
video_strn	avilib.h	/^  long   video_strn;        \/* Video stream number *\/$/;"	m	struct:__anon36
video_tag	avilib.h	/^  char   video_tag[4];      \/* Tag of video data *\/$/;"	m	struct:__anon36
video_tuner	videodev1.h	/^struct video_tuner$/;"	s
video_window	videodev1.h	/^struct video_window$/;"	s
videocap	spcav4l.h	/^	struct video_capability videocap;$/;"	m	struct:vdIn	typeref:struct:vdIn::video_capability
videochan	spcav4l.h	/^	struct video_channel videochan;$/;"	m	struct:vdIn	typeref:struct:vdIn::video_channel
videodevice	spcav4l.h	/^	char *videodevice ;$/;"	m	struct:vdIn
videodevice	v4l2uvc.h	/^    char *videodevice;$/;"	m	struct:vdIn
videombuf	spcav4l.h	/^	struct video_mbuf videombuf;$/;"	m	struct:vdIn	typeref:struct:vdIn::video_mbuf
videoparam	spcav4l.h	/^	struct video_param videoparam;		$/;"	m	struct:vdIn	typeref:struct:vdIn::video_param
videopict	spcav4l.h	/^	struct video_picture videopict;$/;"	m	struct:vdIn	typeref:struct:vdIn::video_picture
videowin	spcav4l.h	/^	struct video_window videowin;$/;"	m	struct:vdIn	typeref:struct:vdIn::video_window
vma_use_count	uvcvideo.h	/^	unsigned long vma_use_count;$/;"	m	struct:uvc_buffer
vmmap	spcav4l.h	/^	struct video_mmap vmmap;$/;"	m	struct:vdIn	typeref:struct:vdIn::video_mmap
volume	videodev1.h	/^	uint16_t	volume;		\/* If settable *\/$/;"	m	struct:video_audio
vsync	videodev2.h	/^		struct v4l2_event_vsync		vsync;$/;"	m	union:v4l2_event::__anon17	typeref:struct:v4l2_event::__anon17::v4l2_event_vsync
vsync	videodev2.h	/^	__u32	vsync;		\/* Vertical Sync length in lines *\/$/;"	m	struct:v4l2_bt_timings
w	spcaframe.h	/^	int w;$/;"	m	struct:frame_t
w	videodev2.h	/^	struct v4l2_rect        w;$/;"	m	struct:v4l2_window	typeref:struct:v4l2_window::v4l2_rect
wBitsPerSample	avilib.h	/^	uint16_t wBitsPerSample;  \/* Only for PCM *\/$/;"	m	struct:common_struct
wBlockAlign	avilib.h	/^	uint16_t wBlockAlign;$/;"	m	struct:common_struct
wChannels	avilib.h	/^	uint16_t wChannels;$/;"	m	struct:common_struct
wCompQuality	uvcvideo.h	/^	__u16 wCompQuality;$/;"	m	struct:uvc_streaming_control
wCompWindowSize	uvcvideo.h	/^	__u16 wCompWindowSize;$/;"	m	struct:uvc_streaming_control
wDelay	uvcvideo.h	/^	__u16 wDelay;$/;"	m	struct:uvc_streaming_control
wFormatTag	avilib.h	/^	uint16_t wFormatTag;$/;"	m	struct:common_struct
wHeight	uvcvideo.h	/^	__u16 wHeight;$/;"	m	struct:uvc_frame
wKeyFrameRate	uvcvideo.h	/^	__u16 wKeyFrameRate;$/;"	m	struct:uvc_streaming_control
wMaxMultiplier	uvcvideo.h	/^			__u16 wMaxMultiplier;$/;"	m	struct:uvc_entity::__anon24::__anon27
wObjectiveFocalLengthMax	uvcvideo.h	/^			__u16 wObjectiveFocalLengthMax;$/;"	m	struct:uvc_entity::__anon24::__anon25
wObjectiveFocalLengthMin	uvcvideo.h	/^			__u16 wObjectiveFocalLengthMin;$/;"	m	struct:uvc_entity::__anon24::__anon25
wOcularFocalLength	uvcvideo.h	/^			__u16 wOcularFocalLength;$/;"	m	struct:uvc_entity::__anon24::__anon25
wPFrameRate	uvcvideo.h	/^	__u16 wPFrameRate;$/;"	m	struct:uvc_streaming_control
wWidth	uvcvideo.h	/^	__u16 wWidth;$/;"	m	struct:uvc_frame
w_bits_per_sample	avilib.h	/^  uint16_t  w_bits_per_sample;$/;"	m	struct:__anon34
w_format_tag	avilib.h	/^  uint16_t  w_format_tag;$/;"	m	struct:__anon34
w_language	avilib.h	/^  uint16_t w_language;$/;"	m	struct:__anon35
w_priority	avilib.h	/^  uint16_t w_priority;$/;"	m	struct:__anon35
wait	uvcvideo.h	/^	wait_queue_head_t wait;$/;"	m	struct:uvc_buffer
wakeup	spcaframe.h	/^	unsigned char wakeup;$/;"	m	struct:frame_t
wave_format_ex	avilib.h	/^  WAVEFORMATEX_avilib *wave_format_ex[AVI_MAX_TRACKS];$/;"	m	struct:__anon36
wave_header	avilib.h	/^struct wave_header $/;"	s
wave_id	avilib.h	/^  unsigned char wave_id[4]; \/* WAVE *\/$/;"	m	struct:riff_struct
whiteness	videodev1.h	/^	uint16_t	whiteness;	\/* Black and white only *\/$/;"	m	struct:video_picture
width	avilib.h	/^  long   width;             \/* Width  of a video frame *\/$/;"	m	struct:__anon36
width	uvc_compat.h	/^	__u32			width;		\/* Frame width *\/$/;"	m	struct:v4l2_frmivalenum
width	uvc_compat.h	/^	__u32			width;		\/* Frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_discrete
width	v4l2uvc.h	/^    int width;$/;"	m	struct:vdIn
width	videodev1.h	/^	int		height,width;$/;"	m	struct:video_mmap
width	videodev1.h	/^	int	height,width;$/;"	m	struct:video_buffer
width	videodev1.h	/^	int32_t	width, height;$/;"	m	struct:video_clip
width	videodev1.h	/^	uint32_t	width,height;		\/* Its size *\/$/;"	m	struct:video_window
width	videodev2.h	/^	__s32   width;$/;"	m	struct:v4l2_rect
width	videodev2.h	/^	__u32				width;$/;"	m	struct:v4l2_pix_format_mplane
width	videodev2.h	/^	__u32			width;		\/* Frame width *\/$/;"	m	struct:v4l2_frmivalenum
width	videodev2.h	/^	__u32			width;		\/* Frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_discrete
width	videodev2.h	/^	__u32	width;		\/* width in pixels *\/$/;"	m	struct:v4l2_bt_timings
width	videodev2.h	/^	__u32	width;$/;"	m	struct:v4l2_dv_enum_preset
width	videodev2.h	/^	__u32         		width;$/;"	m	struct:v4l2_pix_format
win	videodev2.h	/^		struct v4l2_window		win;     \/* V4L2_BUF_TYPE_VIDEO_OVERLAY *\/$/;"	m	union:v4l2_format::__anon14	typeref:struct:v4l2_format::__anon14::v4l2_window
wrap_around	videodev2.h	/^	__u32		      wrap_around;$/;"	m	struct:v4l2_hw_freq_seek
write_sock	tcputils.c	/^int write_sock(int sockhandle, unsigned char *buf, int length)$/;"	f
writebuffers	videodev2.h	/^	__u32              writebuffers; \/*  # of buffers for write *\/$/;"	m	struct:v4l2_outputparm
x	spcaframe.h	/^	unsigned char x;$/;"	m	struct:client_t
x	videodev1.h	/^	int32_t	x,y;$/;"	m	struct:video_clip
x	videodev1.h	/^	uint32_t	x,y;			\/* Position of window *\/$/;"	m	struct:video_window
y	color.h	/^	unsigned char y;$/;"	m	struct:MyYUV444
y	spcaframe.h	/^	unsigned char y;$/;"	m	struct:client_t
y	videodev1.h	/^	int32_t	x,y;$/;"	m	struct:video_clip
y	videodev1.h	/^	uint32_t	x,y;			\/* Position of window *\/$/;"	m	struct:video_window
y0	color.h	/^	unsigned char y0;$/;"	m	struct:MyYUV422
y1	color.h	/^	unsigned char y1;$/;"	m	struct:MyYUV422
yuv400pto422	utils.c	/^static void yuv400pto422(int * out,unsigned char *pic,int width)$/;"	f	file:
yuv420pto422	utils.c	/^static void yuv420pto422(int * out,unsigned char *pic,int width)$/;"	f	file:
yuv422pto422	utils.c	/^static void yuv422pto422(int * out,unsigned char *pic,int width)$/;"	f	file:
yuv444pto422	utils.c	/^static void yuv444pto422(int * out,unsigned char *pic,int width)$/;"	f	file:
zig	utils.c	/^static unsigned char zig[64] = {$/;"	v	file:
zig2	utils.c	/^static unsigned char zig2[64] = {$/;"	v	file:
