20130629
nfs挂载命令：mount -t nfs -o nolock 192.168.1.100:/home/nfs /mnt 

用x264方法
ffmpeg -f v4l2 -i /dev/video0 -vcodec libx264 -qmin 10 -qmax 51 -qdiff 4 -me_range 16 -keyint_min 25 -qcomp 0.6 -b 400K  http://localhost:8090/cam1.ffm

VLC播放： http://192.168.1.103:8090/live.h264
=======

下面是一个关于产品的新想法:
智能宠物管家
一、目的：当宠物独自在家时，用户在任意地点可以通过手机（3G/WIFI）察看宠物状态，并遥控本产品和宠物互动。

二、功能：
	1.视频监控；
	2.离家远程遥控；
	3.自动充电；
	4.居家空调、电扇遥控；
	5.空气检测；
	6.遥控喂食、喂水；
	7.激光笔（逗宠物互动）；
	8.主人录音播放；
	9.空间感应，绘制室内地图，在地图上察看当前位置（辅助遥控）；（超声波、激光）
	10.宠物医疗方向；
    安全性考虑：视频是否安全不被窃取。是否有伤害宠物的设计。

三、市场，客户需求

四、销售
	1.网络直销，淘宝店
	2.宠物淘宝店代理
	3.论坛推广，微博推广
	4.实体宠物医院、商店推广

五、技术选型，难点

六、资金需求

七、周期

厂家合作
电信webcam系统

还有另外一款产品的想法：
自动清理猫厕所,目前市面上已经有产品了，但是价格较贵，有待继续研究。

	养宠物的人有个特点：勤快,他们可能觉得亲自动手是爱的体现。因此向他们推销自动化产品可能有阻力。反过来，倒是会吸引那些懒人来养宠物。





20130712
Unix编程艺术 - 笔记
调试开关显示了良好的风格，便于维护。
完美之道，不在无可增加，而在无可删减。
最佳物理行数建议400~800自然行。
项目成本和错误按程序人数的平方增长。
有一种很好的方式来验证API是否设计良好：如果试着用纯人类语言描述设计，能否把事情说清楚。
过度依赖任何一种技术或者商业模式都是错误的，相反，保持软件及其设计传统的灵活性才是长存之道。
策略（应用逻辑）相对短寿，而机制（域原语集）才会长存。
正交性：每一个动作（API调用，宏）只改变一件事，不会影响其他。
SPOT原则：不要重复自身。任何一个知识点在系统内都应当有一个唯一、明确、权威的表述。Single Point of Truth.
分层设计：自底向上，自顶向下。
为可维护性而设计。
线程提高全局复杂度，应该避免使用。线程程序不方便在多平台上移植，因为各自的标准都不一样。
$$符号显示当前进程号：echo $$，在shell编程中很常用。
无论采用何种进程间通信方法（IPC，SOCKET，临时文件，SIGNAL，共享内存，poll/select），程序的设计模式不会有多大改变。
真实世界里的编程其实就是管理复杂度的问题，当这些工具的作用不是控制复杂度而是增加复杂度的时候，最好扔掉，从零开始。
管道中所有阶段的程序是并发运行的，每一段等待前一段的输出作为输入。
避免的方法：废弃的IPC方法，RPC调用，线程。


20130711
经过最近一段时间的思考、讨论，发现以前的想法还是太幼稚了。
做产品最难的不是技术部分，而是资金支持和市场推广。
一个类似无人机、居家遥控小车这种产品，估计做下来需要100W以上。
大部分将是广告推广费用。
做产品不怕做不出来，就怕做出来没人知道，没人用。


20130628
果然和我之前的想法一样，有很多互联网公司进入路由器行业，开发智能路由，卡位布局，反而是TPlink这种传统厂商转型迟钝。
关于智能车，还有个想法，可以将手机插到车上，提供camera、3G、遥控功能。这方面需要学习android USB接口，android app编程（camera, web，GPS方面）。
手机APP进行和远端服务器的交互，传输video和控制交互，通过USB和车上控制板交互，发命令。
优先使用WIFI，其次使用3G。
这种方案优点在于利用手机已有功能，免去独立做板之麻烦,而且可以扩展很多功能。
弱点在于对于遥控车这种14岁以下孩子玩具来说，用一个独立手机作为控制端有点太奢侈了,考虑到各种碰撞，估计家长不会买帐。而且万一出现手机死机的情况。。。或者被人抢走。。。
只能面向航模发烧友，小众范围，小车和手机APP搭配卖.

做原型机可以直接用手机，但做正儿八经产品出来估计还是得自己做板，而且视频这玩意对CPU频率有要求，ardiuno根本搞不定，更何况还要加3G，GPS。

如果自己开板的话，cam,gps,3g module，估计耗费不起，无法做出一个稳定平台。

一些术语：
BVR beyond visual range,超视距
UAV Unmanned Aerial Vehicle，无人机
DVR Digital Video Record,
	car DVR，行车记录仪

20130614

1.减小画面延时，实时显示，延迟控制在200ms以内
	调试方向：1）ffmpeg参数控制，2）spcaview+编解码
	时间：2～3周

2.外网可访问画面
	调试方向：1）公共服务器，2）动态域名
	时间：2周

3.编写控制端APP，实现操控，查看状态，视频监控
	调试方向：android app
	时间：2周

4.调通板上WIFI
	时间：1周

5.改善画质
	时间：1周

6.增加喂食器、电风扇（软硬）
	时间：2周


20130608
用fork+execlp方式开启的子进程需要wait进行等待回收，父进程退出后所有子进程自动退出。
用system方式开启的进程不受父进程管理，父进程退出后不会被收回，需要手动kill。
打开、关闭摄像头服务已经完成。

下一步需要减小延迟，改善画质，调通wifi，编写控制端。

20130606
参考网页：
http://www.unlab.ca/w/Cam_Server
http://ffmpeg.org/general.html#Video-Codecs

ffserver -f ffserver.conf &
ffmpeg -f v4l2 -preset faster -i /dev/video0 http://localhost:8090/cam1.ffm

VLC播放： http://192.168.1.103:8090/cam1.mpeg

20130605
这几天移植了live555,ffmpeg，已经可以在板子上顺利运行。不过还不能截取实时视频播放，可能用ffserver+ffmpeg可以解决这个问题，至少按照官网上是这样说的。

另外又思考了物联网领域的趋势发展。
目前还出于概念炒作阶段，真正实现商品化的微乎其微，大多都还是半成品，或以开放平台形式发布，距离最终用户还有一定距离。
智能家电相关的产品和消费电子产品有所不同，至少针对用户家庭的部署是需要专门定制的，不像消费电子产品都是统一标准，买来就用。智能家电产品需要根据用户需要裁剪定制设计，还需要上门安装调试，辅导用户使用，提供完善的售后服务升级。整个过程成本较高，这是不同于消费电子的，而且也比家电产品更为复杂。
整个行业需要统一的软硬件接口规范，似乎目前还没有实现。
作为屌丝创业者，做通整个智能家居的系统似乎太过庞大，可以只专注于某一子类，只做某一产品或服务，比如系统部署调试外包，基于统一接口的控制板开发。
通过最近的实践，发现家庭路由器是整个智能家居的控制中心，TPLINK这种专业大厂完全有实力推出系统化的产品，不知道他们内部有没有这个战略设计。

目前我所关注的物联网企业：
乐为物联网（提供了自己的控制终端和网络API）http://www.lewei50.com/
yeelink（貌似有iphone周边产品买到美国）
ninja block（开放平台，有盒子）

需要加强对传感器的运用，还有控制方式的学习研究。


20130531
遇到无法解析DNS，能ping通ip地址，无法ping通域名。
把busybox换成动态链接就可以了，原因是libnss_dns, libnss_files, libresolv库需要动态加载。

然后webcam_server在板上能跑了，可以正确取到配置文件，注意wget的-O -q参数。-O 是指覆盖文件，-q是指quiet无输出。

下一步增加wifi，增加NTP。

20130530

配置arm linux dhcp上网，
http://blog.csdn.net/qinqqfirst/article/details/5968924
http://bbs.chinaunix.net/thread-1979112-1-1.html
http://blog.163.com/ljf_gzhu/blog/static/131553440201051710237619/

广州首选DNS服务器地址：202.96.128.143

广州备用DNS服务器地址：202.96.128.68

 

 

20130529
可以用被动式的控制方法，每秒去timonkun.me获取一次配置文件，根据文件内容作出响应，只要单向沟通就行，直接wget，服务器端不用部署app。

20130528
下一步：
1、修改luvcview，视频录像，定时录像，录像压缩
2、增加wifi，远程连接PC，通过socket编程，通过tftp或nfs传输图像到指定互联网位置。或者通过域名转换，让外网访问开发板。
3、增加喂食机
4、增加电风扇。
5、增加NTP，网络时间校准。

完成关机检测功能，一排按键都可以作为关机键，后面可以把按键驱动分开，单独一个按键作为关机键。

20130520
下一步需要优化的：
1. RTC配置出现IRQ FREE不配对，调用栈输出warning。
2. 摄像头驱动可以再裁剪。

板子默认使用smdkc110-rtc.c，需要修改mach-smdkc110.c文件中的rtc name为s3c2410-rtc，然后搭配下面的驱动源码。

从网上找了个QT210 RTC驱动，重新编译。
http://www.armzone.com/bbs/forum.php?mod=viewthread&tid=15

按照这里说的设置：
http://blog.chinaunix.net/uid-21857285-id-1813687.html

indent 常用的参数设置
以前的用法：indent -kr -cli4 -i4 -nut <filename>
改进的用法：indent -kr -cli4 -nut -bl4 -bli0 <filename>
注释：
-kr, Use Kernighan & Ritchie coding style.
-cli4, specifies the number of spaces that case labels should be indented to the right of the containing switch statement.
-nut, 不使用空格。
-bl4, 大括号内的缩进，这里为4个空格。
-bli0, “if”语句后大括号的缩进，一般设为“0”。
indent工具参数


20130505
买了一张32G卡，可以作为second sdcard专门存储相片，这样不会造成文件系统写满造成崩溃 

20130504

使用busybox自带的mdev系统时，注意 rcS, fstab, mdev.conf的写法。

http://wenku.baidu.com/view/08ed1ef8910ef12d2af9e773.html 
http://www.cnblogs.com/hnrainll/archive/2011/06/25/2090182.html 
http://bbs.chinaunix.net/thread-1995184-1-1.html 
http://www.doc88.com/p-312743681074.html 
http://blog.csdn.net/ce123/article/details/6673986 


Warning: unable to open an initial console.

Failed to execute /linuxrc. Attempting defaults...  
Kernel panic - not syncing: No init found. Try passing init= option to kernel

百度发现有很多朋友都遇到了相同的问题，发现造成Failed to execute /linuxrc的原因有很多种比如：

 

1、linuxrc的权限问题没有设为可执行文件，在制作根文件系统时，最好 chmod 777 linuxrc 一下，以免出现Failed to execute /linuxrc的麻烦。

2、在安装busybox的时候，没有静态编译链接库。解决方法，在busybox选项中选择静态编译，或者将交叉编译器中的lib/目录下的链接库 cp到根文件系统下的 lib/目录下，这样做出来的文件系统往往较大。

3、yaffs2 文件系统被烧写到了错误的分区。yaffs2 文件系统文件系统应烧写在nand的root分区下。

4、如果你是用的是uboot，你是否用对了yaffs的烧写指令，nand write.yaffs 而不是 nand write ，另外你的uboot是否正确修改了yaffs文件系统的烧写支持。

5、mkyaffs2image工具 做的是否成功？

 

用uboot目录下的sd_fusing工具可以顺利烧写uboot到SD卡。
SD卡版uboot参数：
setenv bootargs "noinitrd root=/dev/mmcblk0p1 rootfstype=ext3 rootwait console=ttySAC0,115200 init=/linuxrc mem=512M"
bootcmd "movi read kernel C0008000; movi read rootfs 30A00000 180000; bootm C0008000 30A00000"
ipaddr 192.168.1.111
serverip 192.168.1.100
gatewayip 192.168.1.1
netmask 255.255.255.0

try：
"noinitrd root=/dev/mtdblock2 rootfstype=ext3 rw console=ttySAC0,115200 init=/linuxrc mem=512M"
“root=/dev/mtdblock2 rootfstype=ext3 rootwait console=ttySAC1,115200”

/opt/toolchains/arm-2009q3/bin/arm-none-linux-gnueabi-gcc


20130503
下一步：
1. 制作SD卡文件系统，sd卡启动。不要干扰原有NAND系统
2. 修改luvcview程序，定时抓图。


20130502
1. 支持uvc的app是luvcview，编译移植需要SDL支持。
2. SDL交叉编译
./configure CC=/opt/toolchains/arm-2009q3/bin/arm-none-linux-gnueabi-gcc   --target=arm-linux --host=arm-linux --prefix= /home/timonkun/Workspace/webcam/SDL-ARM-linux-gcc4.4.1  --enable-static --disable-shared --disable-joystick --disable-cdrom--disable-esd --disable-alsa --disable-nasm --enable-video-x11 --enable-video-fbcon --enable-video-opengl --enable-osmesa-shared --disable-arts --without-x --enable-debug --enable-loadso --disable-video-directfb
 
 
从csdn上找了一个porting好的luvcview，改改Makefile直接编译通过，可以运行，webcam灯亮，但是由于屏保的原因看不到图像，下一步需要移植tsp驱动。


20130501
下一步：1.移植tsp驱动
2.寻找ucv支持的测试app

video0   video1   video14  video2   video21  video22

usb 1-1.2: new high speed USB device using s5p-ehci and address 6
[ 1847.480000] usb 1-1.2: New USB device found, idVendor=046d, idProduct=0825   
[ 1847.480000] usb 1-1.2: New USB device strings: Mfr=0, Product=0, SerialNumbe2
[ 1847.480000] usb 1-1.2: SerialNumber: 5DD09CE0                 
[ 1847.480000] uvcvideo: Found UVC 1.00 device <unnamed> (046d:0825)       
[ 1847.505000] input: UVC Camera (046d:0825) as /devices/platform/s5p-ehci/usb14
[ 1848.515000] 6:3:1: cannot set freq 16000 to ep 0x86  


20130430
下一步用SD卡启动，在SD卡上做系统
切勿删除Nand flash系统。

root=/dev/mtdblock2 rootfstype=yaffs init=/linuxrc mem=512 console=ttySAC0,115200

root=/dev/nfs ip=192.168.1.111:192.168.1.100:192.168.1.1:255.255.255.0::eth0:on nfsroot=192.168.1.100:/home/nfs/rootfs,nolock,proto=tcp console=ttySAC0,115200

set bootargs "noinitrd root=/dev/nfs rw nfsroot=192.168.1.100:/home/nfs/rootfs,nolock,tcp ip=192.168.1.111:192.168.1.100:192.168.1.1:255.255.255.0::eth0:off console=tty0 console=ttySAC0,115200 init=/linuxrc"

set bootargs "root=/dev/mtdblock2 rootfstype=yaffs2 console=ttySAC0,115200"
set bootcmd "nand read 0xc0008000 0x00080000 0x00800000; bootm 0xc0008000 bootdelay=3"

没有提供触屏驱动：http://www.arm9home.net/simple/index.php?t24467.html
下面是启动信息：
[   1.850000] Touchscreen driver of guitar is installing...           
[   1.850000] Install touchscreen driver for guitar.               
[   1.880000] input: Goodix TouchScreen of Guitar as /devices/virtual/input/in1
[   1.880000] Registered input device for guitar.                
[   1.880000] Request EIRQ 36 succesd on GPIO:132                
[   1.880000] End of probe for guitar.                      
[   1.930000] Goodix-TS 0-0055:  Guitar Version: GT801_1R07_2011081501_Goodix_ 
[   1.930000]  Guitar Version: GT801_1R07_2011081501_Goodix_Tech  

发现QT210板子的一个现象：重设置uboot启动参数后，会导致之前保存的参数失效，需要重新设置之前的参数，参考：http://www.armzone.com/bbs/forum.php?mod=viewthread&tid=58&extra=page%3D2
NAND启动参数：
#define CONFIG_BOOTCOMMAND "nand read C0008000 600000 400000; nand read 30A00000 B00000 180000; bootm C0008000 30A00000"
#define CONFIG_BOOTARGS "console=ttySAC0,115200 mem=512M"


20130429
next:
1. network, wifi
2. tftp, nfs server
3. kernel add webcam driver
4. porting APP of servfox.
5. Test functions.

1. Logitech C270 webcam:
Bus 002 Device 004: ID 046d:0825 Logitech, Inc. Webcam C270

$lsmod | grep videodev
videodev         98259  1 uvcvideo
v4l2_compat_ioctl32   17128  1 videodev


Logitech HD Webcam C270
10.04,9.10
046d:0825
uvcvideo
Works with Skype 2.1.0.81. After first installation, I had to log out and log in again.

Logitech HD Webcam C270
12.10
046d:0825
uvcvideo
Works with Skype 4.0.0.8. To get webcam mic working I had to reboot, go to sound settings and select it in the input tab. 
Then start start a Skype test call and select the right input in the recording tab


USB to RS232
Bus 002 Device 005: ID 0403:6001 Future Technology Devices International, Ltd FT232 USB-Serial (UART) IC
$ ls /dev/ttyUSB*
/dev/ttyUSB0
==================================
20130427

1. download webcam packets.
2. SDL compile and install successful.
3. spcaview compile successful.
4. servfox compile successful.

https://github.com/timonkun/webcam_project.git
http://mxhaard.free.fr/

.2 错误2： linux/videodev.h: No such file or directory

我今天在 Ubuntu 11.04 上编译 OpenCV2.2，又碰到这样一个问题，在安装好 Utuntu-11.04-server 以及相应的依赖包后，再用 cmake, make 编译 OpenCV2.2 出错，提示如下错误：

/home/water/OpenCV/OpenCV-2.2.0/modules/highgui/src/cap_v4l.cpp:217:28: fatal error: linux/videodev.h: No such file or directory
compilation terminated.
make[2]: *** [modules/highgui/CMakeFiles/opencv_highgui.dir/src/cap_v4l.o] Error 1
make[1]: *** [modules/highgui/CMakeFiles/opencv_highgui.dir/all] Error 2
make: *** [all] Error 2
这个问题在 OpenCV 的讨论组里也有讨论，由于 Ubuntu11.04 版本附带的 Linux 内核已经去掉了对 libv4L 的支持，因此需要自己安装 libv4L 库的头文件，尤其是 lib4l 包，该包是用命令

$ sudo apt-get install libv4l-dev
来安装的，注意这里是 libv4L 而不是 libv41；

可是，现在你继续安装，依然会出现上述错误。这是由于这样安装的 libv4L 库把头文件名称改为

/usr/include/libv4l1-videodev.h
等。知道了原因，解决办法也很简单，只需要把出错这行代码的 #include 头文件改掉，即把文件

/modules/highgui/src/cap_v4l.cpp
第 217 行的

#include <linux/videodev.h>
代码，改为下面这行

#include <libv4l1-videodev.h>
这行代码。

这样，就可以顺利进行编译了。

