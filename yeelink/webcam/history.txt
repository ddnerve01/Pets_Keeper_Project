 1019  cd ../
 1020  ls
 1021  cd programs/
 1022  ls
 1023  du -s
 1024  du -sh
 1025  cd ../tools/
 1026  ls
 1027  cp ../android-kernel-samsung-dev-full/.gitignore ./
 1028  git init
 1029  vim .git/config 
 1030  vim ../android-kernel-samsung-dev-full/.git/config 
 1031  fg
 1032  cp ../android-kernel-samsung-dev-full/.git/config .git/ -i
 1033  git add .
 1034  git commit -m "init repo"
 1035  git push
 1036  git pull
 1037  rm .gitignore 
 1038  git pull
 1039  cp ../android-kernel-samsung-dev-full/.gitignore ./
 1040  git add .
 1041  git commit --amend 
 1042  git push
 1043  rm .git* -rf
 1044  ls
 1045  rm README.md 
 1046  cd ../
 1047  minicom
 1048  cd Workspace/webcam/
 1049  ls
 1050  cd ../Linux设备驱动光盘/sd-card/source
 1051  ls
 1052  cd programs/
 1053  ls
 1054  cd ntp-4.2.6p5/
 1055  ls
 1056  ls _install/
 1057  ls _install/bin
 1058  file _install/bin/ntpd
 1059  cd _install/
 1060  ls etc
 1061  ls share/
 1062  tree
 1063  sudo apt-get install tree
 1064  tree
 1065  cd ../
 1066  ls
 1067  find *.c | xargs grep getaddrinfo
 1068  find ./ -name "*.c" | xargs grep getaddrinfo
 1069  vim ntpdate/ntpdate.c
 1070  cd ../.
 1071  cd ..
 1072  ls
 1073  find ./ -name "*8192*"
 1074  sudo cp source/android-samsung-dev-full-rtl81XX/device/samsung/smdkv210/rtl8192cu.ko /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/modules/
 1075  sudo cp source/android-samsung-dev-full-rtl81XX/device/samsung/smdkv210/8192cu.ko /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/modules/
 1076  sudo cp source/android-samsung-dev-full-rtl81XX/device/samsung/smdkv210/rtl8182c-common.ko /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/modules/
 1077  sudo cp source/android-samsung-dev-full-rtl81XX/device/samsung/smdkv210/rtl8192c-common.ko /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/modules/
 1078  find ./ -name "iwconfig"
 1079  ls
 1080  cd source/
 1081  cd android-kernel-samsung-dev-full/
 1082  make menuconfig
 1083  diff .config QT210_webcam_defconfig 
 1084  make -j4
 1085  make uImage
 1086  cp arch/arm/boot/uImage ../u-boot-samsung-dev/sd_fusing/ -i
 1087  cd ../u-boot-samsung-dev/sd_fusing/
 1088  sudo ./sd_fusing_kernel.sh /dev/sdc
 1089  cd /home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/wireless_tools.29
 1090  ls
 1091  vim Makefile 
 1092  make
 1093  make install
 1094  ls _install/
 1095  ls _install/lib
 1096  ls _install/include/
 1097  ls _install/sbin
 1098  sudo cp _install/* /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/ -i
 1099  sudo cp _install/* /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/ -ri
 1100  sudo mkdir -p /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/var/run/wpa_supplicant
 1101  sudo vim /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc/wpa_supplicant.conf
 1102  cd ../openssl-1.0.1e/
 1103  mkdir _install && ./config no-asm shared --prefix=./_install
 1104  ./config --help
 1105  vim Makefile
 1106  make
 1107  vim Makefile
 1108  make
 1109  make install
 1110  ls _install/
 1111  ls _install/include/
 1112  ls _install/include/openssl/
 1113  cd ./crypto
 1114  ls
 1115  cd ..
 1116  sudo make install
 1117  ls _install/
 1118  ls _install/lib
 1119  vim Makefile
 1120  make clean
 1121  rm -rf _install/
 1122  make clean
 1123  ./config no-asm shared --prefix=/home/timonkun/Workspace/_install
 1124  make
 1125  make install
 1126  make clean
 1127  rm ~/Workspace/_install/*
 1128  rm ~/Workspace/_install/* -rf
 1129  ./config no-asm shared --prefix=/home/timonkun/Workspace/_install
 1130  vim Makefile
 1131  make
 1132  make install
 1133  cd ../wireless_tools.29/
 1134  vim Makefile 
 1135  make
 1136  ls
 1137  cd ../
 1138  ls
 1139  cd -
 1140  vim Makefile 
 1141  cd ..
 1142  ls
 1143  cd wpa_supplicant-0.7.3/wpa_supplicant/
 1144  cp defconfig .config
 1145  vim .config
 1146  gedit .config
 1147  make
 1148  ls
 1149  file wpa_supplicant
 1150  cp wpa_supplicant /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/
 1151  cp wpa_passphrase /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/
 1152  cp wpa_cli /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/
 1153  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/
 1154  arm-none-linux-gnueabi-objdump -x wpa_cli  | grep NEEDED
 1155  arm-none-linux-gnueabi-objdump -x wpa_supplicant  | grep NEEDED
 1156  cat /etc/network/interfaces 
 1157  ifconfig
 1158  ping 192.168.1.1
 1159  ifconfig
 1160  cd ~/Workspace/_install_2/
 1161  ls
 1162  ls bin
 1163  ls include/
 1164  ls lib
 1165  history | grep "cp -d"
 1166  sudo cp -dr * /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1167  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/libcrypt*
 1168  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/pkgconfig/
 1169  cd /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1170  tar cjf ~/Workspace/webcam/busybox-1.20.2/busybox-rootfs-dynamic-20130602.tar.bz2 *
 1171  sudo tar cjf ~/Workspace/webcam/busybox-1.20.2/busybox-rootfs-dynamic-20130602.tar.bz2 *
 1172  ls /etc/wifi
 1173  ls etc/wifi
 1174  sudo ls etc/wifi
 1175  sudo ls etc -l
 1176  sudo chmod 777 -R ./
 1177  sudo ls etc -l
 1178  cd ~
 1179  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1180  minicom
 1181  ntpdate
 1182  ntpdate 12.10.191.251
 1183  ntpdate 0.cn.pool.ntp.org
 1184  sudo ntpdate 0.cn.pool.ntp.org
 1185  cp /etc/services /tftp/
 1186  ifconfig
 1187  ls /tftp
 1188  ping Name or service not known
 1189  ping 0.cn.pool.ntp.org
 1190  vim /usr/share/zoneinfo/Hongkong 
 1191  zdump Hongkong
 1192  vim /etc/localtime
 1193  ls -l /etc/localtime
 1194  cp /etc/localtime /tftp
 1195  exportfs
 1196  sudo exportfs
 1197  sudo service nfs-kernel-server restart
 1198  cd /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib
 1199  ls
 1200  sudo mkdir modules
 1201  ls modules/
 1202  mount
 1203  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1204  cd ~
 1205  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1206  sudo umount /media/E1FC-1618/
 1207  cd Workspace/webcam/busybox-1.20.2/_install_dynamic/
 1208  sudo cp -i bin/iw* /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/
 1209  sudo chmod 777 /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/iwconfig
 1210  sudo chmod 777 /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/iwlist
 1211  sudo cp -rf etc/wifi/ /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc/
 1212  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc
 1213  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc/wifi/
 1214  sudo 'ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc/wifi/
 1215  sudo ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc/wifi/
 1216  sudo vim /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc/init.d/rcS
 1217  sudo ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/modules/
 1218  sudo chmod 777 /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/modules/*.ko
 1219  sudo ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/modules/
 1220  sudo ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/modules/ -l
 1221  sudo vim /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc/init.d/rcS
 1222  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1223  cp /media/E1FC-1618/wpa_supplicant ./bin/
 1224  cp /media/E1FC-1618/wpa_cli ./bin/
 1225  cp /media/E1FC-1618/misc/wifi/wpa_supplicant.conf ./
 1226  ls etc
 1227  ls etc/wifi
 1228  sudo umount /media/E1FC-1618/
 1229  sudo cp bin/wpa_* /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/ -i
 1230  sudo mkdir /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc/data
 1231  sudo cp wpa_supplicant.conf /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc/data/
 1232  sudo vim /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/etc/init.d/rcS
 1233  sudo chmod 777 /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/wpa_*
 1234  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1235  cd bin
 1236  ls
 1237  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1238  arm-none-linux-gnueabi-ar
 1239  arm-none-linux-gnueabi-ranlib
 1240  arm-none-linux-gnueabi-lib
 1241  cd ../etc/
 1242  ls
 1243  cd wifi/
 1244  ls
 1245  cat wpa_supplicant.conf 
 1246  cd ../..
 1247  cat wpa_supplicant.conf 
 1248  arm-none-linux-gnueabi-nm
 1249  mkdir ~/Workspace/_install
 1250  cd ~/Workspace/_install/
 1251  ls
 1252  ls bin
 1253  sudo cp ./*  /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/ -ir
 1254  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib
 1255  cd /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1256  ls
 1257  sudo vim etc/init.d/rcS
 1258  vim etc/wpa_supplicant.conf 
 1259  ls var/
 1260  ls var/run/
 1261  ls var/run/wpa_supplicant/
 1262  cd ~
 1263  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1264  cd /home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/openssl-0.9.8e
 1265  patch --help
 1266  history | grep patch
 1267  patch -p1 < openssl-0.9.8e-tls-extensions.patch 
 1268  vim Makefile
 1269  mkdir ~/Workspace/_install_2
 1270  ./config no-asm shared --prefix=/home/timonkun/Workspace/_install_2
 1271  vim Makefile
 1272  make
 1273  vim Makefile
 1274  make
 1275  make install
 1276  cd ../wpa_supplicant-0.7.3/
 1277  ls
 1278  cd wpa_supplicant/
 1279  ls
 1280  vim Makefile 
 1281  vim .config
 1282  make 
 1283  make clean
 1284  make
 1285  file wpa_cli
 1286  ls -l wpa_cli
 1287  sudo cp wpa_cli /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/ -i
 1288  sudo cp wpa_passphrase /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/ -i
 1289  sudo cp wpa_supplicant /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin/ -i
 1290  arm-none-linux-gnueabi-objdump -x wpa_supplicant | grep NEEDED
 1291  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1292  cd ..
 1293  ls
 1294  ls /home/timonkun/Workspace/webcam/live555-ffmpeg/ffmpeg_install
 1295  ls /home/timonkun/Workspace/webcam/live555-ffmpeg/ffmpeg_install/lib
 1296  cd ffmpeg_install/
 1297  ls
 1298  ls lib
 1299  cd ../x264-snapshot-20130603-2245-stable/
 1300  find ./ -name "x264*"
 1301  find ./ -name "*x264*"
 1302  ls
 1303  make install
 1304  find ./ -name "lib264.a"
 1305  vim config.mak 
 1306  find ./ -name "*.a"
 1307  cp libx264.a ../ffmpeg_install/lib/
 1308  ls ../ffmpeg_install/include/
 1309  ls ../ffmpeg_install/lib
 1310  chmod 777 ../ffmpeg_install/lib/libx264.a
 1311  ls /home/timonkun/Workspace/webcam_project/live555-ffmpeg/ffmpeg_install/lib
 1312  ls
 1313  cp libx264.* ../ffmpeg_install/lib/
 1314  make install
 1315  ls /home/timonkun/Workspace/webcam_project/live555-ffmpeg/ffmpeg_install/lib
 1316  ls ../ffmpeg_install/
 1317  ls ../ffmpeg_install/lib
 1318  ls /home/timonkun/Workspace/webcam_project/live555-ffmpeg/ffmpeg_install/lib
 1319  cd ..
 1320  ls
 1321  ls ffmpeg_install/lib
 1322  cd ../..
 1323  ls
 1324  ls webcam_project/
 1325  ls webcam_project/live555-ffmpeg/
 1326  ls webcam_project/live555-ffmpeg/ffmpeg_install/
 1327  ls webcam_project/live555-ffmpeg/ffmpeg_install/lib/
 1328  rm webcam_project/ -rf
 1329  cd webcam/live555-ffmpeg/
 1330  ls
 1331  cd zlib-1.2.5/
 1332  vim config.mak
 1333  vim Makefile
 1334  make install
 1335  cd ../x264-snapshot-20130603-2245-stable/
 1336  vim config.mak 
 1337  vim Makefile 
 1338  make install
 1339  sudo apt-get install vlc
 1340  cd ..
 1341  ls
 1342  rm ffmpeg-1.2-bak/ -rf
 1343  cd live/
 1344  ls
 1345  ls mediaServer/
 1346  arm-none-linux-gnueabi-objdump -x mediaServer/live555MediaServer | grep NEEDED
 1347  arm-none-linux-gnueabi-g++
 1348  find /opt/toolchains/arm-2009q3/ -name "libstdc++*"
 1349  sudo cp -rd /opt/toolchains/arm-2009q3/arm-none-linux-gnueabi/libc/usr/lib/libstdc++.* /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib
 1350  minicom
 1351  cd ..
 1352  ls
 1353  cd busybox-1.20.2/
 1354  ls
 1355  cd /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1356  tar cjf ~/Workspace/webcam/busybox-1.20.2/busybox-rootfs-dynamic-20130604.tar.bz2 *
 1357  sudo tar cjf ~/Workspace/webcam/busybox-1.20.2/busybox-rootfs-dynamic-20130604.tar.bz2 *
 1358  sudo chown timonkun ~/Workspace/webcam/busybox-1.20.2/busybox-rootfs-dynamic-20130604.tar.bz2
 1359  cd ~
 1360  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1361  du -sh
 1362  cd Workspace/webcam/
 1363  ls
 1364  git status
 1365  git add .
 1366  git commit -m "add wifi tools, iwconfig, wpa tools."
 1367  git push
 1368  git remote
 1369  git remote -v
 1370  git fetch origin
 1371  git merge company-work
 1372  git merge origin/company-work
 1373  git branch
 1374  ls 
 1375  cd live555-ffmpeg/
 1376  ls
 1377  ls ../download/
 1378  mv live.2013.05.30.tar.gz ../download/
 1379  cd ffmpeg_install/
 1380  ls
 1381  ls share
 1382  ls share/ffmpeg/
 1383  ls include/
 1384  ls
 1385  sudo cp -rf * /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1386  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1387  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib
 1388  ls lib
 1389  ls
 1390  ls bin
 1391  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin
 1392  arm-none-linux-gnueabi-objdump -x bin/ffmpeg | grep NEEDE
 1393  cd ..
 1394  ls
 1395  find ./ -name "libavdevice.so*"
 1396  find ./ -name "libx264.*"
 1397  ls
 1398  cd x264-snapshot-20130603-2245-stable/
 1399  ls
 1400  ls output/
 1401  find ./ -name "*so*"
 1402  make install
 1403  cd ../zlib-1.2.5/
 1404  make install
 1405  cd ../x264-snapshot-20130603-2245-stable/
 1406  ls
 1407  ./configure --host=arm-none-linux-gnueabi --prefix=/home/timonkun/Workspace/webcam/live555-ffmpeg/ffmpeg_install --enable-shared --disable-asm
 1408  vim config.mak
 1409  vim Makefile 
 1410  make
 1411  arm-none-linux-gnueabi-ranlib
 1412  cd ../zlib-1.2.5/
 1413  vim Makefile
 1414  find ./ -name "libz.so*"
 1415  ls
 1416  cp -d libz.so* ../ffmpeg_install/lib/
 1417  find ./ -name "*.so*"
 1418  cd ../x264-snapshot-20130603-2245-stable/
 1419  vim Makefile 
 1420  make clean
 1421  make
 1422  arm-none-linux-gnueabi-ld
 1423  vim Makefile 
 1424  vim Ma
 1425  vim Makefile 
 1426  vim config.mak 
 1427  make
 1428  make install
 1429  cd ../ffmpeg-1.2/
 1430  ls
 1431  make install
 1432  vim Makefile 
 1433  vim config.mak
 1434  make && make install
 1435  vim config.mak 
 1436  arm-none-linux-gnueabi-ld
 1437  vim Makefile 
 1438  vim config.mak 
 1439  vim Makefile 
 1440  vim config.mak
 1441  make 
 1442  vim config.mak
 1443  make
 1444  vim config.mak
 1445  make
 1446  vim config.mak
 1447  make
 1448  vim config.mak
 1449  make clean
 1450  make
 1451  make clean
 1452  vim config.mak
 1453  ./configure --enable-cross-compile --target-os=linux --cross-prefix=arm-none-linux-gnueabi- --cc=arm-none-linux-gnueabi-gcc --enable-shared --arch=armv6 --enable-gpl --enable-libx264 --prefix=/home/timonkun/Workspace/webcam_project/live555-ffmpeg/ffmpeg_install --extra-cflags=-I/home/timonkun/Workspace/webcam_project/live555-ffmpeg/ffmpeg_install/include --extra-ldflags=-L/home/timonkun/Workspace/webcam_project/live555-ffmpeg/ffmpeg_install/lib
 1454  vim config.mak 
 1455  make
 1456  vim config.mak
 1457  make
 1458  vim doc/fate.txt
 1459  ls doc
 1460  cd ../
 1461  mv ffmpeg-1.2/ ffmpeg-1.2-bak
 1462  tar xf ../download/ffmpeg-1.2.tar.bz2 -C ./
 1463  cd ffmpeg-1.2
 1464  ls
 1465  ./configure --enable-cross-compile --target-os=linux --cross-prefix=arm-none-linux-gnueabi- --cc=arm-none-linux-gnueabi-gcc --enable-shared --arch=armv6 --enable-gpl --enable-libx264 --prefix=/home/timonkun/Workspace/webcam/live555-ffmpeg/ffmpeg_install --extra-cflags=-I/home/timonkun/Workspace/webcam/live555-ffmpeg/ffmpeg_install/include --extra-ldflags=-L/home/timonkun/Workspace/webcam/live555-ffmpeg/ffmpeg_install/lib
 1466  make
 1467  make -j4
 1468  make install
 1469  ls ../ffmpeg_install/
 1470  ls ../ffmpeg_install/lib
 1471  cd ../ffmpeg_install/
 1472  sudo cp -rd * /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1473  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib
 1474  ls /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/lib/libpthread
 1475  cd ../x264-snapshot-20130603-2245-stable/
 1476  ls
 1477  cd ../ffmpeg_install/bin
 1478  ls
 1479  arm-none-linux-gnueabi-objdump -x ffmpeg | grep NEEDED
 1480  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1481  ifconfig
 1482  ls
 1483  cd ../../live
 1484  ls
 1485  make install
 1486  vim Makefile
 1487  make 
 1488  make  -j4
 1489  make install
 1490  cd mediaServer/
 1491  sudo cp live555MediaServer /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin
 1492  cd ../proxyServer/
 1493  sudo cp live555ProxyServer /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/bin
 1494  cd ..
 1495  ls
 1496  cd liveMedia/
 1497  ls
 1498  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1499  cd ../../..
 1500  git status
 1501  git add .
 1502  git rm live555-ffmpeg/live.2013.05.30.tar.gz
 1503  git status
 1504  git rm live555-ffmpeg/ffmpeg-1.2/doc/fate.txt
 1505  git rm live555-ffmpeg/ffmpeg-1.2/doc/fate.txt.d
 1506  git status
 1507  git commit -m "runing live555+ffmpeg success."
 1508  git branch
 1509  git push
 1510  cd Workspace/
 1511  ls
 1512  mv webcam/ webcam_project
 1513  cd webcam_project/
 1514  ls
 1515  vim .git/config 
 1516  git branch
 1517  history | grep git
 1518  git fetch origin
 1519  git merge origin/company-work
 1520  git branch
 1521  git log
 1522  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1523  minicom
 1524  cd ~/Workspace/webcam_project/busybox-1.20.2/_install_dynamic/lib/
 1525  mkdir -p modules/2.6.35.7
 1526  mv *.ko modules/
 1527  ls modules/
 1528  cd ../../..
 1529  git status
 1530  git add .
 1531  git status
 1532  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1533  cd ../Linux设备驱动光盘/sd-card/source/android-kernel-samsung-dev-full/
 1534  make menuconfig
 1535  make zImage
 1536  make modules
 1537  make uImage
 1538  cp arch/arm/boot/uImage ../u-boot-samsung-dev/sd_fusing/
 1539  cp drivers/media/video/gspca/*.ko ~/Workspace/webcam_project/busybox-1.20.2/_install_dynamic/lib/
 1540  history | grep ffmpeg
 1541  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1542  cd ../u-boot-samsung-dev/sd_fusing/
 1543  ls
 1544  history | grep sd_fus
 1545  sudo ./sd_fusing_kernel.sh /dev/sdc
 1546  cd -
 1547  diff .config QT210_webcam_defconfig 
 1548  cp .config QT210_webcam_defconfig 
 1549  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1550  ifconfig
 1551  cd Workspace/webcam_project/
 1552  ls
 1553  vim worklog.txt
 1554  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1555  fg
 1556  git status
 1557  git add .
 1558  git status
 1559  git commit -m "ffserver+ffmpeg capture & stream success."
 1560  git push
 1561  minicom
 1562  ffplay -h
 1563  ping 192.168.1.103
 1564  sudo apt-get install ffmpeg ffplay
 1565  sudo apt-get install ffmpeg 
 1566  ffplay -f mjpeg udp://192.168.1.103:8099
 1567  cd Workspace/webcam_project/
 1568  ls
 1569  vim worklog.txt
 1570  ffplay -f mjpeg udp://192.168.1.103
 1571  ffplay -f mjpeg -rtsp_transport udp udp://192.168.1.103:8099
 1572  sudo wireshark
 1573  cd Workspace/
 1574  cd webcam_project/
 1575  ffplay -f mpegvideo http://192.168.1.103:8090/cam1.mpeg
 1576  ffplay  http://192.168.1.103:8090/cam1.mpeg
 1577  ffplay -f mpegvideo -nocache http://192.168.1.103:8090/cam1.mpeg
 1578  ffplay -f mpegvideo  http://192.168.1.103:8090/cam1.mpeg
 1579  ffplay -f mpeg2video  http://192.168.1.103:8090/cam1.mpeg
 1580  cd Workspace/webcam_project/
 1581  vim worklog.txt
 1582  cd stream_video/
 1583  ls
 1584  ffplay -f mjpeg slamtv60.264 
 1585  ffplay -f h264 slamtv60.264 
 1586  fg
 1587  vim ../worklog.txt
 1588  ffplay -f mpeg http://192.168.1.103:8090/cam1.mpeg
 1589  fg
 1590  vim ../worklog.txt
 1591  ffplay -f mpeg2video udp://192.168.1.103:8099
 1592  ffplay  udp://192.168.1.103:8099
 1593  ffplay -h
 1594  ffplay -h | grep mpeg
 1595  ffplay -f mpegvideo udp://192.168.1.103:8099
 1596  ffplay udp://192.168.1.103:8099
 1597  ffplay -f h264 udp://192.168.1.103:8099
 1598  ping 192.168.1.103
 1599  ffplay -f yuy2 udp://192.168.1.103:8099
 1600  ffplay -f yuv2 udp://192.168.1.103:8099
 1601  ffplay -f yuv udp://192.168.1.103:8099
 1602  ffplay -f mpeg2video udp://192.168.1.103:8099
 1603  ffplay -f rawvideo udp://192.168.1.103:8099
 1604  ffplay -f mpegvideo udp://192.168.1.103:8099
 1605  ffplay -f mpeg2video udp://192.168.1.103:8099
 1606  ffplay  udp://192.168.1.103:8092
 1607  ffplay  udp://192.168.1.103:8090
 1608  ffmpeg -i udp://192.168.1.103:8099 -vcodec copy output.mp4
 1609  ffplay -f mpegvideo -i udp://192.168.1.103:8099
 1610  ffplay -f mpegvideo -i rtp://192.168.1.103:8099
 1611  ffplay -f mpegvideo  rtp://192.168.1.103:8099
 1612  ffplay -f mpegvideo  rtp://192.168.1.103:8099/cam1.mpeg
 1613  ffplay -f mpegvideo  rtp://192.168.1.103:8099/cam1.ffm
 1614  ffplay -f mpegvideo udp://192.168.1.103:8099
 1615  ffplay  udp://192.168.1.103:8099
 1616  ffplay -f h264 udp://192.168.1.103:8099
 1617  fg
 1618  vim ../worklog.txt
 1619  cd ../live555-ffmpeg/ffmpeg-1.2/
 1620  vim doc/ffserver.conf 
 1621  minicom
 1622  cd Workspace/webcam_project/
 1623  git branch
 1624  git fetch origin
 1625  git merge company-work
 1626  git branch
 1627  history | grep company-work
 1628  git merge origin/company-work
 1629  git log
 1630  minicom
 1631  cd Workspace/webcam_project/webcam_server/
 1632  ls
 1633  vim webcam_server.c
 1634  make
 1635  cp webcam_server.arm /tftp/
 1636  `date`
 1637  date
 1638  vim webcam_server.c
 1639  ls
 1640  make
 1641  vim webcam_server.c
 1642  make
 1643  ./webcam_server
 1644  make
 1645  cp webcam_server.arm /tftp/
 1646  git status
 1647  git add .
 1648  git commit -m "webcam_server update, add ffmpeg+server."
 1649  git push
 1650  git status
 1651  git add .
 1652  git log
 1653  git commit --amend
 1654  git status
 1655  cd ..
 1656  git add .
 1657  git commit --amend
 1658  git status
 1659  sudo service nfs-kernel-server restart
 1660  sudo exportfs
 1661  sudo vim /etc/exports 
 1662  sudo exportfs -rv
 1663  sudo umount /media/9b59165b-9fca-4c22-90a3-c4df1b29e6f9/
 1664  sudo apt-get install v4l-ctl
 1665  sudo apt-get install v4l2-ctl
 1666  sudo apt-get install v4l2-utils
 1667  sudo apt-get install v4l-utils
 1668  v4l2-ctl -L
 1669  v4l2-ctl -l
 1670  v4l2-ctl 
 1671  v4l2-ctl --all
 1672  cd webcam_server/
 1673  vim webcam_server.c
 1674  make
 1675  vim webcam_server.c
 1676  make
 1677  cp webcam_server.arm /tftp/
 1678  vim webcam_server.c
 1679  vim webcam_server
 1680  vim webcam_server.c
 1681  ping timonkun.me
 1682  vim webcam_server.c
 1683  make
 1684  cp webcam_server.arm  /tftp/
 1685  vim webcam_server.c
 1686  make
 1687  make clean
 1688  make
 1689  cp webcam_server.arm /tftp/
 1690  cd Workspace/
 1691  ls
 1692  cd webcam_project/
 1693  ls
 1694  cd webcam_server/
 1695  ls
 1696  vim webcam_server.c
 1697  man fclose
 1698  fg
 1699  make
 1700  cd /media/1C6459C164599DF8/Temp
 1701  wget timonkun.me/download/timonkunme_html_backup_20130614.tar.bz2
 1702  cd Workspace/webcam_project/
 1703  vim worklog.txt
 1704  git status
 1705  vim webcam_server/webcam_server.c
 1706  rm stream_video/cam*
 1707  git status
 1708  git add .
 1709  git commit -m "[webcam_server] finish video open/close, video surveillance in local area network."
 1710  git push
 1711  history | grep ssh
 1712  ssh timonkun.me
 1713  ssh lingkunme@timonkun.me
 1714  ssh timonkun@timonkun.me
 1715  minicom
 1716  cd Workspace/webcam_project/webcam_client/bin
 1717  ls
 1718  chmod 777 webcam.apk 
 1719  adb push webcam.apk /data/
 1720  adb shell
 1721  adb push webcam.apk /mnt/sdcard/
 1722  adb install webcam.apk 
 1723  adb uninstall com.samsung.webcam
 1724  cd ../../
 1725  git status
 1726  git log
 1727  git branch
 1728  git add .
 1729  git commit -m "webcam client, android control app."
 1730  git push
 1731  git pull
 1732  git status
 1733  git push
 1734  vim worklog.txt
 1735  ls
 1736  cd Workspace/
 1737  cd webcam_project/
 1738  ls
 1739  cd webcam_client/
 1740  ls
 1741  git status
 1742  git diff 
 1743  cd ..
 1744  git add .
 1745  adb shell
 1746  ping timonkun.me
 1747  cd Workspace/webcam_project/
 1748  vim worklog.txt
 1749  ping kaffeel.org
 1750  vim webcam_client/control.txt 
 1751  git add .
 1752  git status
 1753  minicom
 1754  ls
 1755  cd Workspace/webcam_project/
 1756  ls
 1757  cd webcam_server/
 1758  ls
 1759  vim webcam_server.c
 1760  ping timonkun.me
 1761  fg
 1762  cd Workspace/webcam_project/
 1763  ls
 1764  cd webcam_server/
 1765  ls
 1766  vim ffserver.conf 
 1767  minicom
 1768  cd Workspace/webcam_project/
 1769  vim worklog.txt
 1770  diff worklog.txt ~/下载/worklog.txt 
 1771  cp ~/下载/worklog.txt ./ -i
 1772  git status
 1773  git add .
 1774  git status
 1775  git commit -m "update for webcam worklog and app"
 1776  git push
 1777  git branch
 1778  cd Workspace/webcam_project/
 1779  gedit worklog.txt &
 1780  minicom
 1781  cd Workspace/webcam_project/
 1782  ls
 1783  cd webcam_server/
 1784  ls
 1785  vim ffserver.conf 
 1786  ifconfig
 1787  sudo service nfs-kernel-server restart
 1788  exportfs
 1789  sudo exportfs
 1790  ls /home/nfs
 1791  ls /home/nfs/rootfs/
 1792  vim /home/nfs/ffserver.conf 
 1793  cd ..
 1794  ls
 1795  cd live555-ffmpeg/
 1796  ls
 1797  cd ffmpeg-1.2/
 1798  ls
 1799  find ./ -name "encoder.c"
 1800  find ./ -name "*.c" | xargs grep "broken ffmpeg default settings detected"
 1801  cd ..
 1802  ls
 1803  cd x264-snapshot-20130603-2245-stable/
 1804  ls
 1805  vim encoder/encoder.c 
 1806  find *
 1807  find * | xargs grep "m_VCtx->rc_min"
 1808  find * | xargs grep "flag2"
 1809  cd ../ffmpeg-1.2/
 1810  ls
 1811  find * | xargs grep "m_VCtx->codec_type"
 1812  find * | xargs grep "X264_PART_"
 1813  find * | xargs grep "main"
 1814  find * | xargs grep "bitrate"
 1815  find * | xargs grep "rc_min_rate"
 1816  find *.c | xargs grep "rc_min_rate"
 1817  vim ffserver.c
 1818  find *.c | xargs grep avcodec_open
 1819  cd ../x264-snapshot-20130603-2245-stable/
 1820  find *.c | xargs grep avcodec_open
 1821  cd ..
 1822  find *.c | xargs grep avcodec_open
 1823  find * | xargs grep avcodec_open
 1824  cd ffmpeg-1.2/
 1825  find * | xargs grep avcodec_open
 1826  find * | xargs grep avcodec_open
 1827  ffplay http://192.168.1.103:8090/live.h264
 1828  ffplay -vcodec libx264 http://192.168.1.103:8090/live.h264
 1829  ffplay -v:c libx264 http://192.168.1.103:8090/live.h264
 1830  ffplay -codec libx264 http://192.168.1.103:8090/live.h264
 1831  ffplay http://192.168.1.103:8090/live.h264
 1832  cd ../
 1833  cd ../webcam_server/
 1834  ls
 1835  cd Workspace/webcam_project/
 1836  ls
 1837  git status
 1838  git diff
 1839  vim worklog.txt
 1840  git add .
 1841  git commit -m "worklog update."
 1842  git pull
 1843  vim worklog.txt
 1844  git status
 1845  git add .
 1846  git commit -m "worklog update"
 1847  git push
 1848  gedit worklog.txt
 1849  cd Workspace/webcam_project/
 1850  gedit worklog.txt &
 1851  cal
 1852  gedit worklog.txt &
 1853  git add .
 1854  cd Workspace/webcam_project/
 1855  gedit worklog.txt &
 1856  cd Workspace/webcam_project/
 1857  ls
 1858  diff worklog.txt worklog (1).txt
 1859  diff worklog.txt worklog_2.txt 
 1860  sudo add-apt-repository ppa:wiznote-team
 1861  sudo apt-get update
 1862  sudo apt-get install wiznote
 1863  ls
 1864  cd /home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/android-kernel-samsung-dev-full
 1865  make menuconfig
 1866  cd Workspace/webcam_project/
 1867  ls
 1868  git status
 1869  git add worklog.txt
 1870  git status
 1871  git diff
 1872  git diff HEAD
 1873  git commit -m "worklog update."
 1874  git push
 1875  vim worklog.txt
 1876  cd ..
 1877  ls
 1878  cd programs/
 1879  ls
 1880  mkdir python
 1881  cd python
 1882  vim objvar.py
 1883  chmod a+x objvar.py 
 1884  python -V
 1885  ./objvar.py 
 1886  vim objvar.py
 1887  ./objvar.py 
 1888  vim objvar.py
 1889  vim inherit.py
 1890  chmod a+x inherit.py 
 1891  ./inherit.py 
 1892  vim inherit.py
 1893  ./inherit.py 
 1894  vim inherit.py
 1895  ./inherit.py 
 1896  vim inherit.py
 1897  ./inherit.py 
 1898  vim inherit.py
 1899  ./inherit.py 
 1900  vim inherit.py
 1901  ./inherit.py 
 1902  cd Workspace/programs/
 1903  ls
 1904  python -V
 1905  arm-none-linux-gnueabi-gcc -v
 1906  cd /home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/Python-2.7.5
 1907  ./configure --target=arm-linux --prefix=/home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/Python-2.7.5/_install
 1908  vim Makefile
 1909  ./configure --host=arm-none-liux-gnueabi --prefix=/home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/Python-2.7.5/_install
 1910  ./configure --host=arm-none-linux-gnueabi --prefix=/home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/Python-2.7.5/_install
 1911  ./configure --host=arm-none-linux-gnueabi- --prefix=/home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/Python-2.7.5/_install
 1912  ./configure --target=arm-none-linux-gnueabi --prefix=/home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/Python-2.7.5/_install
 1913  vim Makefile
 1914  ./configure --host=arm-linux --prefix=`pwd`/_install
 1915  ./configure --host=arm-linux --build=arm-none-linux-gnueabi- --prefix=`pwd`/_install
 1916  ./configure --host=arm-linux --build=arm-none-linux-gnueabi --prefix=`pwd`/_install
 1917  ./configure --host=arm-linux --build=arm-none-linux-gnueabi --prefix=`pwd`/_install --disable-ipv6
 1918  ./configure --target=arm-linux --build=arm-none-linux-gnueabi --prefix=`pwd`/_install 
 1919  vim Makefile
 1920  make
 1921  arm-linux-
 1922  arm-linux-gcc
 1923  ./configure --target=arm-linux --build=arm-none-linux-gnueabi --prefix=`pwd`/_install --disable-ipv6
 1924  ./configure --host=arm-linux --prefix=`pwd`/_install --disable-ipv6 --enable-shared
 1925  ./configure --host=arm-linux --build=arm-none-linux-gnueabi- --prefix=`pwd`/_install --disable-ipv6 --enable-shared
 1926  ./configure --host=arm-linux --build=arm-none-linux-gnueabi --prefix=`pwd`/_install --disable-ipv6 --enable-shared
 1927  ./configure --host=arm-linux --prefix=`pwd`/_install
 1928  ./configure --target=arm-linux --prefix=`pwd`/_install
 1929  vim Makefile
 1930  make
 1931  vim Makefile
 1932  make
 1933  arm-none-linux-gnueabi-strip
 1934  arm-none-linux-gnueabi-ar
 1935  cd /home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/Python-2.6.8
 1936  ./configure --host=arm-linux --prefix=`pwd`/_install
 1937  vim Makefile
 1938  make
 1939  vim Include/pyport.h 
 1940  cd ..
 1941  rm -rf Python-2.6.8
 1942  rm -rf Python-2.6.8*
 1943  cd Python-2.7.5/
 1944  ls
 1945  vim Include/pyport.h 
 1946  make
 1947  vim Include/pyport.h 
 1948  ls /usr/include/python2.7/
 1949  export CFLAGS += “$CFLAGS  -I/usr/include/python2.7"
 1950  export CFLAGS += "$CFLAGS  -I/usr/include/python2.7"
 1951  export CFLAGS +="$CFLAGS -I/usr/include/python2.7"
 1952  vim Makefile
 1953  make
 1954  vim Makefile
 1955  echo $CFLAGS
 1956  fg
 1957  vim Include/pyport.h 
 1958  find * | grep xopen_
 1959  find ./ -name "xopen_*"
 1960  find ./ -name "pyconfig*"
 1961  vim pyconfig.h
 1962  ctags
 1963  ctags -c
 1964  history | grep ctags
 1965  vim Include/pyport.h 
 1966  find * | xargs grep LONG_BIT
 1967  vim PC/pyconfig.h 
 1968  make
 1969  vim PC/pyconfig.h 
 1970  vim Makefile
 1971  make
 1972  vim Makefile
 1973  make
 1974  vim Makefile
 1975  make
 1976  vim Makefile
 1977  make
 1978  vim Makefile
 1979  ranlib
 1980  arm-none-linux-gnueabi-ar
 1981  arm-none-linux-gnueabi-ranlib
 1982  cd /home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/sqlite-amalgamation-3071700
 1983  ls
 1984  cd /home/timonkun/Workspace/Linux设备驱动光盘/sd-card/source/programs/sqlite-autoconf-3071700
 1985  ./configure --host=arm-linux --prefix=`pwd`/_install --enable-shared --disable-readline --disable-dynamic-extensions
 1986  vim Makefile
 1987  make
 1988  vim Makefile
 1989  make
 1990  vim Makefile
 1991  make
 1992  vim Makefile
 1993  fg
 1994  make clean
 1995  make
 1996  arm-none-linux-gnueabi-ln
 1997  cd Workspace/webcam_project/
 1998  ls
 1999  mkdir yeelink
 2000  cd yeelink/
 2001  mkdir webcam
 2002  cd webcam/
 2003  vim datafile.txt
 2004  curl --request GET --header "U-ApiKey:6640382536cf31808bb94e83fe4e8f4c" http://api.yeelink.net/v1.0/device/4014/sensor
 2005  curl --request POST --data-binary @datafile.txt --header "U-ApiKey:6640382536cf31808bb94e83fe4e8f4c" http://api.yeelink.net/v1.0/device/4014/sensor
 2006  curl --request POST --data-binary @datafile.txt --header "U-ApiKey:6640382536cf31808bb94e83fe4e8f4c" http://api.yeelink.net/v1.0/device/4014/sensor/5736/photos
 2007  curl --request GET --header "U-ApiKey:6640382536cf31808bb94e83fe4e8f4c" http://api.yeelink.net/v1.0/device/4014/sensor/5736/photos
 2008  curl --request GET --header "U-ApiKey:6640382536cf31808bb94e83fe4e8f4c" http://api.yeelink.net/v1.0/device/4014/sensors
 2009  curl --request PUT --data-binary @datafile.txt --header "U-ApiKey:6640382536cf31808bb94e83fe4e8f4c" http://api.yeelink.net/v1.0/device/4014/sensor/5736
 2010  ls
 2011  vim datafile.txt 
 2012  curl --request GET --header "U-ApiKey:6640382536cf31808bb94e83fe4e8f4c" http://api.yeelink.net/v1.0/device/4014/sensors
 2013  vim datafile.txt 
 2014  curl --request PUT --data-binary @datafile.txt --header "U-ApiKey:6640382536cf31808bb94e83fe4e8f4c" http://api.yeelink.net/v1.0/device/4014/sensor/5736
 2015  curl --request GET --header "U-ApiKey:6640382536cf31808bb94e83fe4e8f4c" http://api.yeelink.net/v1.0/device/4014/sensors
 2016  curl --request POST --data-binary @P-1.jpg --header "U-ApiKey:6640382536cf31808bb94e83fe4e8f4c" http://api.yeelink.net/v1.0/device/4014/sensor/5736/photos 
 2017  history | grep openssl
 2018  history > history.txt
